{"id": 0, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n =========================\nHTTP plugins for buildout\n=========================\n\nHTTP Basic-Authentication\n=========================\n\nWith this extension it is possible to define password protected\npackage directories without specifying the password and user in the\nurl.\n\nLet's take the example protected location, ``http://www.example.com/dist``\n\nFirst we would need to add the extension and the find link for our\nprotected location::\n\n    [buildout]\n    find-links = http://www.example.com/dist\n    extensions = lovely.buildouthttp\n\nThen create the ``.httpauth`` password file, this file contains all\nauthentication information. The ``.httpauth`` file can be placed in the root of\nthe current buildout or in the ``~/.buildout`` directory. Each row consists of\n``realm, uri, username, password``.\n\nHere is an example of the ``.httpauth`` file::\n\n    Example com realm, http://www.example.com, username, secret\n\nIt is also possible to leave the secret away. Then you will be prompted for the\nsecret whenever buildout is run::\n\n    Example com realm, http://www.example.com, username\n\nNote that basic auth also works with any recipe using\nzc.buildout.download (e.g. hexagonit.recipe.download) because this\nextension also overwrites the url opener of zc.buildout.\n\nGithub Private Downloads\n========================\n\nPrivate downloads on http://github.com/ require authorization to download.\nThe previous token-based authentication system based on the v2 API (see\nhttp://github.com/blog/170-token-authentication) is no longer supported by\nGitHub as of June 1 2012; You must now request a v3 API token and use that\ninstead.\n\nRequesting a new API token can be done in one line using ``curl`` (please\nsubstitute your own github username and password):\n\n    curl -s -X POST -d '{\"scopes\": [\"repo\"], \"note\": \"my API token\"}' \\\n        https://${user}:${pass}@api.github.com/authorizations | grep token\n\nNow set the value of github.token to the hash returned from the command above:\n\n    git config --global github.accesstoken ${token}\n\nNote that the v3 API does not require your github username to work, and can\nbe removed from your configuration if you wish.\n\nFor details on managing authorization GitHub's OAuth tokens, see the API\ndocumentation: http://developer.github.com/v3/oauth/#oauth-authorizations-api\n\nURL to download a tag or branch::\n\n    https://api.github.com/repos/<gituser>/<repos>/tarball/master\n\nURL to downlad a \"download\"::\n\n    https://github.com/downloads/<gituser>/<repos>/<name>\n\nAs some eggs on PyPi also use public Github download URLs you may want to\nwhitelist the repos that authentication is required for as Github will\nreturn a 401 error code even for public repositories if the wrong auth\ndetails are provided.\nTo do this just list each repo in the format `<gituser>/<repos>` one per\nline in the buildout config `github-repos`::\n\n    [buildout]\n    extensions = lovely.buildouthttp\n    github-repos = lovelysystems/lovely.buildouthttp\n                   bitly/asyncmongo\n\n\nCredits\n=======\n\nThanks to Tarek Ziade, Kevin Williams and Wesley Mason for bugfixes and extensions.\n\n", "model_answer": "0", "alternative_method": "", "label": 0}
{"id": 1, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n ExcelToWiki\n-----------\n\n\nUse is trivial as shown below::\n\n    from exceltowiki import exceltowiki \n    import exceltowiki\n\n    e2w = excelToWiki(\"./test.xlsx\",[\"Sheet1\"],\"blue\",\"yellow\")\n    print e2w.sheetnames\n    print e2w.getSheet(\"Sheet1\")\n    print e2w.getWorkbook()\n    e2w = excelToWiki(\"./test.xlsx\") \n    # print sheet names in the excel workbook \n    print e2w.sheetnames \n    # print wiki text for sheet named Sheet1 \n    print e2w.getSheet(\"Sheet1\") \n    # print wiki text for entire workbook \n    print e2w.getWorkbook() \n\nOptions are:: \n\n    exceltowiki(excelworkbook, [list of sheet names to process], caption foreground color, caption background color, preserve widths) \n\nWhere caption is set from the sheet name (no way to currently modify this). \n\nFeatures \n-------- \n\nexceltowiki can capture: \n\n- Font styling: bold, underline, strikethrough \n- Cell styling: foreground color, background color \n- Sheet features: merged cells are captured, sheet name is captured as caption to the wiki table \n\n\nexceltowiki currently cannot capture anything more complex than the above list. Features such as 'format as table', conditional formatting, and other advanced items are not inspected or captured. For these, only the data value in the cells will be captured. \n\nRelease Notes: 0.1.19\n--------------------- \nAdded a better handler for date format detection and conversion. This is still very hacky but it works. \nMS date format to datetime strftime is never going to be straight forward until there is a method to \nobtain the resulting formatted string by itself.\n\nRelease Notes: 0.1.18\n--------------------- \nInline double-pipe separator had a bug where a newline in the cell requires the wiki table to use a single pipe character.\n\nRelease Notes: 0.1.17\n--------------------- \nFor better presentation of empty cells in wiki the cell contents are replaced with '&nbsp;' this retains any spacing/sizing related nature of the table which would otherwise collapse.\n\nRelease Notes: 0.1.16\n--------------------- \nWiki text within a cell was not being formatted via wiki because of being inlined. Slight update to fix this.\nThe 'INLINE_FMT' flag is now deprecated.\n\n\nRelease Notes: 0.1.15\n--------------------- \nAdded preserve_width option\nUpdate to latest openpyxl - note that newer openpyxl broke something in colwidth with 0.1.14\n\nRelease Notes: 0.1.14\n--------------------- \n\nMinor update\n\n\nRelease Notes: 0.1.13\n--------------------- \n\nAdded a version from git tag\nHandling numeric, date and percent values a bit better\n\nRelease Notes: 0.1.12\n--------------------- \n\nCleanup release\n\n\nRelease Notes: 0.1.11 \n--------------------- \nAdded support for inline format with double-pipe notation.\nRemoved unneeded imports.\nMinor fixes to value retrieval\n\nRelease Notes: 0.1.10 \n--------------------- \n\nPackaging was not following best practice of examples within the package. \nBug fix: Unicode was not correctly handled. \n\nRelease Notes: 0.1.9 \n-------------------- \n\nMinor font issues fixed. Italics and font-name were being ignored. \nSome other minor items fixed. \n\nRelease Notes: 0.1.8 \n-------------------- \n\nAdded support for hyperlinks: \n\n- Unfortunately openpyxl does not yet support reading hyperlinks. \n- The way to enter hyperlinks is to place the hyperlink and wiki display text in a cell, such as: \"http://yahoo.com Yahoo!\" \n- Any cell containing \"http\" will be wrapped within []s. \n\nBugs: \n----- \n\n- Caption was missing, added it back. \n- Caption style was incorrectly set. fixed. \n- unneeded parameter headerRow removed. \n- unneeded cellToWiki method removed \n\n\nRelease Notes: 0.1.7 \n-------------------- \nCleaner output of wiki text. \n- Common cell styles across the row are boiled up to row style. \n- Common row style items are boiled up to table. \n\n\nRelease Notes: 0.1.6 \n-------------------- \nMinor: black was being ignored for bg color as well. Instead of only the fg color \n\nRelease Notes: 0.1.5 \n-------------------- \n\n* Added border as default. \n* Removed font color from markup when color is black  \n\n", "model_answer": "0", "alternative_method": "", "label": 0}
{"id": 2, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n =============\npyvenvwrapper\n=============\n\npyvenvwrapper_ is a small and lightweight set of Bash script functions, that enhance the use of Python standard library venv_ module for management of virtual environments.\nBetween Python 3.2 and Python 3.6 venv_ module was wrapped in a pyvenv_ script, that is now officially deprecated in favor of direct usage of venv_ module.\npyvenvwrapper_ functions allow to create and manipulate virtual environments and corresponding projet folders in a convenient way using only their names.\nAdditional feature is automatic activation/deactivation of virtual environment when changing current working directory in the shell.\nSince venv_ and virtualenv_ use similar technics for virtual environments, pyvenvwrapper can be used for both, though main aim is venv_.\n\n**pyvenvwrapper** can be used to manage virtual environments and corresponding project folders or only virtual environments. In former case it assumes that the same name is used for virtual environment folder and the project folder which uses this virtual environment. The directories containing this folders are configured using special variables.\n\nThe idea to create pyvenvwrapper is inspired by using virtualenvwrapper_, which at that moment didn't have support for pyvenv_ and venv_ virtual environment management. *pyvenvwrapper code is in no way related to virtualenvwrapper code.*\n\n`Full pyvenvwrapper documentation`_ is available online at readthedocs.org.\n\n------------------------------------------------------------\n\n-------------\nCompatibility\n-------------\npyvenvwrapper functions are written and tested for Bash shell, however they might work with other Bash-like shells.\npyvenvwrapper is pure shell script with calls to common system tools, so it doesn't care much on what Python version is used, therefore it should work with any Python 2 or Python 3 version. Some features will require '*pip*'.\npyvenvwrapper originally was intended to be used with '*pyvenv*' tool ('*venv*' module in Python standard library), but it supports '*virtualenv*' tool too.\n\n------------\nInstallation\n------------\nTo install **pyvenvwrapper**:\n\n1. Run '*pip install pyvenvwrapper*', this will download and install required files on your machine.\n\n2. Run '*pyvenvwrapper_enable*', this will enable pyvenvwrapper for current user by adding the following lines to user's *.bashrc* file::\n\n         source [path_to_pyvenvwrapper]/pyvenvwrapper_settings\n         source [path_to_pyvenvwrapper]/pyvenvwrapper\n\n   There's also '*pyvenvwrapper_disable*' command, which disables pyvenvwrapper for current user by removing those lines.\n\n3. Reboot your shell or run '*source ~/.bashrc*'.\n\n4. Run '*pyvenvwrapper*' to see available commands and start using **pyvenvwrapper** or see `Settings`_ to customize its behavior first.\n\nSee additional details on installation in the `documentation`_.\n\n--------\nCommands\n--------\npyvenvwrapper includes the following functions, that are used as common commands in Bash:\n\n        **mkvenv** - creates virtual environment and optionally related project folder;\n\n        **workon** - activates existing virtual environment and optionally changes current working directory to related project folder;\n\n        **deact** - deactivates currently active virtual environment and optionally changes current working directory back to the one used before this virtual environment activation;\n\n        **lsvenv** - prints existing virtual environments' names, or if used with virtual environment name as argument prints packages installed in it;\n\n        **cdvenv** - changes current working directory to specified virtual environments directory, or related project directory depending on provided options;\n\n        **cpvenv** - copies existing virtual environment with new name and optionally related project folder;\n\n        **rmvenv** - deletes existing virtual environment and optionally related project folder.\n\nAll commands support auto-completion with existing virtual environment names, and display usage and possible options when called with **-h** or **--help** options.\n\nAll commands can have added behavior before and/or after execution via custom scripts that can be assigned to special hook variables. See \"Hooks\" section in docs for details.\n\n--------\nSettings\n--------\npyvenvwrapper uses the following variables for settings (provided with defaults), which you can redefine in *pyvenvwrapper_settings* file in *pyvenvwrapper* package or in the end of user's *.bashrc* file:\n\n        **PYVENVWRAPPER_ENV_DIR=~/.virtualenvs** - directory to keep virtula environment folders, the only mandatory setting. \n\n        **PYVENVWRAPPER_PROJ_DIR=~/projects** - directory to keep project folders;\n\n        **PYVENVWRAPPER_CD_ON_WORKON=true** - enables/disables automatic current working directory change to related project folder after virtual environment activation using workon command;\n\n        **PYVENVWRAPPER_CD_ON_DEACT=true** - enables/disables automatic current working directory change after deact command execution back to the one used before virtual environment activation;\n\n        **PYVENVWRAPPER_ACTIVATE_ON_CD=true** - enables/disables automatic activation of virtual environment when changing current working directory using cd/popd/pushd command to any directory related to existing virtual environment or its corresponding project, and virtual environment deactivation when exiting it. This is made possible via redefining Bash's cd, popd, pushd built-ins, thought it's done in a transparent fashion and shouldn't affect their use in other contexts.\n\n-------\nSupport\n-------\nAny questions or issues can be reported via `GitHub Issues`_.\n\n---------\nChangelog\n---------\n\n^^^^^^^\n  1.0.0\n^^^^^^^\n- Added support for creation of virtual environments using `venv` module (`python -m venv`). It is now preferred by default with a fallback to `pyvenv` and `virtualenv`.\n  Using `venv` directly is officially recommended for creating virtual environments since Python 3.5. `pyvenv` script is officially deprecated in Python 3.6.\n- Added new option `-b`/`--python` to `mkvenv` command, that allows to specify which Python interpreter executable to use for new virtual environment. This option works with `venv` and `virtualenv`.\n\n^^^^^^^\n  0.1.0\n^^^^^^^\n- Initial version with all the main features.\n\n-------\nLicense\n-------\n*The MIT License (MIT)*\n\n**Copyright (c) 2016 Nikita Solovyev**\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n**THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.**\n\n.. _pyvenv: https://docs.python.org/3.2/library/venv.html\n.. _venv: https://docs.python.org/3/library/venv.html\n.. _virtualenv: https://pypi.python.org/pypi/virtualenv\n.. _virtualenvwrapper: https://pypi.python.org/pypi/virtualenvwrapper/\n.. _`GitHub Issues`: https://github.com/solovyevn/pyvenvwrapper/issues\n.. _pyvenvwrapper: https://github.com/solovyevn/pyvenvwrapper\n.. _`Full pyvenvwrapper documentation`: http://pyvenvwrapper.readthedocs.org/en/latest/\n.. _`documentation`: http://pyvenvwrapper.readthedocs.org/en/latest/\n\n", "model_answer": "(1) The alternative method mentioned by the author.", "alternative_method": "", "label": 0}
{"id": 3, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n bootmachine\n===========\n\nBootmachine is a bootstrapping tool for securely provisioning\nvirtual servers up until the point where customized configuration\nmanagement begins.\n\nThe bootmachine's goal is to allow getting started with, maintenance\nof, and exploring new stack options through a simple, pluggable and highly\ncustomizable interface.\n\n|buildstatus|_\n\n.. image:: https://img.shields.io/pypi/v/bootmachine.svg\n    :target: https://crate.io/packages/bootmachine/\n    :alt: Latest PyPI version\n\n.. image:: https://img.shields.io/pypi/dm/bootmachine.svg\n    :target: https://crate.io/packages/bootmachine/\n    :alt: Number of PyPI downloads\n\nConfiguration Management Tools\n------------------------------\n\nCurrently supported:\n\n    * Salt http://saltstack.org\n    * Write your own\n\nNext in the queue:\n\n    * Chef http://www.opscode.com/chef/\n    * Puppet http://puppetlabs.com/\n    * Write your own\n\nProviders\n---------\n\nCurrently supported:\n\n    * Rackspace Openstack Compute API v2 via python-novaclient\n    * Non-rackspace Openstack Compute via python-novaclient\n    * Rackspace Openstack Compute API v1 via openstack.compute (deprecated) http://www.rackspace.com/cloud/\n    * Write your own\n\nNext in the queue:\n\n    * Amazon EC2 via boto https://aws.amazon.com/ec2/\n    * Virtualbox / Vagrant http://vagrantup.com/\n    * Write your own\n\nDistros\n-------\n\nCurrently supported:\n\n    * Arch Linux\n    * Ubuntu\n    * Fedora\n    * Debian\n    * Write your own\n\nNext in the queue:\n\n    * FreeBSD\n    * Gentoo\n    * openSUSE\n    * CentOS\n    * RHEL\n    * Write your own\n\nDocumentation about the usage and installation of the bootmachine\ncan be found at: http://bootmachine.readthedocs.org\n\nThe source code and issue tracker can be found on GitHub:\nhttps://github.com/rizumu/bootmachine\n\n.. |buildstatus| image:: https://secure.travis-ci.org/rizumu/bootmachine.png?branch=master\n.. _buildstatus: http://travis-ci.org/#!/rizumu/bootmachine\n\n", "model_answer": "(0)", "alternative_method": "", "label": 0}
{"id": 4, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n Intellect\n=========\n\n:Info: Intellect is a Domain-specific language and Rules Engine for Python.\n\n:Author: Michael Joseph Walsh\n\n1. What is Intellect\n--------------------\n\nIntellect is a DSL (\"Domain-Specific Language\") and Rule Engine for Python\nI authored for expressing policies to orchestrate and control a dynamic\nnetwork defense cyber-security platform being researched in The \nMITRE Corporation's Innovation Program. \n\nThe rules engine provides an intellect, a form of artificial intelligence,\na faculty of reasoning and understanding objectively over a working memory. \nThe memory retains knowledge relevant to the system, and a set of rules\nauthored in the DSL that describe a necessary behavior to achieve some\ngoal.  Each rule has an optional condition, and a suite of one or more\nactions.  These actions either further direct the behavior of the system,\nand/or further inform the system.  The engine starts with some facts,\ntruths known about past or present circumstances, and uses rules to infer\nmore facts.  These facts fire more rules, that infer more facts and so\non.\n\nFor the platform in the Innovation Program, the network defender uses\nthe DSL to confer policy,  how the platform is to respond to network\nevents mounted over covert network channels, but there are no direct\nties written into the language nor the rule engine to cyber security\nand thus the system in its entirety can be more  broadly used in\nother domains.\n\n2. TODOS\n--------\n\nThere are number of improvements I would like to work for future releases:\n\n* Add Support for Multiple Rule Conditions.\n* Move to an ANTLR4 based parser. The ANTLR Runtime for Python dependency was left behind with the the release of ANTL4. Luckily, n ANTLR 4 runtime for both Python 2 and 3 target is being tackled by Eric Vergnaud and is taking `shape <https://github.com/ericvergnaud/antlr4>`_. The last I looked all execParser and execLexer tests passed. Woot!\n* Support Python 3.\n\nPlease help support these efforts.\n\n.. image:: https://github.com/nemonik/Intellect/raw/master/images/gittip.png\n   :target: https://www.gittip.com/nemonik/\n\n3. Intellect In The News\n---------------------\n\nThe September 2013 issue, Volume 37 of Elsevier's \"Computers and Security\" contains a journal article entitled \"`Active cyber defense with denial and deception: A cyber-wargame experiment <http://dx.doi.org/10.1016/j.cose.2013.03.015>`_\" describing a computer network security use case for Intellect.\n\n4. Installation\n---------------\n\n* To install via `setuptools <http://peak.telecommunity.com/DevCenter/setuptools>`_ use ``easy_install -U Intellect``\n* To install via `pip <http://www.pip-installer.org/en/latest/installing.html>`_ use ``pip install Intellect``\n* To install via `pypm <http://code.activestate.com/pypm/>`_ use ``pypm install intellect``\n* Or download the latest source from `Master <http://github.com/nemonik/Intellect/archives/master>`_ or the most recent tagged release `Tagged Releases <https://github.com/nemonik/Intellect/tags>`_, unpack, and run ``python setup.py install`` \n \n5. Dependencies\n---------------\n\n* `ANTLR3 Python Runtime <https://github.com/antlr/antlr3/tree/master/runtime/Python>`_ that will contrain you to Python 2.x. In the past I've noted here that \"Python 3 at present is not supported, because ANTLR3 appears not to support Python 3.\" Well, that's not exactly true, there is a Python3 runtime, I just wasn't aware of it nor have I worked with it. It can be found here  `ANTLR3 Python3 Runtime <https://github.com/antlr/antlr3/tree/master/runtime/Python3>`_\n* Python itself, if you don't already have it.  I've tested the code on Python 2.7.1 and 2.7.2., but will likely work on any and all Python 2.x versions. \n\n6. Source Code Contributions\n----------------------------\n\nThe source code is available under the BSD 4-clause license. If you have ideas, \ncode, bug reports, or fixes you would like to contribute please do so.\n\nBugs and feature requests can be filed at `Github <http://github.com/nemonik/Intellect>`_.\n\n7. Background\n-------------\n\nMany production rule system implementations have been open-sourced, such as\nJBoss Drools, Rools, Jess, Lisa, et cetera.  If you're familiar with the \nDrools syntax, Intellect's syntax should look familiar. (I'm not saying it \nis based on it, because it is not entirely, but I found as I was working\nthe syntax I would check with Drools and if made sense to push in the \ndirection of Drools, this is what I did.)  The aforementioned implementations\nare available for other languages for expressing production rules, but it is \nmy belief that Python is under-represented, and as such it was my thought the\nlanguage and rule engine could benefit from being open sourced, and so I put\na request in. \n\nThe MITRE Corporation granted release August 4, 2011.\n\nThus, releasing the domain-specific language (DSL) and Rule Engine to Open\nSource in the hopes doing so will extend its use and increase its chances \nfor possible adoption, while at the same time mature the project with more \ninterested eyeballs being placed on it.\n\nStarting out, it was initially assumed the aforementioned platform would \nbe integrated with the best Open Source rules engine available for \nPython as there are countless implementation for Ruby, Java, and Perl, \nbut surprisingly I found none fitting the project's needs. This led to \nthe thought of inventing one; simply typing the keywords \"python rules \nengine\" into Google though will return to you the advice \"to not invent \nyet another rules language\", but instead you are advised to \"just write \nyour rules in Python, import them, and execute them.\" The basis for this \nadvice can be coalesced down to doing so otherwise does not fit with the \n\"Python Philosophy.\" At the time, I did not believe this to be true, nor \nfully contextualized, and yet admittedly, I had not yet authored a line \nof Python code (Yes, you're looking at my first Python program. So,\nplease give me a break.) nor used  ANTLR3 prior to this effort. Looking \nback, I firmly believe the act of inventing a rules engine and abstracting it \nbehind a nomenclature that describes and illuminates a specific domain is \nthe best way for in case of aforementioned platform the network defender \nto think about the problem. Like I said though the DSL and rules engine\ncould be used for anything needing a \"production rule system\".\n\nAs there were no rules engines available for Python fitting the platforms\nneeds, a policy language and naive forward chaining rules engine were built \nfrom scratch. The policy language's grammar is based on a subset of Python \nlanguage syntax.  The policy DSL is parsed and lexed with the help of the \nANTLR3 Parse Generator and  Runtime for Python. \n\n\n8. Facts (Data being reasoned over)\n-----------------------------------\n\nThe interpreter, the rules engine, and the remainder of the code such as \nobjects for conferring discrete network conditions, referred to as \"facts\",\nare also authored in Python. Python's approach to the object-oriented programming\nparadigm, where objects consist of data fields and methods, did not easily\nlend itself to describing \"facts\". Because the data fields of a Python object \nreferred to syntactically as \"attributes\" can and often are set on an \ninstance of a class, they will not exist prior to a class's instantiation. \nIn order for a rules engine to work, it must be able to fully introspect an \nobject instance representing a condition. This proves to be very difficult \nunless the property decorator with its two attributes, \"getter\" and \"setter\", \nintroduced in Python 2.6, are adopted and formally used for authoring these objects. \nCoincidentally, the use of the \"Getter/Setter Pattern\" used frequently in \nJava is singularly frowned upon in the Python developer community with the \ncheer of \"Python is not Java\".\n\nSo, you will need to author your facts as Python object's who attributes \nare formally denoted as properties like so for the attributes you would like to\nreason over::\n\n\tclass ClassA(object):\n\t\t'''\n\t\tAn example fact\n\t\t'''\n\t\n\t\tdef __init__(self, property0 = None, property1 = None):\n\t\t\t'''\n\t\t\tClassA initializer\n\t\t\t'''\n\t\t\tself._property0 = property0\n\t\n\t\t@property\n\t\tdef property0(self):\n\t\t\treturn self._property0\n\t\n\t\t@property0.setter\n\t\tdef property0(self, value):\n\t\t\tself._property0 = value\n\n9. The Policy DSL\n-----------------\n\nExample with policy files can be found at the path `intellect/examples <https://github.com/nemonik/Intellect/tree/master/intellect/examples>`_. \nPolicy files must follow the Policy grammar as define in `intellect/grammar/Policy.g <https://raw.github.com/nemonik/Intellect/master/intellect/grammar/Policy.g>`_. \nThe rest of this section documents the grammar of policy domain-specific language.\n\n9.1 Import Statements (``ImportStmts``)\n---------------------------------------\n\nImport statements basically follow Python's with a few limitations.  For\nexample, The wild card form of import is not supported for the reasons\nelaborated `here <http://python.net/~goodger/projects/pycon/2007/idiomatic/handout.html#importing>`_\nand follow the Python 2.7.2 grammar. ``ImportStmt`` statements exist only at the same\nlevel of ``ruleStmt`` statements as per the grammar, and are typically at the top of a\npolicy file, but are not limited to. In fact, if you break up your policy across several \nfiles the last imported as class or module wins as the one being named.\n\n.. _9.2:\n\n9.2 Attribute Statements (``attribute``)\n----------------------------------------\n\n.. figure:: https://github.com/nemonik/Intellect/raw/master/images/attributeStmt.jpg\n   \n   The syntax diagram for a ``attributeStmt``.\n\n``attributeStmt`` statements are expressions used to create policy attributes, a form of\nglobals, that are accessible from rules.\n\nFor example, a policy could be written::\n\n\timport logging\n\t\n\tfirst_sum = 0\n\tsecond_sum = 0\n\t\n\trule \"set both first_sum and second_sum to 1\":\n\t\tagenda-group \"test_d\"\n\t\tthen:\n\t\t\tattribute (first_sum, second_sum) = (1,1)\n\t\t\tlog(\"first_sum is {0}\".format(first_sum), \"example\", logging.DEBUG)\n\t\t\tlog(\"second_sum is {0}\".format(second_sum), \"example\", logging.DEBUG)\n\t\n\trule \"add 2\":\n\t\tagenda-group \"test_d\"\n\t\tthen:\n\t\t\tattribute first_sum += 2\n\t\t\tattribute second_sum += 2\n\t\t\tlog(\"first_sum is {0}\".format(first_sum), \"example\", logging.DEBUG)\n\t\t\tlog(\"second_sum is {0}\".format(second_sum), \"example\", logging.DEBUG)\n\t\n\trule \"add 3\":\n\t\tagenda-group \"test_d\"\n\t\tthen:\n\t\t\tattribute first_sum += 3\n\t\t\tattribute second_sum += 3\n\t\t\tlog(\"first_sum is {0}\".format(first_sum), \"example\", logging.DEBUG)\n\t\t\tlog(\"second_sum is {0}\".format(second_sum), \"example\", logging.DEBUG)\n\t\n\trule \"add 4\":\n\t\tagenda-group \"test_d\"\n\t\tthen:\n\t\t\tattribute first_sum += 4\n\t\t\tattribute second_sum += 4\n\t\t\tlog(\"first_sum is {0}\".format(first_sum), \"example\", logging.DEBUG)\n\t\t\tlog(\"second_sum is {0}\".format(second_sum), \"example\", logging.DEBUG)\n\t\t\thalt\n\t\n\trule \"should never get here\":\n\t\tagenda-group \"test_d\"\n\t\tthen:\n\t\t\tlog(\"Then how did I get here?\", \"example\", logging.DEBUG)\n\ncontaining the two ``atributeStmt`` statements::\n\n\tfirst_sum = 0\n\tsecond_sum = 0 \n\nThe following rules will increment these two attributes using ``attributeAction``\nstatements.\n\nCode to exercise this policy would look like so::\n\n\tclass MyIntellect(Intellect):\n\t\tpass\n\t\n\tif __name__ == \"__main__\":\n\t\n\t\t# set up logging for the example\n\t\tlogger = logging.getLogger('example')\n\t\tlogger.setLevel(logging.DEBUG)\n\t\n\t\tconsoleHandler = logging.StreamHandler(stream=sys.stdout)\n\t\tconsoleHandler.setFormatter(logging.Formatter('%(asctime)s %(name)-12s %(levelname)-8s%(message)s'))\n\t\tlogger.addHandler(consoleHandler)\n\t\n\t\tmyIntellect = MyIntellect()\n\t\n\t\tpolicy_d = myIntellect.learn(Intellect.local_file_uri(\"./rulesets/test_d.policy\"))\n\t\n\t\tmyIntellect.reason([\"test_d\"])\n\nand the logging output from the execution of the above would be::\n\n\t2011-10-04 23:56:51,681 example      DEBUG   __main__.MyIntellect :: first_sum is 1\n\t2011-10-04 23:56:51,682 example      DEBUG   __main__.MyIntellect :: second_sum is 1\n\t2011-10-04 23:56:51,683 example      DEBUG   __main__.MyIntellect :: first_sum is 3\n\t2011-10-04 23:56:51,683 example      DEBUG   __main__.MyIntellect :: second_sum is 3\n\t2011-10-04 23:56:51,685 example      DEBUG   __main__.MyIntellect :: first_sum is 6\n\t2011-10-04 23:56:51,685 example      DEBUG   __main__.MyIntellect :: second_sum is 6\n\t2011-10-04 23:56:51,687 example      DEBUG   __main__.MyIntellect :: first_sum is 10\n\t2011-10-04 23:56:51,687 example      DEBUG   __main__.MyIntellect :: second_sum is 10\n\nSee section 9.3.3.1.2_ ``attributeAction`` for another example.\n\n9.3 Rule Statements (``ruleStmt``)\n----------------------------------\n\n.. figure:: https://github.com/nemonik/Intellect/raw/master/images/ruleStmt.jpg\n   \n   The syntax diagram for a ``ruleStmt``.\n\nA rule statement at its simplest looks like so::\n\n\trule \"print\":\t\n\t\tthen:\n\t\t\tprint(\"hello world!!!!\")\n\nThe rule ``\"print\"`` will always activate and output ``hello world!!!!`` to the \n``sys.stdout``.\n\nA rule will always have an identifier (``id``) in either a ``NAME`` or ``STRING``\ntoken form following Python's naming and ``String`` conventions.\n\nGenerally, a rule will have both a ``when`` portion containing the condition \nof the rule, as of now a ``ruleCondition``, and an ``action`` described by the \n``then`` portion. The ``action`` can be thought of in Python-terms as having more \nspecifically a suite of one ore more actions.\n\nDepending on the evaluation of ``condition``, facts in knowledge will be matched \nand then operated over in the action of the rule. \n\nSuch as in the rule ``\"delete those that don't match\"``, all facts in knowledge \nof type ``ClassD`` who's ``property1`` value is either a ``1`` or ``2`` or ``3``\nwill be deleted in action of the rule.\n\n::\n\n\tfrom intellect.testing.ClassCandD import ClassD\n\t\t\n\trule \"delete those that don't match\":\n\t\twhen:\n\t\t\tnot $bar := ClassD(property1 in [1,2,3])\n\t\tthen:\n\t\t\tdelete $bar\n\n9.3.1 ``agenda-group`` rule property\n------------------------------------\n\n.. figure:: https://github.com/nemonik/Intellect/raw/master/images/agendaGroup.jpg\n   \n   The syntax diagram for a ``agendaGroup``.\n\nOptionally, a rule may have an ``agenda-group`` property that allows it to be \ngrouped in to agenda groups, and fired on an agenda.\n\nSee sections 9.2_ ``attribute`` and 9.3.3.1.2_ ``attributeAction`` for examples \nof the use of this property.\n\n9.3.2 When\n----------\n\n.. figure:: https://github.com/nemonik/Intellect/raw/master/images/when.jpg\n   \n   The syntax diagram for a ``when``.\n\nIf present in rule, it defines the condition on which the rule will be activated.\n\n9.3.2.1 Rule Condition (``condition``)\n--------------------------------------\n\n.. figure:: https://github.com/nemonik/Intellect/raw/master/images/condition.jpg\n   \n   The syntax diagram for a ``condition``.\n   \nA rule may have an optional condition, a boolean evaluation, on the state of objects \nin knowledge defined by a Class Constraint (``classConstraint``), and may be \noptionally prepended with ``exists`` as follows::\n\n\trule rule_c:\n\t\twhen:\n\t\t\texists $classB := ClassB(property1.startswith(\"apple\") and property2>5 and test.greaterThanTen(property2) and aMethod() == \"a\")\n\t\tthen:\n\t\t\tprint( \"matches\" + \" exist\" )\n\t\t\ta = 1\n\t\t\tb = 2\n\t\t\tc = a + b\n\t\t\tprint(c)\n\t\t\ttest.helloworld()\n\t\t\t# call MyIntellect's bar method as it is decorated as callable\n\t\t\tbar()\n\nand thus the action will be called once if there are any object in memory matching \nthe condition. The action statements ``modify`` and ``delete`` may not be used in \nthe action if ``exists`` prepends the ``classContraint``.\n\nCurrently, the DSL only supports a single ``classConstraint``, but work is ongoing\nto support more than one.\n\n9.3.2.1.1 A Class Constraint (``classConstraint``)\n--------------------------------------------------\n\n.. figure:: https://github.com/nemonik/Intellect/raw/master/images/classConstraint.jpg\n   \n   The syntax diagram for a ``classConsraint``.\n\nA ``classContraint`` defines how an objects in knowledge will be matched.  It defines an \n``OBJECTBINDING``, the Python name of the object's class and the optional ``constraint`` \nby which objects will be matched in knowledge.\n\nThe ``OBJECTBINDING`` is a ``NAME`` token following Python's naming convention prepended\nwith a dollar-sign (``$``).\n\nAs in the case of the Rule Condition example::\n\n\t\t\texists $classB := ClassB(property1.startswith(\"apple\") and property2>5 and test.greaterThanTen(property2) and aMethod() == \"a\")\n\n\n``$classB`` is the ``OBJECTBINDING`` that binds the matches of facts of type\n``ClassB`` in knowledge matching the ``constraint``.\n\nAn ``OBJECTBINDING`` can be further used in the action of the rule, but not in the \ncase where the ``condition`` is prepended with ``exists`` as in the example.\n\n9.3.2.1.2 A Constraint\n----------------------\n\nA ``constraint`` follows the same basic ``and``, ``or``, and ``not`` grammar that Python\nfollows.\n\nAs in the case of the Rule Condition example::\n\n\t\t\texists $classB := ClassB(property1.startswith(\"apple\") and property2>5 and test.greaterThanTen(property2) and aMethod() == \"a\")\n\nAll ``ClassB`` type facts are matched in knowledge that have ``property1`` attributes\nthat ``startwith`` ``apple``, and ``property2`` attributes greater than ``5`` before \nevaluated in hand with ``exist`` statement.  More on the rest of the constraint follows\nin the sections below.\n\n9.3.2.1.2.1 Using Regular Expressions\n-------------------------------------\n\nYou can also use regular expressions in constraint by simply importing the\nregular expression library straight from Python and then using like so as\nin the case of the Rule Condition example::\n\n\t\t\t$classB := ClassB( re.search(r\"\\bapple\\b\", property1)!=None and property2>5 and test.greaterThanTen(property2) and aMethod() == \"a\")\n\nThe regular expression ``r\"\\bapple\\b\"`` search is performed on ``property1`` of\nobjects of type ``ClassB`` in knowledge.\n\n9.3.2.1.2.2 Using Methods\n-------------------------\n\nTo rewrite a complicated ``constraint``:\n````````````````````````````````````````\n\nIf you are writing a very complicated ``constraint`` consider moving the \nevaluation necessary for the ``constraint`` into a method of fact being \nreasoned over to increase readability.\n\nAs in the case of the Rule Condition example, it could be rewritten to::\n\n\t\t\t$classB := ClassB(property1ContainsTheStrApple() and property2>5 and test.greaterThanTen(property2) and aMethod() == \"a\")\n\nIf you were to add the method to ClassB::\n\n\tdef property1ContainsTheStrApple()\n\t\treturn re.search(r\"\\bapple\\b\", property1) != None\n\nOf a class and/or instance:\n```````````````````````````\n\nThis example, also demonstrates how the ``test`` module function ``greaterThanTen`` \ncan be messaged the instance's ``property2`` attribute and the function's return \nevaluated, and a call to the instance's ``aMethod`` method can be evaluated for \na return of ``\"a\"``.\n\n9.3.3 Then\n----------\n\n.. figure:: https://github.com/nemonik/Intellect/raw/master/images/then.jpg\n   \n   The syntax diagram for a ``then``.\n\nIs used to define the suite of one-or-more ``action`` statements to be called\nfiring the rule, when the rule is said to be activated.\n\n9.3.3.1 Rule Action (Suite of Actions)\n--------------------------------------\n\n.. figure:: https://github.com/nemonik/Intellect/raw/master/images/action.jpg\n   \n   The syntax diagram for an ``action``.\n\nRules may have a suite of one or more actions used in process of doing something, \ntypically  to achieve an aim.\n\n9.3.3.1.1 Simple Statements (``simpleStmt``)\n--------------------------------------------\n\n.. figure:: https://github.com/nemonik/Intellect/raw/master/images/simpleStmt.jpg\n   \n   The syntax diagram for a ``simpleStmt``.\n\n``simpleStmts`` are supported actions of a rule, and so one can do the following::\n\n\trule rule_c:\n\t\twhen:\n\t\t\texists $classB := ClassB(property1.startswith(\"apple\") and property2>5 and test.greaterThanTen(property2) and aMethod() == \"a\")\n\t\tthen:\n\t\t\tprint(\"matches\" + \" exist\")\n\t\t\ta = 1\n\t\t\tb = 2\n\t\t\tc = a + b\n\t\t\tprint(c)\n\t\t\ttest.helloworld()\n\t\t\tbar()\n\nThe ``simpleStmt`` in the action will be executed if any facts in knowledge \nexist matching the condition.\n\nTo keep the policy files from turning into just another Python script you\nwill want to keep as little code out of the suite of actions and thus the  policy \nfile was possible...  You will want to focus on using ``modify``, ``delete``, \n``insert``, ``halt`` before heavily using large amounts of simple statements.  This\nis why ``action`` supports a limited Python grammar.  ``if``, ``for``, ``while`` etc\nare not supported, only Python's ``expressionStmt`` statements are supported.\n\n.. _9.3.3.1.2:\n\n9.3.3.1.2 ``attributeAction``\n-----------------------------\n\n.. figure:: https://github.com/nemonik/Intellect/raw/master/images/attributeStmt.jpg\n   \n   The syntax diagram for a ``attributeStmt``.\n   \n``attributeAction`` actions are used to create, delete, or modify a policy \nattribute.\n\nFor example::\n\n\ti = 0\n\t\n\trule rule_e:\n\t\tagenda-group \"1\"\n\t\tthen:\n\t\t\tattribute i = i + 1\n\t\t\tprint i\n\t\n\trule rule_f:\n\t\tagenda-group \"2\"\n\t\tthen:\n\t\t\tattribute i = i + 1\n\t\t\tprint i\n\t\n\trule rule_g:\n\t\tagenda-group \"3\"\n\t\tthen:\n\t\t\tattribute i = i + 1\n\t\t\tprint i\n\t\n\trule rule_h:\n\t\tagenda-group \"4\"\n\t\tthen:\n\t\t\t# the 'i' variable is scoped to then portion of the rule\n\t\t\ti = 0\n\t\t\tprint i\n\t\n\trule rule_i:\n\t\tagenda-group \"5\"\n\t\tthen:\n\t\t\tattribute i += 1\n\t\t\tprint i\n\t\t\t# the 'i' variable is scoped to then portion of the rule\n\t\t\ti = 0\n\t\n\trule rule_j:\n\t\tagenda-group \"6\"\n\t\tthen:\n\t\t\tattribute i += 1\n\t\t\tprint i\n\nIf the rules engine is instructed to reason seeking to activate \nrules on agenda in the order describe by the Python list\n``[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"]`` like so::\n\n\tclass MyIntellect(Intellect):\n\t\tpass\n\t\n\tif __name__ == \"__main__\":\n\t\n\t\tmyIntellect = MyIntellect()\n\t\n\t\tpolicy_c = myIntellect.learn(Intellect.local_file_uri(\"./rulesets/test_c.policy\"))\n\t\n\t\tmyIntellect.reason([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"])\n\nThe following output will result::\n\n\t1\n\t2\n\t3\n\t0\n\t4\n\t5\n\nWhen firing ``rule_e`` the policy attribute ``i`` will be incremented by a value \nof ``1``, and print ``1``, same with ``rule_f`` and ``rule_g``, but ``rule_h`` \nprints 0. The reason for this is the ``i`` variable is scoped to ``then`` portion \nof the rule. ``Rule_i`` further illustrates scoping:  the policy attribute ``i``\nis further incremented by ``1`` and is printed, and then a variable ``i`` scoped to\n``then`` portion of the rule initialized to ``0``, but this has no impact on\nthe policy attribute ``i`` for when ``rule_j`` action is executed firing the rule\nthe value of ``6`` is printed.\n\n9.3.3.1.3 ``learn`` action\n--------------------------\n\n.. figure:: https://github.com/nemonik/Intellect/raw/master/images/learnAction.jpg\n   :scale: 50 %\n   \n   The syntax diagram for a ``learnAction``.\n\nA rule entitled ``\"Time to buy new sheep?\"`` might look like the following::\n\n\trule \"Time to buy new sheep?\":\n\t\twhen:\n\t\t\t$buyOrder := BuyOrder( )\n\t\tthen:\n\t\t\tprint( \"Buying a new sheep.\" )\n\t\t\tmodify $buyOrder:\n\t\t\t\tcount = $buyOrder.count - 1\n\t\t\tlearn BlackSheep()\n\nThe rule above illustrates the use of a ``learn`` action to learn/insert \na ``BlackSheep`` fact. The same rule can also be written as the following\nusing ``insert``::\n\n\trule \"Time to buy new sheep?\":\n\t\twhen:\n\t\t\t$buyOrder := BuyOrder( )\n\t\tthen:\n\t\t\tprint( \"Buying a new sheep.\" )\n\t\t\tmodify $buyOrder:\n\t\t\t\tcount = $buyOrder.count - 1\n\t\t\tinsert BlackSheep()\n\n9.3.3.1.4 ``forget`` action\n---------------------------\n\n.. figure:: https://github.com/nemonik/Intellect/raw/master/images/forgetAction.jpg\n   \n   The syntax diagram for a ``forgetAction``.\n\n\nA rule entitled ``\"Remove empty buy orders\"`` might look like the following::\n\n\trule \"Remove empty buy orders\":\n\t\twhen:\n\t\t\t$buyOrder := BuyOrder( count == 0 )\n\t\tthen:\n\t\t\tforget $buyOrder\n\n\nThe rule above illustrates the use of a ``forget`` action to forget/delete \neach match returned by the rule's condition. The same rule can also be written \nas the following using ``delete``::\n\n\trule \"Remove empty buy orders\":\n\t\twhen:\n\t\t\t$buyOrder := BuyOrder( count == 0 )\n\t\tthen:\n\t\t\tdelete $buyOrder\n\nNote: cannot be used in conjunction with ``exists``.\n\n9.3.3.1.5 ``modify`` action\n---------------------------\n\n.. figure:: https://github.com/nemonik/Intellect/raw/master/images/modifyAction.jpg\n   \n   The syntax diagram for a ``modifyAction``.\n\nThe following rule::\n\n\trule \"Time to buy new sheep?\":\n\t\twhen:\n\t\t\t$buyOrder := BuyOrder( )\n\t\tthen:\n\t\t\tprint( \"Buying a new sheep.\" )\n\t\t\tmodify $buyOrder:\n\t\t\t\tcount = $buyOrder.count - 1\n\t\t\tlearn BlackSheep()\n\n\nillustrates the use of a ``modify`` action to modify each ``BuyOrder`` match \nreturned by the rule's condition. Cannot be used in conjunction with ``exists``\nrule conditions. The ``modify`` action can also be used to chain rules, what \nyou do is modify the fact (toggle a boolean property, set a property's value,\netc)  and then use this property to evaluate in the proceeding rule.\n\n\n9.3.3.1.6 ``halt`` action\n-------------------------\n\n.. figure:: https://github.com/nemonik/Intellect/raw/master/images/haltAction.jpg\n   \n   The syntax diagram for a ``haltAction``.\n\nThe following rule::\n\n\trule \"End policy\":\n\t\tthen:\n\t\t\tlog(\"Finished reasoning over policy.\", \"example\", logging.DEBUG)\n\t\t\thalt\n\nillustrates the use of a ``halt`` action to tell the rules engine to halt \nreasoning over the policy.\n\n10. Creating and using a Rules Engine with a single policy\n---------------------------------------------------------\n\nAt its simplest a rules engine can be created and used like so::\n\n\timport sys, logging\n\t\n\tfrom intellect.Intellect import Intellect\n\tfrom intellect.Intellect import Callable\n\t\n\t# set up logging\n\tlogging.basicConfig(level=logging.DEBUG,\n\tformat='%(asctime)s %(name)-12s%(levelname)-8s%(message)s', stream=sys.stdout)\n\t\n\tintellect = Intellect()\n\t\n\tpolicy_a = intellect.learn(Intellect.local_file_uri(\"../rulesets/test_a.policy\"))\n\t\n\tintellect.reason()\n\t\n\tintellect.forget_all()\n\n\nIt may be preferable for you to sub-class ``intellect.Intellect.Intellect`` class in \norder to add ``@Callable`` decorated methods that will in turn permit these methods\nto be called from the action of the rule.\n \nFor example, ``MyIntellect`` is created to sub-class ``Intellect``::\n\n\timport sys, logging\n\t\n\tfrom intellect.Intellect import Intellect\n\tfrom intellect.Intellect import Callable\n\n\tclass MyIntellect(Intellect):\n\t\n\t\t@Callable\n\t\tdef bar(self):\n\t\t\tself.log(logging.DEBUG, \">>>>>>>>>>>>>>  called MyIntellect's bar method as it was decorated as callable.\")\n\t\n\tif __name__ == \"__main__\":\n\t\n\t\t# set up logging\n\t\tlogging.basicConfig(level=logging.DEBUG,\n\t\t\tformat='%(asctime)s %(name)-12s%(levelname)-8s%(message)s',\n\t\t\t#filename=\"rules.log\")\n\t\t\tstream=sys.stdout)\n\t\n\t\tprint \"*\"*80\n\t\tprint \"\"\"create an instance of MyIntellect extending Intellect, create some facts, and exercise the MyIntellect's ability to learn and forget\"\"\"\n\t\tprint \"*\"*80\n\t\n\t\tmyIntellect = MyIntellect()\n\t\n\t\tpolicy_a = myIntellect.learn(Intellect.local_file_uri(\"../rulesets/test_a.policy\"))\n\t\n\t\tmyIntellect.reason()\n\t\n\t\tmyIntellect.forget_all()\n\n\nThe policy could then be authored, where the ``MyIntellect`` class's ``bar`` method \nis called for matches to the rule condition, like so::\n\n\tfrom intellect.testing.subModule.ClassB import ClassB\n\timport intellect.testing.Test as Test\n\timport logging\n\t\n\tfruits_of_interest = [\"apple\", \"grape\", \"mellon\", \"pear\"]\n\tcount = 5\n\t\n\trule rule_a:\n\t\tagenda-group test_a\n\t\twhen:\n\t\t\t$classB := ClassB( property1 in fruits_of_interest and property2>count ) \n\t\tthen:\n\t\t\t# mark the 'ClassB' matches in memory as modified\n\t\t\tmodify $classB:\n\t\t\t\tproperty1 = $classB.property1 + \" pie\"\n\t\t\t\tmodified = True\n\t\t\t\t# increment the match's 'property2' value by 1000\n\t\t\t\tproperty2 = $classB.property2 + 1000\n\t\n\t\t\tattribute count = $classB.property2\n\t\t\tprint \"count = {0}\".format( count )\n\t\n\t\t\t# call MyIntellect's bar method as it is decorated as callable\n\t\t\tbar()\n\t\t\tlog(logging.DEBUG, \"rule_a fired\")\n\n", "model_answer": "(0)", "alternative_method": "", "label": 0}
{"id": 5, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n ######\nPyDocX\n######\n\n.. image:: https://travis-ci.org/CenterForOpenScience/pydocx.png?branch=master\n   :align: left\n   :target: https://travis-ci.org/CenterForOpenScience/pydocx\n\n* `Installation <https://pydocx.readthedocs.org/en/latest/installation.html>`_\n* `Documentation <https://pydocx.readthedocs.org>`_\n* `Release Notes <https://pydocx.readthedocs.org/en/latest/release_notes.html>`_\n* `Github Page <https://github.com/CenterForOpenScience/pydocx>`_\n* `Issue Tracking <https://github.com/CenterForOpenScience/pydocx/issues>`_\n\nPyDocX is a tool\nthat can export\nMS Word documents (Office Open XML)\ninto different markup languages.\nCurrently,\nonly HTML is supported.\nYou can extend\nany of the available exporters\nto customize it to your needs.\nThis includes extending\nthe base exporter\nto add support\nfor a markup language\nor format\nthat is not supported.\n\nTo get started using PyDocX,\nsee the `Usage <https://pydocx.readthedocs.org/en/latest/usage.html>`_\nguide\nand also\n`Extending PyDocX <https://pydocx.readthedocs.org/en/latest/extending.html>`_.\n\n######\nCOS is Hiring!\n######\n\nWant to help save science? Want to get paid to develop free, open source software? `Check out our openings! <http://cos.io/jobs>`_\n\n", "model_answer": "0", "alternative_method": "", "label": 0}
{"id": 6, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n phpserialize3\n~~~~~~~~~~~~~\n\nfork from `mitsuhiko/phpserialize <https://github.com/mitsuhiko/phpserialize>`_\n\nonly support python3\n\na port of the serialize and unserialize functions of php to python. This module\nimplements the python serialization interface (eg: provides dumps, loads and\nsimilar functions).\n\nUsage\n=====\n\n>>> from phpserialize import *\n>>> obj = dumps(\"Hello World\")\n>>> loads(obj)\n'Hello World'\n\nDue to the fact that PHP doesn't know the concept of lists, lists\nare serialized like hash-maps in PHP.  Python check it auto:\n\n>>> loads(dumps(range(2)))\n[0, 1]\n\nAnother problem are unicode strings.  By default unicode strings are\nencoded to 'utf-8' but not decoded on `unserialize`.  The reason for\nthis is that phpserialize can't guess if you have binary or text data\nin the strings:\n\n>>> loads(dumps(u'Hello W\\xf6rld'))\n'Hello Wörld'\n\nIf you know that you have only text data of a known charset in the result\nyou can decode strings by setting `decode_strings` to True when calling\nloads:\n\n>>> loads(dumps(u'Hello W\\xf6rld'), decode_strings=True)\nu'Hello W\\xf6rld'\n\nDictionary keys are limited to strings and integers.  `None` is converted\ninto an empty string and floats and booleans into integers for PHP\ncompatibility:\n\n>>> loads(dumps({None: 14, 42.23: 'foo', True: [1, 2, 3]}))\n{'': 14, 1: {0: 1, 1: 2, 2: 3}, 42: 'foo'}\n\nIt also provides functions to read from file-like objects:\n\n>>> from StringIO import StringIO\n>>> stream = StringIO('a:2:{i:0;i:1;i:1;i:2;}')\n>>> dict_to_list(load(stream))\n[1, 2]\n\nAnd to write to those:\n\n>>> stream = StringIO()\n>>> dump([1, 2], stream)\n>>> stream.getvalue()\n'a:2:{i:0;i:1;i:1;i:2;}'\n\nLike `pickle` chaining of objects is supported:\n\n>>> stream = StringIO()\n>>> dump([1, 2], stream)\n>>> dump(\"foo\", stream)\n>>> stream.seek(0)\n>>> load(stream)\n{0: 1, 1: 2}\n>>> load(stream)\n'foo'\n\nThis feature however is not supported in PHP.  PHP will only unserialize\nthe first object.\n\nArray Serialization\n===================\n\nStarting with 1.2 you can provide an array hook to the unserialization\nfunctions that are invoked with a list of pairs to return a real array\nobject.  By default `dict` is used as array object which however means\nthat the information about the order is lost for associative arrays.\n\nFor example you can pass the ordered dictionary to the unserilization\nfunctions:\n\n>>> from collections import OrderedDict\n>>> loads('a:2:{s:3:\"foo\";i:1;s:3:\"bar\";i:2;}',\n...       array_hook=OrderedDict)\ncollections.OrderedDict([('foo', 1), ('bar', 2)])\n\nObject Serialization\n====================\n\nPHP supports serialization of objects.  Starting with 1.2 of phpserialize\nit is possible to both serialize and unserialize objects.  Because class\nnames in PHP and Python usually do not map, there is a separate\n`object_hook` parameter that is responsible for creating these classes.\n\nFor a simple test example the `phpserialize.phpobject` class can be used:\n\n>>> data = 'O:7:\"WP_User\":1:{s:8:\"username\";s:5:\"admin\";}'\n>>> user = loads(data, object_hook=phpobject)\n>>> user.username\n'admin'\n>>> user.__name__\n'WP_User'\n\nAn object hook is a function that takes the name of the class and a dict\nwith the instance data as arguments.  The instance data keys are in PHP\nformat which usually is not what you want.  To convert it into Python\nidentifiers you can use the `convert_member_dict` function.  For more\ninformation about that, have a look at the next section.  Here an\nexample for a simple object hook:\n\n>>> class User(object):\n...     def __init__(self, username):\n...         self.username = username\n...\n>>> def object_hook(name, d):\n...     cls = {'WP_User': User}[name]\n...     return cls(**d)\n...\n>>> user = loads(data, object_hook=object_hook)\n>>> user.username\n'admin'\n\nTo serialize objects you can use the `object_hook` of the dump functions\nand return instances of `phpobject`:\n\n>>> def object_hook(obj):\n...     if isinstance(obj, User):\n...         return phpobject('WP_User', {'username': obj.username})\n...     raise LookupError('unknown object')\n...\n>>> dumps(user, object_hook=object_hook)\n'O:7:\"WP_User\":1:{s:8:\"username\";s:5:\"admin\";}'\n\nPHP's Object System\n===================\n\nThe PHP object system is derived from compiled languages such as Java\nand C#.  Attributes can be protected from external access by setting\nthem to `protected` or `private`.  This does not only serve the purpose\nto encapsulate internals but also to avoid name clashes.\n\nIn PHP each class in the inheritance chain can have a private variable\nwith the same name, without causing clashes.  (This is similar to the\nPython `__var` name mangling system).\n\nThis PHP class::\n\n    class WP_UserBase {\n        protected $username;\n\n        public function __construct($username) {\n            $this->username = $username;\n        }\n    }\n\n    class WP_User extends WP_UserBase {\n        private $password;\n        public $flag;\n\n        public function __construct($username, $password) {\n            parent::__construct($username);\n            $this->password = $password;\n            $this->flag = 0;\n        }\n    }\n\nIs serialized with a member data dict that looks like this:\n\n>>> data = {\n...     ' * username':          'the username',\n...     ' WP_User password':    'the password',\n...     'flag':                 'the flag'\n... }\n\nBecause this access system does not exist in Python, the\n`convert_member_dict` can convert this dict:\n\n>>> d = convert_member_dict(data)\n>>> d['username']\n'the username'\n>>> d['password']\n'the password'\n\nThe `phpobject` class does this conversion on the fly.  What is\nserialized is the special `__php_vars__` dict of the class:\n\n>>> user = phpobject('WP_User', data)\n>>> user.username\n'the username'\n>>> user.username = 'admin'\n>>> user.__php_vars__[' * username']\n'admin'\n\nAs you can see, reassigning attributes on a php object will try\nto change a private or protected attribute with the same name.\nSetting an unknown one will create a new public attribute:\n\n>>> user.is_admin = True\n>>> user.__php_vars__['is_admin']\nTrue\n\nTo convert the phpobject into a dict, you can use the `_asdict`\nmethod:\n\n>>> d = user._asdict()\n>>> d['username']\n'admin'\n\nPython 3 Notes\n==============\n\nBecause the unicode support in Python 3 no longer transparently\nhandles bytes and unicode objects we had to change the way the\ndecoding works.  On Python 3 you most likely want to always\ndecode strings.  Because this would totally fail on binary data\nphpserialize uses the \"surrogateescape\" method to not fail on\ninvalid data.  See the documentation in Python 3 for more\ninformation.\n\nChangelog\n=========\n\n1.3\n    -   added support for Python 3\n\n1.2\n    -   added support for object serialization\n    -   added support for array hooks\n\n1.1\n    -   added `dict_to_list` and `dict_to_tuple`\n    -   added support for unicode\n    -   allowed chaining of objects like pickle does\n\n", "model_answer": "0", "alternative_method": "", "label": 0}
{"id": 7, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n AioPeewee\n=========\n\nAsyncio interface for peewee_ modeled after torpeewee_\n\nImplemented database adapters:\n\n- [x] aiomysql\n- [ ] aiopg\n- [ ] sqlite\n\nCurrently 125 test cases have been ported from peewee, not all of them but constantly increases.\n\nSimple Atomic operations (transactions) are also supported, but now well tested.\n\n\nInstall\n-------\n\n.. code:: bash\n\n    pip install aiopeewee\n\n    # or\n\n    conda install aiopeewee\n\n\nUsage\n-----\n\n.. code:: python\n\n    from aiopeewee import AioModel, AioMySQLDatabase\n    from peewee import CharField, TextField, DateTimeField\n    from peewee import ForeignKeyField, PrimaryKeyField\n\n\n    db = AioMySQLDatabase('test', host='127.0.0.1', port=3306,\n                         user='root', password='')\n\n\n    class User(AioModel):\n        username = CharField()\n\n        class Meta:\n            database = db\n\n\n    class Blog(AioModel):\n        user = ForeignKeyField(User)\n        title = CharField(max_length=25)\n        content = TextField(default='')\n        pub_date = DateTimeField(null=True)\n        pk = PrimaryKeyField()\n\n        class Meta:\n            database = db\n\n\n    # create connection pool\n    await db.connect(loop)\n\n    # count\n    await User.select().count()\n\n    # async iteration on select query\n    async for user in User.select():\n        print(user)\n\n    # fetch all records as a list from a query in one pass\n    users = await User.select()\n\n    # insert\n    user = await User.create(username='kszucs')\n\n    # modify\n    user.username = 'krisztian'\n    await user.save()\n\n    # async iteration on blog set\n    [b.title async for b in user.blog_set.order_by(Blog.title)]\n\n    # close connection pool\n    await db.close()\n\n    # see more in the tests\n\n\nManyToMany\n----------\n\nNote that `AioManyToManyField` must be used instead of `ManyToMany`.\n\n\n.. code:: python\n\n    from aiopeewee import AioManyToManyField\n\n\n    class User(AioModel):\n        username = CharField(unique=True)\n\n        class Meta:\n            database = db\n\n\n    class Note(AioModel):\n        text = TextField()\n        users = AioManyToManyField(User)\n\n        class Meta:\n            database = db\n\n\n    NoteUserThrough = Note.users.get_through_model()\n\n\n    async for user in note.users:\n        # do something with the users\n\n\nCurrently the only limitation I'm aware of immidiate setting of instance relation must be replaced with a method call:\n\n.. code:: python\n\n    # original, which is not supported\n    charlie.notes = [n2, n3]\n\n    # use instead\n    await charlie.notes.set([n2, n3])\n\n\nSerializing\n-----------\n\nConverting to dict requires the asyncified version of `model_to_dict`\n\n.. code:: python\n\n    from aiopeewee import model_to_dict\n\n    serialized = await model_to_dict(user)\n\n\n.. _peewee: http://docs.peewee-orm.com/en/latest/\n.. _torpeewee: https://github.com/snower/torpeewee\n\n.. |Build Status| image:: http://drone.lensa.com:8000/api/badges/kszucs/aiopeewee/status.svg\n   :target: http://drone.lensa.com:8000/kszucs/pandahouse\n\n", "model_answer": "0", "alternative_method": "", "label": 0}
{"id": 8, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n .. image:: https://readthedocs.org/projects/microurl/badge/?version=latest\n    :target: http://microurl.readthedocs.io/en/latest/?badge=latest\n.. image:: https://img.shields.io/pypi/v/microurl.svg\n    :target: https://pypi.python.org/pypi/microurl\n.. image:: https://travis-ci.org/MicroPyramid/microurl.svg?branch=master\n    :target: https://travis-ci.org/MicroPyramid/microurl\n.. image:: https://coveralls.io/repos/github/MicroPyramid/microurl/badge.svg?branch=master\n    :target: https://coveralls.io/github/MicroPyramid/microurl?branch=master\n.. image:: https://img.shields.io/pypi/l/microurl.svg\n    :target: https://pypi.python.org/pypi/microurl/\n\npython library for url minification.\n\n\nFeatures\n--------\n- Google\n    - URL Minifier\n    - QR Generator\n- Bitly\n    - URL Minifier\n\n\nInstallation\n------------\n\nInstall microurl via `pip <https://pypi.python.org/pypi/microurl/>`_\n\n.. code-block:: bash\n\n    $ pip install microurl\n\nOr, if you want the code that is currently on GitHub\n\n.. code-block:: bash\n\n    git clone git://github.com/micropyramid/microurl.git\n    cd microurl\n    python setup.py install\n\n\nStarting Out\n------------\n\nFirst, you'll want to head over to google or bily or supr and register an application!\n\nAfter you register, grab your applications ``Consumer Key`` and ``Consumer Secret`` from the application details tab.\n\nFirst, you'll want to import your desired minfier from microurl\n\n.. code-block:: python\n\n    from microurl import google_mini\n\n\nBasic Usage Of Google Mini\n--------------------------\n\n**Function definitions (i.e. google_mini()) can be found by reading over microurl/google.py**\n\n.. code-block:: python\n\n    minified = google_mini('validurl', 'Google_API_KEY')\n\nits as simple as that.\n\n\nQR Generator\n-------------\n\n.. Code-block:: python\n\n    qr_url = qrcode(url)\n\n\nAuthentication for bitly\n------------------------\n\n.. code-block:: python\n\n    from microurl import bitlyauthentication\n\n    authentication = bitlyauthentication(client_id, client_secret, redirect_uri)\n\n    auth_url=authentication.authorization_url()\n\nopen auth_url in your browser.After authorizing app, you will be redirected to redirect_url with code perameter.\n\n.. code-block:: python\n\n    access_token=authentication.get_accesstoken_from_code(code) # code that you get to redirect_url in the above step\n\n\nAuthentication using username and password\n------------------------------------------\n\n.. code-block:: python\n\n    access_token=authentication.get_accesstoken_from_username_pwd(bitlyusername or login email,password)\n\n\nBasic Usage of Bitly\n--------------------\n\n**Function definitions (i.e. shorturl()) can be found by reading over microurl/bitly.py**\n\n.. code-block:: python\n\n    from microurl import bitlyapi\n\n    bitly=bitlyapi(access_token) # access_token is getting from previous steps\n\n    minified=bitly.shorturl(longurl,domain)['url'] # domain is optional here\n\n\n**To get detail information of bitlylink.**\n\n.. code-block:: python\n\n    bitly.url_info(bitlylink,expand_user='True | False',hash='one or more bitly hashes') # expand_user,hash are optional here\n\n\n**To get the number of clicks on a single bitly link.**\n\n.. code-block:: python\n\n    bitly.link_clicks(bitlylink, unit=\"day\", units=10, timezone=-4, limit=20, unit_reference_ts=\"now\")\n\n    # here except bitlylink all are optional\n\n**To get the number of shares on a single bitly link.**\n\n.. code-block:: python\n\n    bitly.link_shares(bitlylink, unit=\"day\", units=10, timezone=-4, limit=20, unit_reference_ts=\"now\")\n\n    # here except bitlylink all are optional\n\n\n**To get loggedin user info**\n\n.. code-block:: python\n\n    bitly.user_info()\n\n\n**To get user link history in reverse chronological order.**\n\n.. code-block:: python\n\n    bitly.user_linkhistory(bitlylink, limit=20, offset=1, created_after='1381000000', created_before='1381844314', expand_client_id=True, archived=\"both\", private=\"both\")\n\n    # here all fields are optional\n\n\nQuestions, Comments, etc?\n-------------------------\n\nhttps://github.com/MicroPyramid/microurl/issues\n\n\nWant to help?\n-------------\n\nmicrourl is useful, but ultimately only as useful as the people using it (say that ten times fast!). If you'd like to help, write example code, contribute patches, document things on the wiki, tweet about it. Your help is always appreciated!\n\n\nFor more Updates\n----------------\nhttps://micropyramid.com/oss/\n\nVisit our Python Development page `Here`_\n\nWe welcome your feedback and support, raise github ticket if you want to report a bug. Need new features? `Contact us here`_\n\n.. _contact us here: https://micropyramid.com/contact-us/\n.. _Here: https://micropyramid.com/python-development-services/\n\n", "model_answer": "/没有/bb0/han/ba/yi/wenjianjia deprecation/bb/。", "alternative_method": "", "label": 0}
{"id": 9, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n wkhtmltopdf-wrapper\n===================\n\nA simple and direct python wrapper for the `wkhtmltopdf\nlib <https://github.com/wkhtmltopdf/wkhtmltopdf>`__ inspired by inspired\nby `Qoda's\npython-wkhtmltopdf <https://github.com/qoda/python-wkhtmltopdf>`__\n\nRequirements\n------------\n\nSystem:\n~~~~~~~\n\n-  Linux 32/64 or OSX only (Windows is not supported at this stage)\n-  wkhtmltopdf\n-  python 2.5+ / python3\n\nInstallation\n------------\n\nwkhtmltopdf (Linux)\n~~~~~~~~~~~~~~~~~~~\n\n1. Install Fonts:\n\n.. code:: bash\n\n    $ sudo apt-get install xfonts-100dpi xfonts-75dpi xfonts-scalable xfonts-cyrillic\n\n2. Install wkhtmltopdf\n\ngoto http://wkhtmltopdf.org/downloads.html for the latest release\n(Recommended)\n\nwkhtmltopdf (OSX)\n~~~~~~~~~~~~~~~~~\n\nor goto http://wkhtmltopdf.org/downloads.html for the latest release\n(Recommended)\n\nwkhtmltopdf-wrapper (Any Platform)\n----------------------------------\n\n1. PIP:\n\n.. code:: bash\n\n    $ pip install wkhtmltopdf-wrapper\n\nor\n\n.. code:: bash\n\n    $ pip install git+https://github.com/aguegu/wkhtmltopdf-wrapper.git\n\n2. Development:\n\n.. code:: bash\n\n    $ git clone https://github.com/aguegu/wkhtmltopdf-wrapper.git\n    $ cd wkhtmltopdf-wrapper\n    $ virtualenv .\n    $ pip install -r requirements.pip\n\nUsage\n=====\n\nthe option\\_string would be sent to the wkhtmltopdf command line in\nexactly the same shape. so the options can be anything as long as the\nwkhtmltopdf supports. check its\n`usage <http://wkhtmltopdf.org/usage/wkhtmltopdf.txt>`__. This lib is\njust as simple as that. If anything goes wrong, just check the doc. If\nthe command execute ok with wkhtmltopdf dircetly, this wrapper should\nwork too.\n\nAs I check\n`qoda/python-wkhtmltopdf <https://github.com/qoda/python-wkhtmltopdf>`__,\nwhere this repo forked from, it tried to prase args. But it only include\na small set of the arguments the command supports. Furthermore, it set\ndefault values to this set of arguments and pass them all to the\ncommand. For me, it is totally unnecessary and even mistakeful. There is\ndefault setting setup and doc in the command. Some arugments may not\neven work together, as ``--page-size`` and ``--page-height``,\n``--page-width``. So my solution is just pass the option in as a string,\nLazy, flexible and effective.\n\nfrom class:\n~~~~~~~~~~~\n\n.. code:: python\n\n      from wkhtmltopdfwrapper import WKHtmlToPdf\n      \n      wkhtmltopdf = WKHtmlToPdf('-T 20 -B 20 -g --zoom 1.5')\n      # option_string\n      \n      wkhtmltopdf.render('http://www.example.com', '~/example.pdf')\n      # source url, output file path\n\nfrom method:\n~~~~~~~~~~~~\n\n.. code:: python\n\n      from wkhtmltopdfwrapper import wkhtmltopdf\n      wkhtmltopdf('example.com', '~/example.pdf', '-T 20 -B 20 -g --zoom 1.5')\n\nfrom commandline (installed):\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n      $ python -m wkhtmltopdfwrapper.__init__ example.com ~/example.pdf -T 20 -B 20 -g --zoom 1.5\n\n", "model_answer": "0", "alternative_method": "", "label": 0}
{"id": 10, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n ZooKeeper Python bindings\n=========================\n\nThis is a self-contained distribution of the ZooKeeper Python\nbindings. It should build on any unix-like system by just running the\n``setup.py`` script or using an install tool like pip, easy_install or\nbuildout. (Windows patches to the setup script are welcome. :)\n\nFor more information **except** building instructions, see the file\nORIGINAL-README included in the source distribution.\n\nIf you have setuptools or distribute in your python path, then you can\nuse the ``setup.py test`` command to run the tests.  Note, however,\nthat the tests require that a testing ZooKeeper server be running on\nport 22182 of the local machine.\n\nYou can find the source code of this distribution at\nhttps://github.com/python-zk/zc-zookeeper-static\n\nChangelog\n=========\n\n3.4.4-1 (unreleased)\n--------------------\n\n\n3.4.4 (2012-09-25)\n------------------\n\nBased on Zookeeper 3.4.4.\n\n- Include patch https://issues.apache.org/jira/browse/ZOOKEEPER-1398:\n  zkpython corrupts session passwords that contain nulls.\n\n\n3.4.3-5 (2012-08-23)\n--------------------\n\nBased on Zookeeper 3.4.3.\n\n- Include patch https://issues.apache.org/jira/browse/ZOOKEEPER-1398:\n  zkpython corrupts session passwords that contain nulls.\n\n3.4.3-4 (2012-08-16)\n--------------------\n\nBased on Zookeeper 3.4.3.\n\n- Include patch https://issues.apache.org/jira/browse/ZOOKEEPER-1339:\n  C client didn't build with `--enable-debug`.\n\n3.4.3-3 (2012-06-06)\n--------------------\n\nBased on Zookeeper 3.4.3.\n\n- Include patch https://issues.apache.org/jira/browse/ZOOKEEPER-1318:\n  In Python binding, get_children (and get and exists, and probably others)\n  with expired session doesn't raise exception properly.\n\n- Include patch https://issues.apache.org/jira/browse/ZOOKEEPER-1431:\n  zkpython: async calls leak memory\n\n3.4.3 (2012-04-20)\n------------------\n\nBased on Zookeeper 3.4.3.\n\n3.3.5 (2012-03-24)\n------------------\n\nBased on Zookeeper 3.3.5.\n\n", "model_answer": "0", "alternative_method": "", "label": 0}
{"id": 11, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n =====================\nSubprocess Middleware\n=====================\n\n.. image:: https://travis-ci.org/lrowe/subprocess_middleware.svg?branch=master\n    :target: https://travis-ci.org/lrowe/subprocess_middleware\n\nThis package was built to support rendering Python generated JSON into HTML using a nodejs.\nTransform subprocesses are reused, avoiding process startup overhead and allowing the JIT to kick in.\nFor our code this gives a 10x speedup for subsequent responses.\n\nThe protocol is simple and generic, HTTP formatted responses (headers and body) are piped into and out of the transform subprocess.\nTransforms may modify both the response headers and body.\n\nTransforms modifying the response body must ensure the Content-Length header is updated to match.\n\n\nPython 2 and subprocess32\n-------------------------\n\nThe subprocess module in Python 2.7 can leak file descriptors.\nBackported fixes from Python 3.x are available in subprocess32_, and will be used if installed.\n\n.. _subprocess32: https://pypi.python.org/pypi/subprocess32\n\n\nPipe buffering\n--------------\n\nFor small responses, the unix command ``cat`` works as an identity transform.\nOnce a response exceeds the pipe buffer limit (typically 16K or 64K), a deadlock occurs with both processes waiting for the other to read.\nTo avoid this, subprocesses should read in the entirity of each response before writing to stdout and flush stdout at the response end.\n\nWorking around this limitation would require writing and reading from different threads.\n\n\nAlternatives\n============\n\nApache mod_ext_filter\n---------------------\n\nWith mod_ext_filter_, the response body is simply piped through an external program.\nA new process is started for each response, so it suffers from the same limitations as CGI where application setup costs are paid for each request.\n\n.. _mod_ext_filter: http://httpd.apache.org/docs/2.4/en/mod/mod_ext_filter.html\n\n\nFastCGI filter\n--------------\n\nFastCGI_ defines a filter role for transforming responses using long-lived processes.\nUnfortunately the filter role is not supported by Apache mod_fcgid_ and the FastCGI protocol itself is unnecessarily complicated to implement.\n\n.. _FastCGI: http://www.fastcgi.com/devkit/doc/fastcgi-prog-guide/ch1intro.htm\n.. _mod_fcgid: http://httpd.apache.org/mod_fcgid/mod/mod_fcgid.html\n\n\nTransforming HTTP reverse proxy\n-------------------------------\n\nAnother alternative would be to implement the transform as part of an HTTP proxy.\nThis adds significant deployment complexity with multiple hops required to support SSL.\n\n\nPyV8\n----\n\nPyV8_ allows running JavaScript in process.\nIt can be tricky to build whereas nodejs packages are easily available.\n\n.. _PyV8: https://pypi.python.org/pypi/PyV8\n\nuWSGI Transformations\n---------------------\n\nuWSGI_ are working on an rpc plugin for their transformation system.\nThe rpc protocol itself has a 64k request size limit.\n\n.. _uWSGI: http://uwsgi-docs.readthedocs.org/\n\n", "model_answer": "0", "alternative_method": "", "label": 0}
{"id": 12, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n |sf-python-logo| SolidFire Python SDK\n=====================================\n\nPython SDK library for interacting with SolidFire Element API\n\n|pypy| |python| |format| |downloads| |license|\n\nCurrent Release\n---------------\n\nVersion 12.3.0.196\n\nDescription\n-----------\n\nThe SolidFire Python SDK is a collection of libraries that facilitate\nintegration and orchestration between proprietary systems and\nthird-party applications. The Python SDK allows developers to deeply\nintegrate SolidFire system API with the Python programming language. The\nSolidFire Python SDK reduces the amount of additional coding time\nrequired for integration.\n\nCompatibility\n-------------\n\n+------------------------+---------------+\n| Component              | Version       |\n+========================+===============+\n| SolidFire Element OS   | 11.0 - 12.3   |\n+------------------------+---------------+\n\nGetting Help\n------------\n\nIf you have any questions or comments about this product, contact\nng-sf-host-integrations-sdk@netapp.com or reach out to the online\ndeveloper community at `ThePub <http://netapp.io>`__. Your feedback\nhelps us focus our efforts on new features and capabilities.\n\nDocumentation\n-------------\n\n`Release\nNotes <NetAppElementPythonSDKReleaseNotes12_3.pdf>`__\n\nInstallation\n------------\n\n**From PyPI**\n\n::\n\n    pip install solidfire-sdk-python\n\n**From Source**\n\n*Note*: It is recommended using\n`virtualenv <https://github.com/pypa/virtualenv>`__ for isolating the\npython environment to only the required libraries.\n\nAlternatively, for development purposes or to inspect the source, the\nfollowing will work:\n\n::\n\n    git clone git@github.com:solidfire/solidfire-sdk-python.git\n    cd solidfire-sdk-python\n    git checkout develop\n    pip install -e \".[dev, test, docs, release]\"\n    python setup.py install\n\nThen append the location of this directory to the ``PYTHONPATH``\nenvironment variable to use the SDK in other python scripts:\n\n::\n\n    export PYTHONPATH=$PYTHONPATH:/path/to/sf-python-sdk/\n\nThat's it -- you are ready to start interacting with your SolidFire\ncluster using Python!\n\nExamples\n--------\n\nStep 1 - Build an `Element <http://solidfire-sdk-python.readthedocs.io/en/latest/solidfire.html#solidfire.Element>`__ object using the factory\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis is the preferred way to construct the\n`Element <http://solidfire-sdk-python.readthedocs.io/en/latest/solidfire.html#solidfire.Element>`__\nobject. The factory will make a call to the SolidFire cluster using the\ncredentials supplied to test the connection. It will also set the\nversion to communicate with based on the highest number supported by the\nSDK and Element OS. Optionally, you can choose to set the version\nmanually and whether or not to verify SSL. Read more about it in the\n`ElementFactory <http://solidfire-sdk-python.readthedocs.io/en/latest/solidfire.html#solidfire.factory.ElementFactory>`__ documentation.\n\n.. code-block:: python\n\n    from solidfire.factory import ElementFactory\n\n    # Use ElementFactory to get a SolidFireElement object.\n    sfe = ElementFactory.create(\"ip-address-of-cluster\", \"username\", \"password\")\n\nStep 2 - Call the API method and retrieve the result\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAll service methods in SolidFireElement call API endpoints and they all\nreturn result objects. The naming convention is :code:`[method_name]_result`.\nFor example, :code:`list_accounts` returns a :code:`list_accounts_result` object\nwhich has a property called :code:`accounts` that can be iterated.\n\nThis example sends a request to list accounts then pulls the first account\nfrom the :code:`add_account_result` object.\n\n.. code-block:: python\n\n    # Send the request and wait for the result then pull the AccountID\n    list_accounts_result = sfe.list_accounts()\n    account = list_accounts_result.accounts[0];   \n\nMore examples using the Python SDK\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n    from solidfire.factory import ElementFactory\n\n    # Create connection to SF Cluster\n    sfe = ElementFactory.create(\"ip-address-of-cluster\", \"username\", \"password\")\n\n    # --------- EXAMPLE 1 - CREATE AN ACCOUNT -----------\n    # Send the request with required parameters and gather the result\n    add_account_result = sfe.add_account(username=\"example-account\")\n    # Pull the account ID from the result object\n    account_id = add_account_result.account_id\n\n    # --------- EXAMPLE 2 - CREATE A VOLUME -------------\n    # Send the request with required parameters and gather the result\n    create_volume_result = sfe.create_volume(name=\"example-volume\",\n                                             account_id=account_id,\n                                             total_size=1000000000,\n                                             enable512e=False)\n    # Pull the VolumeID off the result object\n    volume_id = create_volume_result.volume_id\n\n    # --------- EXAMPLE 3 - LIST ONE VOLUME FOR AN ACCOUNT -------------\n    # Send the request with desired parameters and pull the first volume in the\n    # result\n    volume = sfe.list_volumes(accounts=[account_id], limit=1).volumes[0]\n    # pull the iqn from the volume\n    iqn = volume.iqn\n\n    # --------- EXAMPLE 3 - MODIFY A VOLUME -------------\n    # Send the request with the desired parameters\n    sfe.modify_volume(volume_id=volume_id, total_size=2000000000)\n\nMore Examples\n-------------\n\n\nMore specific examples are available `here <examples/examples.rst>`__\n\n\nLogging\n-------\n\nTo configure logging responses, execute the following:\n\n.. code-block:: python\n\n    import logging\n    from solidfire import common\n    common.setLogLevel(logging.DEBUG)\n\nTo access the logger for the Element instance:\n\n.. code-block:: python\n\n     from solidfire.common import LOG\n\nTimeouts\n--------\n\nConnection timeout (useful for failing fast when a host becomes\nunreachable):\n\n.. code-block:: python\n\n    from solidfire.factory import ElementFactory\n    sfe = ElementFactory.create(\"ip-address-of-cluster\", \"username\", \"password\")\n    sfe.timeout(600)\n\nRead timeout (useful for extending time for a service call to return):\n\n.. code-block:: python\n\n    from solidfire.factory import ElementFactory\n    sfe = ElementFactory.create(\"ip-address-of-cluster\", \"username\", \"password\")\n    sf.read_timeout(600)\n\n**License**\n-----------\n\nCopyright © 2021 NetApp, Inc. All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may\nnot use this file except in compliance with the License. You may obtain\na copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n.. |sf-python-logo| image:: https://raw.githubusercontent.com/solidfire/solidfire-sdk-python/master/img/python-50.png\n.. |pypy| image:: https://img.shields.io/pypi/v/solidfire-sdk-python.svg\n   :target: https://badge.fury.io/py/solidfire-sdk-python\n.. |python| image:: https://img.shields.io/pypi/pyversions/solidfire-sdk-python.svg\n   :target: https://pypi.python.org/pypi/solidfire-sdk-python/\n.. |format| image:: https://img.shields.io/pypi/format/solidfire-sdk-python.svg\n   :target: https://pypi.python.org/pypi/solidfire-sdk-python/\n.. |downloads| image:: https://img.shields.io/pypi/dm/solidfire-sdk-python.svg\n   :target: https://pypi.python.org/pypi/solidfire-sdk-python/\n.. |license| image:: https://img.shields.io/pypi/l/solidfire-sdk-python.svg\n   :target: https://pypi.python.org/pypi/solidfire-sdk-python/\n", "model_answer": "(0)", "alternative_method": "", "label": 0}
{"id": 13, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n .. image:: https://travis-ci.org/monetizeio/sqlalchemy-orm-tree.png?branch=master\n    :target: https://travis-ci.org/monetizeio/sqlalchemy-orm-tree\n\n.. image:: https://badge.fury.io/py/SQLAlchemy-ORM-tree.png\n    :target: http://badge.fury.io/py/sqlalchemy-orm-tree\n\n.. image:: https://coveralls.io/repos/monetizeio/sqlalchemy-orm-tree/badge.png?branch=master\n    :target: https://coveralls.io/r/monetizeio/sqlalchemy-orm-tree?branch=master\n\nSQLAlchemy-ORM-tree\n-------------------\n\nAn implementation for SQLAlchemy-based applications of the nested-sets /\nmodified-pre-order-tree-traversal technique for storing hierarchical data\nin a relational database.\n\n==============  ==========================================================\nPython support  Python 2.6+, 3.3+\nSQLAlchemy      SQLAlchemy >=0.7.5, >=0.8, >=0.9\nSource          https://github.com/monetizeio/sqlalchemy-orm-tree\nIssues          https://github.com/monetizeio/sqlalchemy-orm-tree/issues\nDocs            https://sqlalchemy-orm-tree.readthedocs.org/\nAPI             https://sqlalchemy-orm-tree.readthedocs.org/api.html\nTravis          http://travis-ci.org/monetizeio/sqlalchemy-orm-tree\nTest coverage   https://coveralls.io/r/monetizeio/sqlalchemy-orm-tree\npypi            https://pypi.python.org/pypi/sqlalchemy-orm-tree\nohloh           http://www.ohloh.net/p/sqlalchemy-orm-tree\nLicense         `BSD`_.\ngit repo        .. code-block:: bash\n\n                    $ git clone https://github.com/monetizeio/sqlalchemy-orm-tree.git\ninstall         .. code-block:: bash\n\n                    $ pip install sqlalchemy-orm-tree\n\ninstall dev     .. code-block:: bash\n\n                    $ git clone https://github.com/monetizeio/sqlalchemy-orm-tree.git sqlalchemy-orm-tree\n                    $ cd ./sqlalchemy-orm-tree\n                    $ virtualenv .env\n                    $ source .env/bin/activate\n                    $ pip install -e .\ntests           .. code-block:: bash\n\n                    $ python setup.py test\n==============  ==========================================================\n\n.. _BSD: http://opensource.org/licenses/BSD-3-Clause\n\n\nSimple Example\n==============\n\n::\n\n    import sqlalchemy_tree\n    Model = declarative_base(metaclass=sqlalchemy_tree.DeclarativeMeta)\n\n    class Page(Model):\n\n        # This activates sqlalchemy-orm-tree.\n        __tree_manager__ = 'tree'\n\n\nPage.tree.register()\n", "model_answer": "(0)", "alternative_method": "", "label": 0}
{"id": 14, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n pyScss, a Scss compiler for Python\n==================================\n\npyScss2 is a compiler for the `Sass`_ language, a superset of CSS3 that adds\nprogramming capabilities and some other syntactic sugar.\n\n.. _Sass: http://sass-lang.com/\n\nOriginally it was forked from unmaintained https://github.com/Kronuz/pyScss.\n\nQuickstart\n----------\n\nYou need Python 2.7+ or 3.3+.  PyPy is also supported.\n\nInstallation::\n\n    pip install pyScss2\n\nUsage::\n\n    python -mscss < style.scss\n\nPython API::\n\n    from scss import Compiler\n    Compiler().compile_string(\"a { color: red + green; }\")\n\n\nFeatures\n--------\n\n95% of Sass 3.2 is supported.  If it's not supported, it's a bug!  Please file\na ticket.\n\nMost of Compass 0.11 is also built in.\n\n\nFurther reading\n---------------\n\nDocumentation is in Sphinx.  You can build it yourself by running ``make html``\nfrom within the ``docs`` directory.\n\nThe canonical syntax reference is part of the Ruby Sass documentation:\nhttp://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html\n\n\nObligatory\n----------\n\nCopyright © 2020 Ivan Kolodyazhny (e0ne).  Additional credits in the\ndocumentation.\n\nLicensed under the `MIT license`_, reproduced in ``LICENSE``.\n\n.. _MIT license: http://www.opensource.org/licenses/mit-license.php\n\n", "model_answer": "(0)", "alternative_method": "", "label": 0}
{"id": 15, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n ===================================================\nkombu-sqlalchemy - Kombu transport using SQLAlchemy\n===================================================\n\n:version: 1.1.0\n\nDeprecated\n==========\n\nkombu-sqlalchemy has now moved into Kombu core, so this repository\nis no longer in use.\n\nTo upgrade, install the latest Kombu version.\n\n**ORIGINAL README BELOW**\n\n\nIntroduction\n============\n\nThis package enables you to use SQLAlchemy as the message store\nfor `Kombu`_.\n\n\n``kombu-sqlalchemy`` contains a single transport,\n``sqlakombu.transport.Transport``, which is used like this::\n\n    >>> from kombu.connection import BrokerConnection\n    >>> c = BrokerConnection(DB_URL, transport=\"sqlakombu.transport.Transport\")\n\n``DB_URL`` should be a valid SQLAlchemy database connection url in the form::\n\n    \"dialect+driver://username:password@host:port/database\"\n\n\n.. _`Kombu`: http://pypi.python.org/pypi/kombu\n\nInstallation\n============\n\nYou can install ``kombu-sqlalchemy`` either via the Python Package Index (PyPI)\nor from source.\n\nTo install using ``pip``,::\n\n    $ pip install kombu-sqlalchemy\n\n\nTo install using ``easy_install``,::\n\n    $ easy_install kombu-sqlalchemy\n\n\nIf you have downloaded a source tarball you can install it\nby doing the following,::\n\n    $ python setup.py build\n    # python setup.py install # as root\n\nLicense\n=======\n\nThis software is licensed under the ``New BSD License``. See the ``LICENSE``\nfile in the top distribution directory for the full license text.\n\n.. # vim: syntax=rst expandtab tabstop=4 shiftwidth=4 shiftround\n\n\n", "model_answer": "(1) The alternative method mentioned by the author.", "alternative_method": "", "label": 1}
{"id": 16, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n .. _docutils: http://docutils.sourceforge.net/\n.. _Django: https://www.djangoproject.com/\n.. _django-materialize-css: https://pypi.python.org/pypi/django-materialize-css/\n.. _django-crispy-forms: https://github.com/maraujop/django-crispy-forms\n.. _Materialize: http://materializecss.com \n\nThis repo is Deprecated\n=======================\nPlease dont use me, i no longer have maintenance.\n\nLooking for someone to maintain the project\n===========================================\nIf you are interested in continuing with the project and maintaining it, please send me an email.\n\nIntroduction\n============\n\nThis is a `Django`_ application to add `django-crispy-forms`_ layout objects for `Materialize`_.\n\nThis app does not embed a `Materialize`_ release, you will have to install `django-materialize-css`_ as a dependency or download/ link to latests updates of materializecss in your project.\n\nLinks\n*****\n\n* Read the documentation on `Read the docs soon!`;\n* Download and install this from `PyPi package <https://pypi.python.org/pypi/crispy-forms-materialize/>`__\n* Clone it on this `Github repository <https://github.com/edvm/crispy-forms-materialize>`__\n\nRequires\n========\n\n* `django-crispy-forms`_ above 1.4.x version\n* `django-materialize-css`_ above 1.4.x version (optional)\n\nYou can get django-materialize-css from `PyPI <https://pypi.python.org/pypi/django-materialize-css/>`__ and `github <https://github.com/edvm/django-materialize-css>`__\n\nInstallation\n============\n\nProbably the best way to install is by using `PIP`::\n\n    $ pip install crispy-forms-materialize\n\nIf you want to stay on the bleeding edge of the app::\n\n    $ git clone https://github.com/edvm/crispy-forms-materialize.git\n    $ cd crispy-forms-materialize\n    $ python setup.py install\n\n\nThen add the app in your project's ``INSTALLED_APPS`` like this :\n\n.. sourcecode:: python\n\n    INSTALLED_APPS = (\n        ...\n        'materialize',\n        'crispy_forms',\n        'crispy_forms_materialize',\n        ...\n    )\n\nThen change crispy template pack settings to start using it in your forms:\n\n.. sourcecode:: python\n\n    # Default layout to use with \"crispy_forms\"\n    CRISPY_TEMPLATE_PACK = 'materialize_css_forms'\n\nAll other `django-crispy-forms`_ settings option apply, see its documentation for more details.\n\n", "model_answer": "(1) The alternative method mentioned by the author.", "alternative_method": "", "label": 1}
{"id": 17, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n *WARNING*: This project is currently UNMAINTAINED. Please use the official one: https://github.com/mailjet/mailjet-apiv3-python\n\n==============\nDjango-Mailjet\n==============\nUn-official Django email backend for use with Mailjet - https://www.mailjet.com/\n\nOverview\n========\nDjango-Mailjet is a drop-in mail backend for Django.\n\nGetting going\n=============\nInstall django-mailjet:\n    ``python3 -m pip install django-mailjet``\nAdd the following to your ``settings.py``::\n\n    EMAIL_BACKEND = 'django_mailjet.backends.MailjetBackend'\n    MAILJET_API_KEY = 'API-KEY'\n    MAILJET_API_SECRET = 'API-SECRET'\n\nReplace ``API-KEY`` and ``API-SECRET`` with the values from your Mailjet account details.\n\nNow, when you use ``django.core.mail.send_mail``, Mailjet will send the messages.\n\n.. _Mailjet: http://mailjet.com\n\n*NOTE*: Django-Mailjet does **NOT**\nvalidate your data for compliance with Mailjet's API.\nYou must ensure what you send is appropriate.\n\n\nDjango Email Backend Reference\n================================\n* https://docs.djangoproject.com/en/dev/topics/email/#email-backends\n\n", "model_answer": "(1) The alternative method mentioned by the author: https://github.com/mailjet/mailjet-apiv3-python", "alternative_method": "", "label": 1}
{"id": 20, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n **THIS PROJECT IS UNMAINTAINED**\n\nPlease use `micawber <https://github.com/coleifer/micawber>`_ -- it has much\nof the same functionality along with many improvements.\n\n\nGetting Started with OEmbed\n===========================\n\nInstallation\n------------\n\nFirst, you need to install OEmbed.  It is available at http://github.com/worldcompany/djangoembed/\n\n::\n\n    git clone git://github.com/worldcompany/djangoembed/\n    cd djangoembed\n    python setup.py install\n\nAdding to your Django Project\n--------------------------------\n\nAfter installing, adding OEmbed consumption to your projects is a snap.  First,\nadd it to your projects' INSTALLED_APPs and run 'syncdb'::\n    \n    # settings.py\n    INSTALLED_APPS = [\n        ...\n        'oembed'\n    ]\n\ndjangoembed uses a registration pattern like the admin's.  In order to be\nsure all apps have been loaded, djangoembed should run autodiscover() in the\nurls.py.  If you like, you can place this code right below your admin.autodiscover()\nbits::\n    \n    # urls.py\n    import oembed\n    oembed.autodiscover()\n\nConsuming Resources\n-------------------\n\nNow you're ready to start consuming OEmbed-able objects.  There are a couple of\noptions depending on what you want to do.  The most straightforward way to get\nup-and-running is to add it to your templates::\n\n    {% load oembed_tags %}\n    \n    {% oembed %}blog.content{% endoembed %}\n\n    {# or use the filter #}\n    \n    {{ blog.content|oembed }}\n    \n    {# maybe you're working with some dimensional constraints #}\n    \n    {% oembed \"600x600\" %}blog.content{% endoembed %}\n    \n    {{ blog.content|oembed:\"600x600\" }}\n\nYou can consume oembed objects in python as well::\n\n    import oembed\n    oembed.autodiscover()\n    \n    # just get the metadata\n    resource = oembed.site.embed('http://www.youtube.com/watch?v=nda_OSWeyn8')\n    resource.get_data()\n    \n    {u'author_name': u'botmib',\n     u'author_url': u'http://www.youtube.com/user/botmib',\n     u'height': 313,\n     u'html': u'<object width=\"384\" height=\"313\"><param name=\"movie\" value=\"http://www.youtube.com/v/nda_OSWeyn8&fs=1\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"http://www.youtube.com/v/nda_OSWeyn8&fs=1\" type=\"application/x-shockwave-flash\" width=\"384\" height=\"313\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed></object>',\n     u'provider_name': u'YouTube',\n     u'provider_url': u'http://www.youtube.com/',\n     u'title': u'Leprechaun in Mobile, Alabama',\n     u'type': u'video',\n     u'version': u'1.0',\n     u'width': 384}\n    \n    # get the metadata and run it through a template for pretty presentation\n    from oembed.consumer import OEmbedConsumer\n    client = OEmbedConsumer()\n    embedded = client.parse_text(\"http://www.youtube.com/watch?v=nda_OSWeyn8\")\n    \n    <div class=\"oembed oembed-video provider-youtube\">\n      <object width=\"384\" height=\"313\">\n        <param name=\"movie\" value=\"http://www.youtube.com/v/nda_OSWeyn8&fs=1\"></param>\n        <param name=\"allowFullScreen\" value=\"true\"></param>\n        <param name=\"allowscriptaccess\" value=\"always\"></param>\n        <embed src=\"http://www.youtube.com/v/nda_OSWeyn8&fs=1\" \n               type=\"application/x-shockwave-flash\" \n               width=\"384\" \n               height=\"313\" \n               allowscriptaccess=\"always\" \n               allowfullscreen=\"true\">\n        </embed>\n      </object>\n      <p class=\"credit\">\n        <a href=\"http://www.youtube.com/watch?v=nda_OSWeyn8\">Leprechaun in Mobile, Alabama</a>\n        by \n        <a href=\"http://www.youtube.com/user/botmib\">botmib</a>\n      </p>\n    </div>'\n\nTroubleshooting\n---------------\n\nProblem: You try the youtube embed example, but all you get is a link to the youtube video.\n\nSolution: Djangoembed uses fixtures to load data about oembed providors like Youtube in to the database.  Try fooling around with syncdb (or migrations, if you're running South) until there are objects of type oembed.storedprovider.\n\nIf you have another problem, consider looking through the more extensive docs in the project's doc subdirectory.\n\n", "model_answer": "1", "alternative_method": "", "label": 1}
{"id": 21, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n ==============\ndjango-rq-mail\n==============\n\n**This project is not maintained anymore, it doesn't support latest changes from rq**\n\ndjango-rq-mail is a simple Python library based on rq_ to store emails sent\nby Django_ and process them in the background with workers.\n\nAs django-rq-mail is based on rq_, it's entirely backed by Redis_.\n\nArchitecture\n------------\n\ndjango-rq-mail adds new elements to enjoy `Sorted Sets <http://redis.io/commands#sorted_set>`_\nfrom Redis_.\n\nFor the purpose of django-rq-mail, it implements the concept of ``WaitingQueue``\nwhich delays the processing of a job with a timestamp.\n\nThe default behavior of rq_ is to process jobs via `BLPOP <http://redis.io/commands/blpop>`_ which\nblocks the connection when there are no elements to pop from any of the given queues.\nWith this behavior there is no way to delays the processing of a job and when it's failing\nrq_ pushs it in a failed queue.\nOf course, you can requeue this job later but there is no fallback mechanism.\n\nIn django-rq-mail you can define fallback steps (in seconds) to retry a job until\nit's not failing. When a job has been tested on each steps we reintroduce\nthe default behavior of rq_ on pushing it in the failed queue.\n\nEach steps will create a waiting queue and when a job is failing we take the\ncurrent timestamp with the delta to retry it in the future.\n\n.. image:: http://yuml.me/895ce159\n\nThis mechanism is possible with `ZADD <http://redis.io/commands/zadd>`_ which\nadds a serialized job in the queue with a score and `ZREVRANGEBYSCORE <http://redis.io/commands/zrevrangebyscore>`_\nto return all the elements in the sorted set with a score between max (current timestamp) and min.\n\nAs you may understood, we have dropped the default blocking behavior\nto replace it by a daemon which is running each seconds.\n\n\nInstallation\n------------\n\n1. Either check out the package from GitHub_ or it pull from a release via PyPI ::\n\n       pip install django-rq-mail\n\n\n2. Add 'rq_mail' to your ``INSTALLED_APPS`` ::\n\n       INSTALLED_APPS = (\n           'rq_mail',\n       )\n\nto use the `rq_mail` command (via Django commandline) shipped by django-rq-mail.\n\nThis command is a minimal integration of rq_ into Django_ to launch the\n**Dispatcher**.\n\n3. Define ``EMAIL_BACKEND`` ::\n\n       EMAIL_BACKEND = 'rq_mail.backends.RqBackend'\n\n4. Define ``RQ_MAIL_EMAIL_BACKEND`` the backend used to send your emails, for example ::\n\n       RQ_MAIL_EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n\nLogging\n-------\n\nRQ 0.3.3 uses standard Python's ``logging``, this means\nyou can easily configure ``rqworker``'s logging mechanism in django's\n``settings.py``. For example:\n\n.. code-block:: python\n\n    LOGGING = {\n        'version': 1,\n        'disable_existing_loggers': False,\n        'formatters': {\n            'rq_console': {\n                'format': '%(asctime)s %(message)s',\n                'datefmt': '%H:%M:%S',\n            },\n        },\n        'handlers': {\n            'rq_console': {\n                'level': 'DEBUG',\n                'class': 'rq.utils.ColorizingStreamHandler',\n                'formatter': 'rq_console',\n                'exclude': ['%(asctime)s'],\n            },\n        },\n        'loggers': {\n            'rq.worker': {\n                'handlers': ['rq_console'],\n                'level': 'DEBUG'\n            },\n        }\n    }\n\nUtilisation\n-----------\n\nOnce you have installed it, you can run ``python manage.py rq_mail`` from your shell.\n\nConfiguration\n-------------\n\n``RQ_MAIL_PREFIX``\n..................\n\nThe prefix used to name all queues created by django-rq-mail.\n\n``RQ_MAIL_MAIN_QUEUE``\n......................\n\nThe name of the main queue.\n\n``RQ_MAIL_EMAIL_BACKEND``\n.........................\n\nThe email backend used to send emails when they are processed in the background.\n\n``RQ_MAIL_REDIS_HOST``\n......................\n\nThe Redis host used to connect.\n\n``RQ_MAIL_REDIS_PORT``\n......................\n\nThe Redis port used to connect.\n\n``RQ_MAIL_REDIS_DB``\n....................\n\nThe Redis database used to connect.\n\n``RQ_MAIL_REDIS_PASSWORD``\n..........................\n\nThe Redis password used to connect.\n\n``RQ_MAIL_REDIS_URL``\n..........................\n\nThe Redis url used to connect.\n\n``RQ_MAIL_REDIS_SOCKET``\n..........................\n\nThe Redis socket used to connect.\n\n``RQ_MAIL_FALLBACK_STEPS``\n..........................\n\nA simple list of timing to create waiting queues.\n\nYou can define as much steps as you want, each will be transformed to a queue.\nSo if you define 10 steps, you will allow a message to fail 10 times until it\nwill go in the failed queue.\n\n.. _Django: https://www.djangoproject.com/\n.. _rq: https://github.com/nvie/rq\n.. _Redis: http://redis.io/\n.. _GitHub: https://github.com/thoas/django-rq-mail\n\n", "model_answer": "(1) The alternative method mentioned by the author.", "alternative_method": "", "label": 1}
{"id": 23, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n DEPRECATED, USE `DJANGO-USERPROFILE <https://github.com/praekelt/django-userprofile>`_ INSTEAD!\n\n", "model_answer": "The author has deprecated the package and provided an alternative solution: `DJANGO-USERPROFILE <https://github.com/praekelt/django-userprofile>`.", "alternative_method": "", "label": 1}
{"id": 24, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n ========\nbarbeque\n========\n\n.. image:: https://badge.fury.io/py/barbeque.png\n    :target: http://badge.fury.io/py/barbeque\n    :alt: Latest PyPI version\n\n.. image:: https://travis-ci.org/moccu/barbeque.png?branch=master\n    :target: https://travis-ci.org/moccu/barbeque\n    :alt: Latest Travis CI build status\n\n.. image:: https://coveralls.io/repos/moccu/barbeque/badge.svg\n    :target: https://coveralls.io/github/moccu/barbeque\n    :alt: Coverage of master build\n\n.. image:: https://readthedocs.org/projects/barbeque/badge/?version=latest\n    :target: http://barbeque.readthedocs.org/en/latest/\n    :alt: Latest read the docs build\n\nBarbeque is a collection of custom extensions and helpers, mostly related to the Django Web framework.\n\nThese include a commands framework, logging helpers, django-anylink, filer extensions and much much more.\n\n\nbarbeque is deprecated\n======================\n\nPlease use following libraries instead:\n\n* `django-cms-helpers <https://github.com/moccu/django-cms-helpers>`_\n* `django-exporter <https://github.com/moccu/django-exporter>`_\n* `django-inline-static <https://github.com/moccu/django-inline-static>`_\n* `django-static-delivery <https://github.com/moccu/django-static-delivery>`_\n* `django-static-templates <https://github.com/moccu/django-static-templates>`_\n* `django-template-helpers <https://github.com/moccu/django-template-helpers>`_\n* `python-command-executor <https://github.com/moccu/python-command-executor>`_\n\n\nFeatures\n========\n\n* Commands framework\n* Logging helpers\n* django-anylink and django-cms extensions\n* django-filer extensions\n* various helpers for forms and generic views\n\n\nResources\n=========\n\n* `Documentation <https://barbeque.readthedocs.org/>`_\n* `Bug Tracker <https://github.com/moccu/barbeque/issues>`_\n* `Code <https://github.com/moccu/barbeque/>`_\n\n", "model_answer": "The author has mentioned that the \"barbeque\" package is deprecated. They have provided alternative solutions to use instead. Therefore, the answer is: The alternative method mentioned by the author (if mentioned) & (1).", "alternative_method": "", "label": 1}
{"id": 25, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n =========================================================\ndjango-kombu - Kombu transport using the Django database.\n=========================================================\n\n:version: 0.9.4\n\nDeprecated\n==========\n\ndjango-kombu has now moved into Kombu core, so this repository\nis no longer in use.\n\nTo upgrade, install the latest Kombu version and add the following\nto your settings.py::\n\n    INSTALLED_APPS = (\n        \"kombu.transport.django\",\n    )\n\nYou can remove the previous \"djkombu\" entry.\n\n\n**ORIGINAL README BELOW**\n\n\nIntroduction\n============\n\nThis package enables you to use the Django database as the message store\nfor `Kombu`_.\n\n\nTo use you first have to add ``djkombu`` to ``INSTALLED_APPS``, and then\nexecute ``syncdb`` to create the tables.\n\n``django-kombu`` contains a single transport,\n``djkombu.transport.DatabaseTransport``, which is used like this::\n\n    >>> from kombu.connection import BrokerConnection\n    >>> c = BrokerConnection(transport=\"djkombu.transport.DatabaseTransport\")\n\n\n.. _`Kombu`: http://pypi.python.org/pypi/kombu\n\nInstallation\n============\n\nYou can install ``django-kombu`` either via the Python Package Index (PyPI)\nor from source.\n\nTo install using ``pip``,::\n\n    $ pip install django-kombu\n\n\nTo install using ``easy_install``,::\n\n    $ easy_install django-kombu\n\n\nIf you have downloaded a source tarball you can install it\nby doing the following,::\n\n    $ python setup.py build\n    # python setup.py install # as root\n\nLicense\n=======\n\nThis software is licensed under the ``New BSD License``. See the ``LICENSE``\nfile in the top distribution directory for the full license text.\n\n.. # vim: syntax=rst expandtab tabstop=4 shiftwidth=4 shiftround\n\n\n", "model_answer": "(1) The alternative method mentioned by the author.", "alternative_method": "", "label": 1}
{"id": 26, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n sentry-jira\n===========\n\n**DEPRECATED:** This project now lives in `sentry-plugins <https://github.com/getsentry/sentry-plugins>`_\n\nA flexible extension for Sentry which allows you to create issues in JIRA based on sentry events.\nIt is capable of rendering and saving many custom fields, and will display the proper fields depending on\nwhich issue type you are trying to create.\n\n**Requires Sentry 8+**\n\nInstallation\n------------\n\nInstall the package via ``pip``:\n\n::\n\n    pip install sentry-jira\n\nConfiguration\n-------------\n\nGo to your project's configuration page (Dashboard -> [Project] -> Settings), select the\nIssue Tracking tab, and then click the JIRA button under available integrations.\n\nEnter the JIRA credentials and Project configuration and save changes. Filling out the form is\na two step process (one to fill in data, one to enter additional options).\n\nMore Documentation\n------------------\n\nHave a look at the readthedocs page for more detailed configuration steps and a\nchangelog: https://sentry-jira.readthedocs.io/en/latest/\n\nLicense\n-------\n\nsentry-jira is licensed under the terms of the 3-clause BSD license.\n\nContributing\n------------\n\nAll contributions are welcome, including but not limited to:\n\n - Documentation fixes / updates\n - New features (requests as well as implementations)\n - Bug fixes (see issues list)\n - Update supported JIRA types as you come across them\n\n\n", "model_answer": "1", "alternative_method": "", "label": 1}
{"id": 27, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n .. This README is meant for consumption by humans and pypi. Pypi can render rst files so please do not use Sphinx features.\n   If you want to learn more about writing documentation, please check out: http://docs.plone.org/about/documentation_styleguide.html\n   This text does not appear on pypi or github. It is a comment.\n\n==============================================================================\nredturtle.agidtheme\n==============================================================================\n\n\n   **WARNING!**\n\n   **DEPRECATED** in favor of https://github.com/italia/design.plone.theme\n\n\n\n\nIl primo tema Plone conforme a `Italia design system`__.\n\n__ https://design-italia.readthedocs.io/it/stable/index.html\n\nQuesto tema si basa sulla versione 2017.1 delle linee guida.\n\n|\n\nThis is the first Plone theme that is compliant with the `Italia design system`__ guidelines.\n\n__ https://design-italia.readthedocs.io/it/stable/index.html\n\nIt is built on guidelines' version 2017.1.\n\nThis README is written in italian language because it's meant for Italian Public Administration websites.\n\n\nDocumentazione\n--------------\n\nLa documentazione per l'utente finale è disponibile in `questo documento`__.\n\n__ https://docs.google.com/document/d/1ncSgzj0JABBWR1Jt7sxtIH5qwjCVN10qBm7uA8uM5cw/export?format=pdf\n\n\nEsempi\n------\n\nQuesto tema può essere visto in azione nei seguenti siti web:\n\n- `digitale.regione.emilia-romagna.it`__\n- `regione.emilia-romagna.it`__\n- `comune.santarcangelo.rn.it`__\n- `comune.calderaradireno.bo.it`__\n\n__ http://digitale.regione.emilia-romagna.it\n__ http://www.regione.emilia-romagna.it\n__ http://www.comune.santarcangelo.rn.it\n__ http://www.comune.calderaradireno.bo.it\n\n\nTraduzioni\n-----------\n\nQuesto prodotto è stato tradotto nelle seguenti lingue:\n\n- Italiano\n\n\nInstallazione\n-------------\n\nInstalla redturtle.agidtheme aggiungendolo al tuo buildout::\n\n    [buildout]\n\n    ...\n\n    eggs =\n        redturtle.agidtheme\n\n\ne successivamente eseguendo ``bin/buildout``.\n\nAl successivo avvio del sito troverete il tema disponibile tra i prodotti aggiuntivi del sito, con il nome \"Tema: Italia design system\".\n\n\nSviluppo\n--------\n\nPer la compilazione del codice Sass e la build del bundle JavaScript, sono presenti alcuni script nel ``package.json``:\n\n- ``yarn develop``: esegue la compilazione con grunt e lo lascia avviato in modalità watch\n- ``yarn build``: compila con grunt e esegue prettier\n- ``yarn test``: esegue il linting con stylelint.\n\n\nCompatibilità\n-------------\n\nQuesto prodotto è stato testato su Plone >= 5.0.7.\n\n\nRiconoscimenti\n--------------\n\nSviluppato con il supporto di `Regione Emilia-Romagna`__.\n\n__ http://www.regione.emilia-romagna.it/\n\n\n\nAutori\n------\n\nQuesto prodotto è stato sviluppato dal team di RedTurtle Technology.\n\n.. image:: http://www.redturtle.it/redturtle_banner.png\n   :alt: RedTurtle Technology Site\n   :target: http://www.redturtle.it/\n\n", "model_answer": "1", "alternative_method": "", "label": 1}
{"id": 28, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n Deprecation Notice\n==================\n\nThis code is deprecated, the current version of Bitmask is developed in the `bitmask-dev`_ repo.\n\n.. _`bitmask-dev`: https://0xacab.org/leap/bitmask-dev\n\nleap.mail\n=========\nMail services for the LEAP Client.\n\n.. image:: https://badge.fury.io/py/leap.mail.svg\n    :target: http://badge.fury.io/py/leap.mail\n\n.. image:: https://readthedocs.org/projects/leapmail/badge/?version=latest\n         :target: http://leapmail.readthedocs.org/en/latest/\n         :alt: Documentation Status\n\nMore info: https://leap.se\n\nrunning tests\n-------------\n\nUse trial to run the test suite::\n\n  trial leap.mail\n\n... and all its goodies. To run all imap tests in a loop until some of them\nfails::\n\n  trial -u leap.mail.imap\n\nRead the *trial* manpage for more options .\n\nimap regressions\n----------------\n\nFor testing the IMAP server implementation, there are a couple of utilities.\nFrom the ``leap.mail.imap.tests`` folder, and with an already initialized server\nrunning::\n\n  ./regressions_mime_struct user@provider pass path_to_samples/\n\nYou can find several message samples in the ``leap/mail/tests`` folder.\n\n", "model_answer": "1", "alternative_method": "", "label": 1}
{"id": 29, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n ~~~~~~~~~~~~~~~~~\nepub-extract-jpeg\n~~~~~~~~~~~~~~~~~\n\n\nDEPRECATED!!!\n\nYou can use epub-extractor https://github.com/ytyng/epub-extractor .\n\n\nepub-extractor に機能が取り込まれました\n\n\nExtract Jpeg files in COMIC EPUB file,\n\n\nInstall\n-------\n\n::\n\n  $ pip install epub-extract-jpeg\n\n\nRequirements\n------------\n\n* unzip\n\n* PIL: convert PNG image to Jpeg.\n  with option `--no-convert-png` , cancelled.\n\n\nHow to use\n----------\n\n::\n\n  $ epub-extract-jpeg xxxx.epub\n\nCreate xxx directory, and extract images to there.\n\n", "model_answer": "1", "alternative_method": "", "label": 1}
{"id": 30, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n PyEmbed\n=======\n\nProject status: unmaintained\n----------------------------\n\nThis project is no longer updated.  The code is here for historic purposes only.\n\n----\n\n.. image:: https://secure.travis-ci.org/pyembed/pyembed.png?branch=master\n  :target: http://travis-ci.org/pyembed/pyembed\n.. image:: https://coveralls.io/repos/pyembed/pyembed/badge.png\n  :target: https://coveralls.io/r/pyembed/pyembed\n.. image:: https://pypip.in/d/pyembed/badge.png\n  :target: https://pypi.python.org/pypi/pyembed/\n.. image:: https://pypip.in/v/pyembed/badge.png\n  :target: https://pypi.python.org/pypi/pyembed/\n.. image:: https://pypip.in/wheel/pyembed/badge.png\n  :target: https://pypi.python.org/pypi/pyembed/\n.. image:: https://pypip.in/egg/pyembed/badge.png\n  :target: https://pypi.python.org/pypi/pyembed/\n.. image:: https://pypip.in/license/pyembed/badge.png\n  :target: https://pypi.python.org/pypi/pyembed/\n\n`OEmbed`_ consumer library for Python with automatic discovery of\nproducers.\n\nPyEmbed allows you to easily embed content on your website from a wide\nvariety of producers (including `Flickr`_, `Twitter`_ and `YouTube`_).\nUnlike many OEmbed consumers, you don't need to configure each producer\nthat you want to use - PyEmbed discovers the configuration automatically.\n\nYou just need to provide the URL, and PyEmbed will generate a block of\nHTML, ready for you to include in your page:\n\n::\n\n    >>> from pyembed.core import PyEmbed\n    >>> html = PyEmbed().embed('http://www.youtube.com/watch?v=9bZkp7q19f0')\n    <iframe width=\"480\" height=\"270\" src=\"http://www.youtube.com/embed/9bZkp7q19f0?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>\n\nThere are plugins for embedding content into `Markdown`_ and \n`reStructuredText`_ documents, and for customizing embeddings with `Jinja2`_\nand `Mustache`_ templates.  For more information, see the `PyEmbed`_ website.\n\nCompatibility\n-------------\n\nPyEmbed has been tested with Python 2.7 and 3.3.\n\nInstallation\n------------\n\nPyEmbed can be installed using pip:\n\n::\n\n    pip install pyembed\n\nContributing\n------------\n\nTo report an issue, request an enhancement, or contribute a patch, go to\nthe PyEmbed `GitHub`_ page.\n\nLicense\n-------\n\nPyEmbed is distributed under the MIT license.\n\n::\n\n    Copyright (c) 2013 Matt Thomson\n\n    Permission is hereby granted, free of charge, to any person obtaining\n    a copy of this software and associated documentation files (the\n    \"Software\"), to deal in the Software without restriction, including\n    without limitation the rights to use, copy, modify, merge, publish,\n    distribute, sublicense, and/or sell copies of the Software, and to\n    permit persons to whom the Software is furnished to do so, subject to\n    the following conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n    LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n.. _OEmbed: http://oembed.com\n.. _Flickr: http://flickr.com\n.. _Twitter: http://twitter.com\n.. _YouTube: http://youtube.com\n.. _Markdown: https://pypi.python.org/pypi/pyembed-markdown\n.. _reStructuredText: https://pypi.python.org/pypi/pyembed-rst\n.. _Jinja2: https://pypi.python.org/pypi/pyembed-jinja2\n.. _Mustache: https://pypi.python.org/pypi/pyembed-mustache\n.. _PyEmbed: http://pyembed.github.io\n.. _GitHub: https://github.com/pyembed/pyembed\n\n", "model_answer": "1", "alternative_method": "", "label": 1}
{"id": 31, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n This library is deprecated, please use rollbar-agent_\n=====================================================\n\nratchet-agent\n=============\nA daemon to monitor log files and push messages to Ratchet.io_.\n\n\nRequirements\n------------\nratchet-agent requires:\n\n- A unix-like system (tested on Fedora Linux and Mac OS X)\n- Python 2.6+\n- requests 0.13.1+\n- a Ratchet.io_ account\n\n\nInstallation\n------------\nInstall with pip::\n\n    pip install ratchet-agent\n\nThis will install the ratchet-agent files in the root directory of your virtualenv. Or if you'd prefer, clone this git repo:\n\n    git clone https://github.com/ratchetio/ratchet-agent.git\n\nSee Configuration for configuration options and setup.\n\nratchet-agent comes with an example init.d script, chkconfig compatible and tested on Fedora Linux. To install it, symlink ``ratchet-agent-init.sh`` to ``/etc/init.d/ratchet-agent`` and add to chkconfig::\n\n    ln -s /path/to/ratchet-agent/ratchet-agent-init.sh /etc/init.d/ratchet-agent\n    chkconfig --add ratchet-agent\n    chkconfig on ratchet-agent\n    service ratchet-agent start\n\nConfiguration\n-------------\nConfiguration options for ratchet-agent itself are in `ratchet-agent.conf`. If you're using the init script, it has a few of its own configuration variables inside which control how it runs.\n\n**ratchet-agent.conf**\nAt the bare minimum, you will want to change the following variables:\n\n- ``params.access_token`` -- your Ratchet.io access token\n- ``targets`` -- white-space-separated list of files or directories (non-recursive) to process.\n\nSetting the following variables will improve github integration:\n\n- ``params.root`` -- path to your code root\n- ``params.branch`` -- the current branch\n\nOther options are documented in the sample config file.\n\n**ratchet-agent-init.sh**\nConfiguration variables should be self-explanatory. If you're not using a virtualenv, set ``VIRTUALENV=\"\"``.\n\n\nContributing\n------------\n\nContributions are welcome. The project is hosted on github at http://github.com/ratchetio/ratchet-agent\n\n\nAdditional Help\n---------------\nIf you have any questions, feedback, etc., drop me a line at brian@ratchet.io\n\n\n.. _rollbar-agent: https://github.com/rollbar/rollbar-agent\n.. _Ratchet.io: http://ratchet.io/\n.. _`download the zip`: https://github.com/ratchetio/django_ratchet/zipball/master\n.. _ratchet-agent: http://github.com/ratchetio/ratchet-agent\n\n", "model_answer": "1", "alternative_method": "", "label": 1}
{"id": 32, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n Deprecated\n==========\n\nThe plonesocial.* group of packages has become ploneintranet_.\n\nPlone Intranet features a complete redesign and re-implementation of the\nfront-end user interface of plonesocial. The backend is largely unchanged\nbut extended with new features: liking updates, personalized tagging.\n\nWork on the ploneintranet `code base`_ is sponsored by the\n`Plone Intranet Consortium`_, a group of companies dedicated to delivering\nthe leading open source digital workplace platform, based on Plone.\nHave a look, you'll like it. It's 100% open source.\n\n|Cosent|_\n\nPlonesocial and Plone Intranet are initiatives by Cosent_.\n\nThis repository is maintained frozen for developers who have made forks\nfor use in their own projects. If you're one of those developers and are\ninterested in upgrading to Plone Intranet, please contact Cosent_.\n\nPlease note that commits after August 2014 are part of the ploneintranet\nrewrite, before plonesocial.* got merged into ploneintranet.*.\n\n.. _ploneintranet: https://github.com/ploneintranet/ploneintranet\n.. _code base: https://github.com/ploneintranet/ploneintranet\n.. _Plone Intranet Consortium: http://ploneintranet.com\n.. _Cosent: http://cosent.nl\n.. |Cosent| image:: http://cosent.nl/images/logo-external.png \n                    :alt: Cosent\n\n", "model_answer": "1. The author has mentioned that the \"plonesocial.*\" group of packages has become \"ploneintranet_\".\n2. The README text states that work on the \"ploneintranet\" code base is sponsored by the Plone Intranet Consortium.\n3. The repository is maintained frozen for developers who have made forks for use in their own projects, and they are encouraged to upgrade to Plone Intranet.\n\nTherefore, the author has deprecated the \"plonesocial.*\" package and provided an alternative solution, which is upgrading to Plone Intranet.", "alternative_method": "", "label": 1}
{"id": 33, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n ##########\nDEPRECATED: Opbeat CLI\n##########\n\nPlease see https://opbeat.com/docs/articles/get-started-with-release-tracking/ for a much simpler way.\n\n\n\n\n\n.. image:: https://badge.fury.io/py/opbeatcli.png\n   :target: https://pypi.python.org/pypi/opbeatcli\n\n\n.. image:: https://secure.travis-ci.org/opbeat/opbeatcli.png?branch=dev\n   :target: http://travis-ci.org/opbeat/opbeatcli\n\n\nInstallation\n============\n\nMake sure you have Git and a supported version Python installed on your system.\nThe supported Python versions are: ``2.6.x``, ``2.7.x``, ``3.3+`` and PyPy.\n\n.. code-block:: bash\n\n    $ python --version\n\n\nOpbeat CLI can then be installed using the standard Python package installation\nmethod:\n\n.. code-block:: bash\n\n    $ pip install opbeatcli\n\nIf ``pip`` is not available, you can alternatively use ``easy_install``:\n\n.. code-block:: bash\n\n    $ easy_install opbeatcli\n\nTo verify successful installation of Opbeat CLI:\n\n.. code-block:: bash\n\n    $ opbeat --version\n\n\nUsage\n=====\n\n.. code-block:: bash\n\n    $ opbeat [common options] sub-command [sub-command options]\n\n\nCommon Options\n--------------\n\nThese options are shared by all sub-commands.\n\nTo obtain these, please go to your app settings on opbeat.com:\n\n======================   ======================================================\n``--org-id, -o``         Organization ID\n``--app-id, -a``         Application ID.\n``--secret-token, -t``   Secret API authentication token.\n======================   ======================================================\n\n\nFor more information and a complete list of the available common options,\nplease see the command help:\n\n.. code-block:: bash\n\n    $ opbeat --help\n\n\nSub-Commands\n------------\n\n\n``deployment``\n~~~~~~~~~~~~~~\n\nThis command registers a deployment of an application to a machine with\nthe Opbeat API. Deployment tracking enables advanced features of the\nOpbeat platform, such as version history and the ability to relate errors\nwith particular deployments, etc. It is meant to be run from the machine\nthat is being deployed to:\n\n.. code-block:: bash\n\n    # A basic deployment registration: Run this from your application\n    # repository directory on the machine which it's been deployed to:\n    $ opbeat -o ORGANISATION_ID -a APP_ID -t SECRET_TOKEN \\\n        deployment --component path:.\n\nFor more information and examples please see\n`deployment tracking documentation <https://opbeat.com/docs/release_standard/>`_\nand the command help:\n\n.. code-block:: bash\n\n    $ opbeat deployment --help\n\n\n\n\n", "model_answer": "(1) The alternative method mentioned by the author.", "alternative_method": "", "label": 1}
{"id": 34, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n .. contents::\n\n.. warning::\n   This recipe has been deprecated in favor of `djc.recipe2`_.\n   If you are starting a new project,\n   **don't use this package**,\n   use `djc.recipe2`_.\n   This package might see minor bug fixes to keep existing buildouts running,\n   but it won't gain new features.\n\nThis recipe allows you to setup a Django_ project through `zc.buildout`_.\n\nUsage\n*****\n\nThe main scope of the recipe is to abstract out the ``settings.py`` file,\nallowing settings to reside inside the buildout instead of having them reside\ninto code (leading to an awkard handling of the same in respect to versioning,\nfor example). The ``settings.py`` file is generated by a template, either the\ndefault one, the default one and a user extension, or a totally new one.\n\nThe template uses the Tempita_ templating system.\n\nThe most basic usage of this recipe is as follows: ::\n\n    [buildout]\n    parts = django\n\n    [django]\n    recipe = djc.recipe\n    project = my.project\n\nWhere ``my.project`` is an importable package containing a ``urls`` module and\na ``templates`` directory.\n\nAs you see, very few options are specified here: the defaults are used to build\nup the ``settings.py`` file.\n\nOf course, real examples tend to be slightly more complex: see Options_,\n`Default template options`_ and `Example usage`_ for more details.\n\nRunning tests\n*************\n\nThe ``README.txt`` located within the package also acts as main doctest.\n\nTo run the tests, check out the source, and then bootstrap and run the buildout::\n\n    $ python bootstrap.py\n    $ bin/buildout\n\nThen you can run the tests using::\n\n    $ bin/test\n\nLinks\n*****\n\n- Code repository: http://github.com/abstract-open-solutions/djc.recipe\n- Discussions at https://groups.google.com/group/djcrecipe\n- Comments and questions at info@abstract.it\n\n.. _Django: http://www.djangoproject.com/\n.. _`zc.buildout`: http://www.buildout.org/\n.. _Satchmo: http://www.satchmoproject.com\n.. _`djc.recipe2`: http://pypi.python.org/pypi/djc.recipe2\n\n", "model_answer": "1", "alternative_method": "", "label": 1}
{"id": 35, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n DEPRECATED!\n===========\nThis work has been merged upstream into `pyzmq <https://github.com/zeromq/pyzmq>`_\n----------------------------------------------------------------------------------\n\n=============\ngevent-zeromq\n=============\n\nThis library wraps pyzmq to make it compatible with gevent. ØMQ socket\noperations that would normally block the current thread will only block the\ncurrent greenlet instead.\n\nRequirements\n------------\n\n* pyzmq==2.2.0\n* gevent (compatible with 1.0 pre-releases as well)\n\n\nUsage\n-----\n\nInstead of importing zmq directly, do so in the following manner:\n\n..\n    \n    from gevent_zeromq import zmq\n\n\nAny calls that would have blocked the current thread will now only block the\ncurrent green thread.\n\n\nAbout\n-----\n\nThis compatibility is accomplished by ensuring the nonblocking flag is set\nbefore any blocking operation and the ØMQ file descriptor is polled internally\nto trigger needed events.\n\nWill build with cython if available, decreasing overhead.\n\nLicense\n-------\nSee LICENSE (New BSD)\n\n", "model_answer": "1", "alternative_method": "", "label": 1}
{"id": 36, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n ===========\nDeprecated\n===========\nPlease use https://github.com/iMerica/dj-rest-auth as this project is no longer maintained. Thanks!\n\n\nWelcome to django-rest-auth\n===========================\n\n.. image:: https://travis-ci.org/Tivix/django-rest-auth.svg\n    :target: https://travis-ci.org/Tivix/django-rest-auth\n\n\n.. image:: https://coveralls.io/repos/Tivix/django-rest-auth/badge.svg\n    :target: https://coveralls.io/r/Tivix/django-rest-auth?branch=master\n\n\n.. image:: https://readthedocs.org/projects/django-rest-auth/badge/?version=latest\n    :target: https://readthedocs.org/projects/django-rest-auth/?badge=latest\n\n\nDjango-rest-auth provides a set of REST API endpoints for Authentication and Registration\n\n\nDocumentation\n-------------\nhttp://django-rest-auth.readthedocs.org/en/latest/\n\n\nSource code\n-----------\nhttps://github.com/Tivix/django-rest-auth\n\n\nStack Overflow\n-----------\nhttp://stackoverflow.com/questions/tagged/django-rest-auth\n\n", "model_answer": "(1) The alternative method mentioned by the author.", "alternative_method": "", "label": 1}
{"id": 37, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n ========\nCovid-19\n========\n\n.. image:: https://gitlab.com/pydemic/covid-19/badges/master/pipeline.svg\n   :target: https://github.com/pydemic/covid-19/commits/master\n\n.. image:: https://gitlab.com/pydemic/covid-19/badges/master/coverage.svg\n   :target: https://github.com/pydemic/covid-19/commits/master\n\n\n\nThis is a Python library that simulates COVID-19 outbreaks. The main focus is on Brazil, but it\nincludes demographic data about other countries and can be adapted with relative ease. This library\nimplements the RSEICHA model (yet to be published, we will link the preprint here). One version,\n`covid.models.RSEICHADemografic` considers demographic information and the other, `covid.models.RSEICHA`\njust uses generic compartments.\n\n**WARNING!**\n\nThis library is deprecated and will be replaced by several projects in the Pydemic organization. If you\nwant to use the library or contribute to its development, please contact the developers first.\n\n\nUsage\n=====\n\nYou can run models from the command line::\n\n$ python -m covid.models.seichar\n\nOr, more typically, from Python code\n\n>>> from covid.models import SEICHAR\n>>> m = SEICHAR(region='Italy')\n>>> run = m.run()\n>>> run.plot()\n>>> print(run)\n\nCalculator\n----------\n\nTo serve the app calculator, use::\n\n    $ inv run\n\nInstallation\n============\n\nEither clone this repository and install locally using `flit install -s` or use\n`pip install covid-models`. If you do not have flit, install it using either your distribution\npackage manager or use `pip install flit --user`.\n\nThe model\n=========\n\nSEICHAR is a compartmental model with 8 compartments: Recovered, Fatalities, Susceptible, Exposed,\nInfectious, Critical (require ICU care), Hospitalized (or requires hospitalization) and Asymptomatic.\n\nIt is governed by the following dynamics:\n\nBasic theoretical results\n-------------------------\n\nIf we ignore the \"Exposed\" compartment, it is easy to derive R0 for this model. We must, however,\nconsider the number of equivalent infectious :math:`I_e = I + \\mu A`, in which asymptomatic individuals\ncontribute less to the overall number of infectious than symptomatic cases.\n\nWhen :math:`S \\simeq N`, this quantity experience an exponential growth and we can associate R0 with\n:math:`R_0 = \\frac{\\beta}{\\gamma}\\left[1 - (1 - \\mu) p_s\\right]`\n\nDefault parameters\n------------------\n\n+------------------+----------------------+------------------------------------+\n| Parameter        | Default value        | Reference                          |\n+==================+======================+====================================+\n|                  |                      |                                    |\n+------------------+----------------------+------------------------------------+\n\nParameters and references\n=========================\n\nEpidemiological parameters\n--------------------------\n\nClinical parameters\n-------------------\n\nRequired medical resources\n--------------------------\n\nDevelopment\n===========\n\nTesting\n-------\n\nSimply perform::\n\n    $ inv test\n\nManaging i18n\n-------------\n\nTo update messages files::\n\n    $ inv makemessages\n\nTo compile messages files::\n\n    $ inv compilemessages\n\nTo update and compile messages files::\n\n    $ inv i18n\n\nUsing rit tunnel\n----------------\n\nAfter installing `rit <https://gitlab.com/ritproject/cli#installation>`_, config your tunnel repo:\n\n- Remotely::\n\n  $ rit config tunnel add repo https://gitlab.com/pydemic/tunnel --name pydemic\n  $ rit config tunnel default set pydemic --path .\n\n- Locally::\n\n  $ git clone https://gitlab.com/pydemic/tunnel ../tunnel\n  $ rit config tunnel add local ../tunnel --name pydemic\n  $ rit config tunnel default set pydemic --path .\n\nExamples of usage:\n\n- If you use docker and docker-compose, you can:\n\n  - Build the development image::\n\n    $ rit tunnel run apps calculator development build\n\n  - Fetch the development docker-compose::\n\n    $ rit tunnel run apps calculator development fetch compose\n\n  - Run the test pipeline::\n\n    $ rit tunnel run apps calculator development test up\n    $ rit tunnel run apps calculator development test sync\n    $ rit tunnel run apps calculator development test all\n    $ rit tunnel run apps calculator development test down\n\n  - Build the production image::\n\n    $ rit tunnel run apps calculator production build\n\n  - Fetch the production docker-compose::\n\n    $ rit tunnel run apps calculator production fetch compose\n\n", "model_answer": "(1) The author has mentioned that the Python library \"Covid-19\" is deprecated and will be replaced by several projects in the Pydemic organization. However, the author did not provide alternative solutions in the README text for this deprecation.", "alternative_method": "", "label": 1}
{"id": 39, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n **NOTE: This repository is now mostly in archive.** Please head over to the `Mathics3 mathics-core github repository <https://github.com/Mathics3/mathics-core>`_.\n\nWelcome to Mathics!\n===================\n\n|Pypi Installs| |Latest Version| |Supported Python Versions| |Travis|_ |SlackStatus|_\n\n|Packaging status|\n\n\nMathics is a general-purpose computer algebra system (CAS). It is an open-source alternative to Mathematica. It is free both as in \"free beer\" and as in \"freedom\".\n\nThe home page of Mathics is https://mathics.org.\n\n\nScreenShots\n-----------\n\nmathicsscript: a text interface\n+++++++++++++++++++++++++++++++\n\n|mathicsscript|\n\nmathicsserver: a Django-based Web interface\n+++++++++++++++++++++++++++++++++++++++++++\n\n|mathicssserver|\n\n\nInstalling and Running\n----------------------\n\nSee the `read the docs guide <https://mathics-development-guide.readthedocs.io/en/latest/>`_ for instructions on `installing <https://mathics-development-guide.readthedocs.io/en/latest/installing.html>`_ and `running <https://mathics-development-guide.readthedocs.io/en/latest/running.html>`_.\n\nContributing\n------------\n\nPlease feel encouraged to contribute to Mathics! Create your own fork, make the desired changes, commit, and make a pull request.\n\n\nLicense\n-------\n\nMathics is released under the GNU General Public License Version 3 (GPL3).\n\n.. |SlackStatus| image:: https://mathics-slackin.herokuapp.com/badge.svg\n.. _SlackStatus: https://mathics-slackin.herokuapp.com/\n.. |Travis| image:: https://secure.travis-ci.org/mathics/Mathics.svg?branch=master\n.. _Travis: https://travis-ci.org/mathics/Mathics\n.. _PyPI: https://pypi.org/project/Mathics/\n.. |mathicsscript| image:: https://github.com/Mathics3/mathicsscript/blob/master/screenshots/mathicsscript1.gif\n.. |mathicssserver| image:: https://mathics.org/images/mathicsserver.png\n.. |Latest Version| image:: https://badge.fury.io/py/Mathics3.svg\n\t\t :target: https://badge.fury.io/py/Mathics3\n.. |Pypi Installs| image:: https://pepy.tech/badge/Mathics3\n.. |Supported Python Versions| image:: https://img.shields.io/pypi/pyversions/Mathics3.svg\n.. |Packaging status| image:: https://repology.org/badge/vertical-allrepos/mathics.svg\n\t\t\t    :target: https://repology.org/project/mathics/versions\n\n", "model_answer": "(1) The alternative method mentioned by the author.", "alternative_method": "", "label": 1}
{"id": 40, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n .. contents::\n\nDEPRECATED\n==========\n\nUse `collective.factorymenu`_ on modern Plone.\n\nSummary\n=======\n\nThis product make possible the customization of the Plone \"*Add new...*\" menu, commonly filled\nfrom the Plone available content types.\n\nThis is designed for avoiding useless content types but, at the same time, help UI experience of\nnon-technical users.\n\nYou can use this to add new non-standard stuff to the menu (like JavaScript links). See below.\n\nIdea behind this\n================\n\nThe case is related to developed content types that gets added to Plone only for *usability* enhancements.\n\nOne example: have you ever used Plone4ArtistsVideo, or `collective.flowplayer`__?\nIn those products users that want to add new video to a site must use the \"*Add new...*\" menu and select\nthe *File* content.\n\n__ http://pypi.python.org/pypi/collective.flowplayer\n\nSo the editor (that is *never* a developer in real life... you must accept it) must know that when he add\na new file, it magically became a video... This is not so simple to understand; also is impossible to\nunderstand it without a training or by past experience.\nCan't be better if the user could read \"*Add new video*\" in the menu instead?\n\nRight now the best usability choice is to add a new content type to the menu, or develop a new helper portlet\nthat show some links like \"*add a new video here*\".\n\nIn the first case, just copy/paste the original used content if enough (copy/paste the *File* content type and\nrename it in something like \"Video\").\nBut you know... we don't really need those new content types.\n\nIn the second case all is ok, but what Plone users know is to look at the right menu to search for addable\ntypes, not to look in a menu and *also* in another place.\n\nSo:\n\n* user know that for adding new content types, they must use the \"*Add new...*\"\n* users often ignores the magic behind Plone (like the File that became a Video)\n* developer don't like to add new silly content types only to help end users (no, the are not bad guys).\n\nThe problem above is related to the not-customizable state of the \"Add new...\" menu: the editor and the\ndeveloper will be both happy if a new, fake entry could be added to this menu.\nGoing back to the video example:\n\n* the classic *File* entry (that point to *http://myhost/mysite/createObject?type_name=File*)\n* a new \"Video\" entry (again pointing to *http://myhost/mysite/createObject?type_name=File*)\n\nThis products is designed only for this or similar usability issues, however can help you to customize\nexisting elements of the menu on context (for example: the action of adding a new \"News Item\" content in\na folder can be customized to be an alias for another content type, but only for this special folder,\nor you can disable with a falsy espression a content type in a folder, ...).\n\nHow to use\n==========\n\nInstallation\n------------\n\nSimply add the egg to your buildout, and re-run it.\n\n::\n\n    [instance]\n    ...\n    eggs =\n        ...\n        redturtle.custommenu.factories\n    ...\n\nRemember to add also the ZCML slug and overrides if you are testing this on Plone 3.2 or lesser.\n\nAfter this, install the new product in Plone.\n\nCustomize the menu\n------------------\n\nIn your \"Add new...\" menu you'll find a new \"*Customize menu...*\" entry. This will lead you to a\nform where you must enable customization feature on the current context.\nAfter this you can use the a customization form where you can manage local menu changes.\n\n.. figure:: http://keul.it/images/plone/redturtle.customizemenu.factories1.png\n   :align: left\n\nFor every new entry you can/must fill this informations:\n\n`id`\n    Enter here a string to be used to add an HTML id attribute to the new element. You can not provide\n    it, but if you use an already existing ids, the new one will override the old.\n    In this way you can *replace* one of the native (or inherited) menu entry with a new ones.\n`name`\n    Required.\n    Provide the string to be used for displaying the new element.\n`description`\n    The description is used to provide a tooltips hovering the element.\n`icon`\n    A TALES expression that can be used to give an icon to the new element (very common).\n`condition`\n    A TALES condition expression. If not provided, the new element is added to the menu. In provided\n    it is evaluated as True or False, so the element is displayed or not.\n`URL`\n    Required.\n    A TALES expression used to render the HREF attribute on the link in the element. You have total freedom\n    here: you can also render a string as \"*javascript:...*\" to provide some Javascript features.\n\nAlso you can inherit the customization done in the site root everywhere in the site, adding this to all\nother customizations. You can also locally block the inherit of root customization but you can also make\nnew menu elements defined in the root available only in the root itself.\n\nAlso, you can give a right *id* to new entries not only to override menu element from Plone normal\nbehaviour, but also for change a customization done in the site root.\n\n.. figure:: http://keul.it/images/plone/redturtle.customizemenu.factories2.png\n   :align: left\n\nTALES expressions\n-----------------\n\nIn the TALES expression above, you can use those variables:\n\n `context`\n     The current context, as Plone normal meaning\n `container`\n     The container of the current context, or the context itself if the context is a container. This is\n     useful when writing expression that keep in mind the default document in a folder.\n `portal_url`\n     The *portal_url* tool, taken from the Plone site.\n\nGeneric setup support\n---------------------\n\nJuan. [nueces] provided Generic Setup support for this package:\n\n.. code:: xml\n\n    <?xml version=\"1.0\"?>\n    <object>\n      <property name=\"inherit\">True</property>\n      <custommenu>\n        <property name=\"element-id\">pdf-file</property>\n        <property name=\"element-name\">PDF Document</property>\n        <property name=\"element-descr\">A file content to be filled with a PDF document</property>\n        <property name=\"icon-tales\">string:$portal_url/pdf_icon.gif</property>\n        <property name=\"condition-tales\"></property>\n        <property name=\"element-tales\">string:${container/absolute_url}/createObject?type_name=File</property>\n      </custommenu>\n      <custommenu>\n          ...\n      </custommenu>\n      <object name=\"documents\">\n        <property name=\"inherit\">True</property>\n        <custommenu>\n            ...\n        </custommenu>\n        <object name=\"ebooks\">\n           <property name=\"inherit\">True</property>\n           <custommenu>\n                ...\n           </custommenu>\n           ...\n        </object>\n        ...\n      </object>\n      ...\n    <object>\n\nFor a complete code check `collective.examples.custommenufactories`__.\n\n__ http://svn.plone.org/svn/collective/collective.examples.custommenufactories/trunk/\n\nDependencies\n============\n\nAll Plone versions from 3.3 to 4.3 has been tested.\n\nTODO\n====\n\n* JavaScript features for managing entries\n* code needs refactoring\n* think about inherit customizations not only from portal root\n* subsites testing needed\n\n.. _collective.factorymenu: https://github.com/collective/collective.factorymenu\n\n", "model_answer": "1", "alternative_method": "", "label": 1}
{"id": 41, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n SMBL - SnakeMake Bioinformatics Library\n=======================================\n\n.. image:: https://travis-ci.org/karel-brinda/smbl.svg?branch=master\n\t:target: https://travis-ci.org/karel-brinda/smbl\n\n.. image:: https://travis-ci.org/karel-brinda/smbl.svg?branch=devel\n\t:target: https://travis-ci.org/karel-brinda/smbl\n\n\n**SMBL is deprecated and is not maintained any more. We recommend to replace it by BioConda (see https://bioconda.github.io).**\n\n\nShort description\n-----------------\n\n**SMBL** is a library of some useful rules and Python functions which can be used in Snakemake (https://bitbucket.org/johanneskoester/snakemake/) pipelines. It makes possible to automatically\ninstall various bioinformatics programs like read mappers, read simulators, conversion tools, etc.\nIt supports also downloading and conversion of some important references in FASTA format (e.g., human genome).\n\n\nInstallation / upgrade\n----------------------\n\nTo install SMBL, you need to have Unix-like operating system (e.g., Linux, MacOS) and Python at least 3.3.\nInstallation / upgrade can be performed using the following command.\n\n.. code-block:: bash\n\n\tpip3 install --upgrade smbl\n\n\nIf SnakeMake has not been installed, yet, it will\nbe installed automatically with SMBL.\n\nThe current version of SMBL from git can be installed by\n\n.. code-block:: bash\n\n\tpip3 install --upgrade git+git://github.com/karel-brinda/smbl\n\n\nRequirements\n------------\n\nTo be able to download and install software automatically, SMBL requires the following programs to be present in you Unix system:\n\n* wget or curl\n* gcc 4.7+\n* git\n* make\n\n\nUsage\n-----\n\nTo use SMBL, you have to import the *smbl*  Python package and include a file with all rules using:\n\n.. code-block:: python\n\n\timport smbl\n\tinclude: smbl.include()\n\n\nThen you can use all supported programs or data. When they appear as input of a rule, they will be downloaded or compiled.\n\nAll the programs are installed into ``~/.smbl/bin/`` and all FASTA files into ``~/.smbl/fa/``.\n\n\nPrograms\n^^^^^^^^\n\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| Program                | Variable with its filename              | Link                                                                    |\n+========================+=========================================+=========================================================================+\n| art\\_454               | ``smbl.prog.ART_454``                   | http://www.niehs.nih.gov/research/resources/software/biostatistics/art/ |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| art\\_illumina          | ``smbl.prog.ART_ILLUMINA``              | http://www.niehs.nih.gov/research/resources/software/biostatistics/art/ |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| art\\_solid             | ``smbl.prog.ART_SOLID``                 | http://www.niehs.nih.gov/research/resources/software/biostatistics/art/ |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| bcftools               | ``smbl.prog.BCFTOOLS``                  | http://github.com/samtools/bcftools                                     |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| bfast                  | ``smbl.prog.BFAST``                     | http://github.com/nh13/bfast                                            |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| bgzip                  | ``smbl.prog.BGZIP``                     | http://github.com/samtools/htslib                                       |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| bowtie2                | ``smbl.prog.BOWTIE2``                   | http://github.com/BenLangmead/bowtie2                                   |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| bowtie2-build          | ``smbl.prog.BOWTIE2_BUILD``             | http://github.com/BenLangmead/bowtie2                                   |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| bowtie2-inspect        | ``smbl.prog.BOWTIE2_INSPECT``           | http://github.com/BenLangmead/bowtie2                                   |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| bwa                    | ``smbl.prog.BWA``                       | http://github.com/lh3/bwa                                               |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| curesim.jar            | ``smbl.prog.CURESIM``                   | http://www.pegase-biosciences.com/tools/curesim/                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| curesim_eval.jar       | ``smbl.prog.CURESIM_EVAL``              | http://www.pegase-biosciences.com/tools/curesim/                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| deez                   | ``smbl.prog.DEEZ``                      | http://github.com/sfu-compbio/deez                                      |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| drfast                 | ``smbl.prog.DRFAST``                    | http://github.com/BilkentCompGen/drfast                                 |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| dwgsim                 | ``smbl.prog.DWGSIM``                    | http://github.com/nh13/dwgsim                                           |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| dwgsim\\_eval.pl        | ``smbl.prog.DWGSIM_EVAL``               | http://github.com/nh13/dwgsim                                           |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| freec                  | ``smbl.prog.FREEC``                     | http://bioinfo-out.curie.fr/projects/freec/                             |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| gem-indexer            | ``smbl.prog.GEM_INDEXER``               | http://algorithms.cnag.cat/wiki/The_GEM_library                         |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| gem-mapper             | ``smbl.prog.GEM_MAPPER``                | http://algorithms.cnag.cat/wiki/The_GEM_library                         |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| gem-2-sam              | ``smbl.prog.GEM_2_SAM``                 | http://algorithms.cnag.cat/wiki/The_GEM_library                         |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| gnuplot4               | ``smbl.prog.GNUPLOT4``                  | http://www.gnuplot.info/                                                |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| gnuplot5               | ``smbl.prog.GNUPLOT5``                  | http://www.gnuplot.info/                                                |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| kallisto               | ``smbl.prog.KALLISTO``                  | https://github.com/pachterlab/kallisto                                  |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| lastal                 | ``smbl.prog.LASTAL``                    | http://last.cbrc.jp/                                                    |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| lastdb                 | ``smbl.prog.LASTDB``                    | http://last.cbrc.jp/                                                    |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mason_frag_sequencing  | ``smbl.prog.MASON_FRAG_SEQUENCING``     | http://packages.seqan.de/mason2/                                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mason_genome           | ``smbl.prog.MASON_GENOME``              | http://packages.seqan.de/mason2/                                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mason_materializer     | ``smbl.prog.MASON_MATERIALIZER``        | http://packages.seqan.de/mason2/                                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mason_methylation      | ``smbl.prog.MASON_METHYLATION``         | http://packages.seqan.de/mason2/                                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mason_simulator        | ``smbl.prog.MASON_SIMULATOR``           | http://packages.seqan.de/mason2/                                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mason_splicing         | ``smbl.prog.MASON_SPLICING``            | http://packages.seqan.de/mason2/                                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mason_variator         | ``smbl.prog.MASON_VARIATOR``            | http://packages.seqan.de/mason2/                                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mrfast                 | ``smbl.prog.MRFAST``                    | http://github.com/BilkentCompGen/mrfast                                 |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mrsfast                | ``smbl.prog.MRSFAST``                   | http://mrsfast.sourceforge.net/                                         |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| perm                   | ``smbl.prog.PERM``                      | http://code.google.com/p/perm/                                          |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| pbsim                  | ``smbl.prog.PBSIM``                     | https://code.google.com/p/pbsim                                         |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| picard                 | ``smbl.prog.PICARD``                    | http://broadinstitute.github.io/picard/                                 |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| sambamba               | ``smbl.prog.SAMBAMBA``                  | http://lomereiter.github.io/sambamba/                                   |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| samtools               | ``smbl.prog.SAMTOOLS``                  | http://github.com/samtools/samtools                                     |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| sirfast                | ``smbl.prog.SIRFAST``                   | http://github.com/BilkentCompGen/sirfast                                |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| storm-color            | ``smbl.prog.STORM_COLOR``               | http://bioinfo.lifl.fr/yass/iedera_solid/storm/                         |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| storm-nucleotide       | ``smbl.prog.STORM_NUCLEOTIDE``          | http://bioinfo.lifl.fr/yass/iedera_solid/storm/                         |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| tabix                  | ``smbl.prog.TABIX``                     | http://github.com/samtools/htslib                                       |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| twoBitToFa             | ``smbl.prog.TWOBITTOFA``                | http://hgdownload.cse.ucsc.edu/admin/exe/                               |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| vcfutils.pl            | ``smbl.prog.VCFTULS``                   | http://github.com/samtools/bcftools                                     |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| wgsim                  | ``smbl.prog.WGSIM``                     | http://github.com/lh3/wgsim                                             |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| wgsim\\_eval.pl         | ``smbl.prog.WGSIM_EVAL``                | http://github.com/lh3/wgsim                                             |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| xs                     | ``smbl.prog.XS``                        | http://bioinformatics.ua.pt/software/xs/                                |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n\n\nFASTA files\n^^^^^^^^^^^\n\n+------------------------------+------------------------------------------------------------+\n| FASTA file                   | Variable with its filename                                 |\n+==============================+============================================================+\n| An example small FASTA file  | ``smbl.fasta.EXAMPLE_1``                                   |\n+------------------------------+------------------------------------------------------------+\n| An example small FASTA file  | ``smbl.fasta.EXAMPLE_2``                                   |\n+------------------------------+------------------------------------------------------------+\n| An example small FASTA file  | ``smbl.fasta.EXAMPLE_3``                                   |\n+------------------------------+------------------------------------------------------------+\n| Human genome HG38 (GRCh38)   | ``smbl.fasta.HG38``, ``smbl.fasta.HUMAN_GRCH38``           |\n+------------------------------+------------------------------------------------------------+\n| Mouse genome MM10            | ``smbl.fasta.MOUSE_MM10``                                  |\n+------------------------------+------------------------------------------------------------+\n| Chimpanzee genome PANTR04    | ``smbl.fasta.CHIMP_PANTRO4``                               |\n+------------------------------+------------------------------------------------------------+\n\n\nExample\n-------\n\nThe following example demonstrates how SMBL can be used for automatic installation of software.\n\nCreate an empty file named ``Snakefile`` with the following content:\n\n.. code-block:: python\n\n\timport smbl\n\tinclude: smbl.include()\n\n\trule all:\n\t\tinput:\n\t\t\tsmbl.prog.DWGSIM,\n\t\t\tsmbl.prog.BWA,\n\t\t\tsmbl.fasta.EXAMPLE\n\t\tparams:\n\t\t\tPREF=\"simulated_reads\",\n\t\t\tINDEX=\"bwa_index\"\n\t\toutput:\n\t\t\t\"alignment.sam\"\n\t\trun:\n\t\t\t# read simulation\n\t\t\tshell(\"{input[0]} -C 1 {input[2]} {params.PREF}\")\n\n\t\t\t# creating BWA index of the reference sequence\n\t\t\tshell(\"{input[1]} index {input[2]}\")\n\n\t\t\t# mapping by BWA\n\t\t\tshell(\"{input[1]} mem {input[2]} {params.PREF}.bfast.fastq > alignment.sam\")\n\n\nRun the script.\n\n.. code-block:: bash\n\n\tsnakemake\n\n\nWhat happens:\n\n1. An example FASTA file is downloaded\n2. DwgSim and BWA are downloaded, compiled and installed\n3. DwgSim simulates reads from the example Fasta file\n4. These reads are mapped back to the reference by BWA (*alignment.sam* is created)\n\n", "model_answer": "1", "alternative_method": "", "label": 1}
{"id": 42, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n Option Merge Addons\n===================\n\nThis is a project that adds an addon system to option_merge enabled projects.\n\nDeprecated\n----------\n\nThis project has been deprecated in favour of https://github.com/delfick/delfick_project\n\nInstallation\n------------\n\nUse pip!:\n\n.. code-block:: bash\n\n    pip install option_merge_addons\n\nOr if you're developing it:\n\n.. code-block:: bash\n\n    pip install -e .\n    pip install -e \".[tests]\"\n\nTests\n-----\n\nRun the helpful script:\n\n.. code-block:: bash\n\n    ./test.sh\n\nUsage\n-----\n\nThere are two parts to using this module: the setup, and the addons.\n\nSetup\n+++++\n\n.. code-block:: python\n\n    from option_merge_addons import Result, Addon, Register, AddonGetter\n\n    # collector is passed into the hooks. It may be None\n    # It's expected to be http://option-merge.readthedocs.io/en/latest/docs/api/collector.html\n    collector = None\n\n    # Create the addon getter and register our namespace\n    addon_getter = AddonGetter()\n    addon_getter.add_namespace(\"my_amazing_addons\", Result.FieldSpec(), Addon.FieldSpec())\n\n    # Initiate the addons from our configuration\n    register = Register(addon_getter, collector)\n\n    # Register and execute our addons\n    # This will import the ns1.name1 addon, which will bring in it's dependencies\n    # and so on\n    # And then run the post_register hooks with {\"arg\": 1, \"arg2\": 2} as kwargs\n    start_addons = [(\"ns1\", \"name1\")]\n    register.register(*start_addons, my_amazing_addons={\"arg1\": 1, \"arg2\": 2})\n\nNote that you can split up that last line into different stages you run at\ndifferent times with whatever you want before. This is helpful if you want to\ndo something before calling the post_register hooks:\n\n.. code-block:: python\n\n    # Add atleast one entry point that will start importing other entry points\n    default_addons = [(\"ns1\", \"name1\"), (\"ns2\", \"name2\")]\n    register.add_pairs(*default_addons)\n\n    # Import our addons\n    register.recursive_import_known()\n\n    # Resolve our addons\n    register.recursive_resolve_imported()\n\n    # extra_args specifies what goes into the post_register hooks\n    extra_args = {\"my_amazing_addons\": {\"arg1\": 1}}\n    self.register.post_register(extra_args)\n\nYou can also define your own entry points programmatically by doing something\nlike:\n\n.. code-block:: python\n\n    # Register __main__ as an entry point\n    try:\n        __main__ = __import__(\"__main__\")\n    except ImportError:\n        pass\n    else:\n        if any(hasattr(getattr(__main__, attr, None), \"_option_merge_addon_entry\") for attr in dir(__main__)):\n            working_set = pkg_resources.working_set\n            dist = pkg_resources.Distribution(\"__main__\")\n            mp = pkg_resources.EntryPoint.parse_group(\"my_amazing_addons\", [\"__main__ = __main__\"])\n\n            def get_entry_map(group=None):\n                if group == \"my_amazing_addons\":\n                    return mp\n                return {}\n            dist.get_entry_map = get_entry_map\n            working_set.add(dist, entry=\"__main__\")\n\nDefining hooks\n++++++++++++++\n\nThere are two parts to defining a hook. The first part is to define it:\n\n.. code-block:: python\n\n    from option_merge_addons import option_merge_addon_hook\n\n    @option_merge_addon_hook(extras=[('my_amazing_addons', 'thing1'), ('my_amazing_addons', 'thing2')])\n    def __addon__(collector, results_maker, **kwargs):\n        # Setup things here\n        # We can return None or we can use results_maker to programmatically\n        # add more dependencies\n        return results_maker(extras=[(\"my_amazing_addons\", \"thing3\")])\n\n    @option_merge_addon_hook(post_register=True)\n    def __addon_post__(collector, **kwargs):\n        # Setup that must be done after all dependencies have been resolved\n        # And imported and had their first hook executed\n\nThe second part is to define the entry points in your setup.py. So if the above\nhooks was at ``my_amazing_module.addons`` then your setup.py would look like:\n\n.. code-block:: python\n\n    from setuptools import setup\n\n    setup(\n          ...\n\n          , entry_points =\n          { \"my_amazing_addons\": [\"amazing = my_amazing_module.addon\"]\n          }\n        )\n\nOnce this package is installed in your environment, you may depend on it by\nspecifying ``(\"my_amazing_addons\", \"amazing\")``.\n\nImport Order\n++++++++++++\n\nThe several passes of importing modules goes as follows:\n\n1. Import all our known hooks\n2. Keep importing all the dependencies that we find\n3. Once we've imported everything, start calling the hooks and add any depdencies\n   returned by the hooks to our known addons.\n4. Go to step 1 unless we've imported and resolved everything\n\nThe order is such that all dependencies are resolved before a hook that asked\nfor dependencies is resolved.\n\nThe post_register also follows this where all dependencies are resolved before\na hook that asks for them.\n\nAsking for all hooks in a namespace\n+++++++++++++++++++++++++++++++++++\n\nYou may specify a special ``(\"namespace\", \"__all__\")``  dependency which will\nmake that hook depend on all hooks that haven't already been imported. Note that\nthis should be used sparingly as a hook that asks for it cannot be explicitly\nasked for by another hook.\n\nChangelog\n---------\n\n0.3\n    Made it possible to specify ``(\"namespace\", \"__all__\")`` from a hook\n\n0.2.1\n    No changelog was kept before now\n\n", "model_answer": "(1) The alternative method mentioned by the author.", "alternative_method": "", "label": 1}
{"id": 43, "query": "\nBelow is the README text of a Python package. I only need you to tell me whether the author mentioned that they had deprecated this package or have the intention to deprecate the package. 0 means no, 1 means yes. Additionally, if they deprecated (which means 1), you need to tell me whether the author has provided alternative solutions. Your answer be:\n(0) if no deprecation\nOR\nThe alternative method mentioned by the author (if mentioned) & (1). \n ATTENTION: The archive package should also be taken into deprecation. \n flask-saml2\n===========\n\n.. note::\n    **Looking for maintainers**. This project is unmaintained. The library works, or did when I last used it,\n    but I no longer work on the project this was built for. If you are interested in taking over leadership\n    and maintenance of this project, please get in touch.\n\n.. image:: https://travis-ci.com/timheap/flask-saml2.svg?branch=master\n    :target: https://travis-ci.com/timheap/flask-saml2\n.. image:: https://badge.fury.io/py/flask-saml2.svg\n    :target: https://pypi.org/project/flask-saml2/\n.. image:: https://readthedocs.org/projects/flask-saml2/badge/?version=latest\n    :target: https://flask-saml2.readthedocs.io/en/latest/\n\nThis Flask plugin provides functionality for creating both SAML Service\nProviders and Identity Providers. Applications can implement one or both of\nthese providers.\n\n``flask-saml2`` works with Flask 1.0+ and Python 3.6+.\n\nThis is a heavily modified fork of `NoodleMarkets/dj-saml-idp`_ which in turn\nis a fork of `deforestg/dj-saml-idp`_ which in turn is a fork of\n`novapost/django-saml2-idp`_.\n\nTerminology\n-----------\n\nFor a full description of how SAML works, please seek guides elsewhere on the\ninternet. For a quick introduction, and a run through of some of the\nterminology used in this package, read on.\n\nThe SAML protocal is a conversation between two parties:\n**Identity Providers (IdP)** and **Service Providers (SP)**.\nWhen an unauthenticated client (usually a browser) accesses a Service Provider,\nthe Service Provider will make an **authentication request (AuthnRequest)**,\nsign it using its private key, and then forward this request via the client to\nthe Identity Provider. Once the client logs in at the central Identity\nProvider, the Identity Provider makes a response, signs it, and forwards this\nresponse via the client to the requesting Service Provider. The client is then\nauthenticated on the Service Provider via the central Identity Provider,\nwithout the Service Provider having to know anything about the authentication\nmethod, or any passwords involved.\n\nExample implementations\n-----------------------\n\nA minimal but functional example implementation of both a Service Provider and\nan Identity Provider can be found in the ``examples/`` directory of this\nrepository. To get the examples running, first clone the repository and install\nthe dependencies:\n\n.. code-block:: console\n\n    $ git clone https://github.com/timheap/flask-saml2\n    $ cd flask-saml2\n    $ python3 -m venv venv\n    $ source venv/bin/activate\n    $ pip install -e .\n    $ pip install -r tests/requirements.txt\n\nNext, run the IdP and the SP in separate terminal windows:\n\n.. code-block:: console\n\n    $ cd flask-saml2\n    $ source venv/bin/activate\n    $ ./examples/idp.py\n\n.. code-block:: console\n\n    $ cd flask-saml2\n    $ source venv/bin/activate\n    $ ./examples/sp.py\n\nFinally, navigate to http://localhost:9000/ to access the Service Provider\nlanding page.\n\nTesting\n-------\n\nThe test runner is `pytest` and we are using `tox` to run tests against\ndifferent versions of Flask and Python. The test can be run locally using\n`tox` directly (preferably in a virtual environment)::\n\n    $ pip install tox\n    $ tox\n\nLicense\n-------\n\nDistributed under the `MIT License`_.\n\n.. _`NoodleMarkets/dj-saml-idp`: https://github.com/NoodleMarkets/dj-saml-idp\n.. _`deforestg/dj-saml-idp`: https://github.com/deforestg/dj-saml-idp\n.. _`novapost/django-saml2-idp`: https://github.com/novapost/django-saml2-idp\n.. _`MIT License`: https://github.com/mobify/dj-saml-idp/blob/master/LICENSE\n\n", "model_answer": "1", "alternative_method": "", "label": 1}
