[
    {
        "id": 15,
        "query": "===================================================\nkombu-sqlalchemy - Kombu transport using SQLAlchemy\n===================================================\n\n:version: 1.1.0\n\nDeprecated\n==========\n\nkombu-sqlalchemy has now moved into Kombu core, so this repository\nis no longer in use.\n\nTo upgrade, install the latest Kombu version.\n\n**ORIGINAL README BELOW**\n\n\nIntroduction\n============\n\nThis package enables you to use SQLAlchemy as the message store\nfor `Kombu`_.\n\n\n``kombu-sqlalchemy`` contains a single transport,\n``sqlakombu.transport.Transport``, which is used like this::\n\n    >>> from kombu.connection import BrokerConnection\n    >>> c = BrokerConnection(DB_URL, transport=\"sqlakombu.transport.Transport\")\n\n``DB_URL`` should be a valid SQLAlchemy database connection url in the form::\n\n    \"dialect+driver://username:password@host:port/database\"\n\n\n.. _`Kombu`: http://pypi.python.org/pypi/kombu\n\nInstallation\n============\n\nYou can install ``kombu-sqlalchemy`` either via the Python Package Index (PyPI)\nor from source.\n\nTo install using ``pip``,::\n\n    $ pip install kombu-sqlalchemy\n\n\nTo install using ``easy_install``,::\n\n    $ easy_install kombu-sqlalchemy\n\n\nIf you have downloaded a source tarball you can install it\nby doing the following,::\n\n    $ python setup.py build\n    # python setup.py install # as root\n\nLicense\n=======\n\nThis software is licensed under the ``New BSD License``. See the ``LICENSE``\nfile in the top distribution directory for the full license text.\n\n.. # vim: syntax=rst expandtab tabstop=4 shiftwidth=4 shiftround\n\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 16,
        "query": ".. _docutils: http://docutils.sourceforge.net/\n.. _Django: https://www.djangoproject.com/\n.. _django-materialize-css: https://pypi.python.org/pypi/django-materialize-css/\n.. _django-crispy-forms: https://github.com/maraujop/django-crispy-forms\n.. _Materialize: http://materializecss.com \n\nThis repo is Deprecated\n=======================\nPlease dont use me, i no longer have maintenance.\n\nLooking for someone to maintain the project\n===========================================\nIf you are interested in continuing with the project and maintaining it, please send me an email.\n\nIntroduction\n============\n\nThis is a `Django`_ application to add `django-crispy-forms`_ layout objects for `Materialize`_.\n\nThis app does not embed a `Materialize`_ release, you will have to install `django-materialize-css`_ as a dependency or download/ link to latests updates of materializecss in your project.\n\nLinks\n*****\n\n* Read the documentation on `Read the docs soon!`;\n* Download and install this from `PyPi package <https://pypi.python.org/pypi/crispy-forms-materialize/>`__\n* Clone it on this `Github repository <https://github.com/edvm/crispy-forms-materialize>`__\n\nRequires\n========\n\n* `django-crispy-forms`_ above 1.4.x version\n* `django-materialize-css`_ above 1.4.x version (optional)\n\nYou can get django-materialize-css from `PyPI <https://pypi.python.org/pypi/django-materialize-css/>`__ and `github <https://github.com/edvm/django-materialize-css>`__\n\nInstallation\n============\n\nProbably the best way to install is by using `PIP`::\n\n    $ pip install crispy-forms-materialize\n\nIf you want to stay on the bleeding edge of the app::\n\n    $ git clone https://github.com/edvm/crispy-forms-materialize.git\n    $ cd crispy-forms-materialize\n    $ python setup.py install\n\n\nThen add the app in your project's ``INSTALLED_APPS`` like this :\n\n.. sourcecode:: python\n\n    INSTALLED_APPS = (\n        ...\n        'materialize',\n        'crispy_forms',\n        'crispy_forms_materialize',\n        ...\n    )\n\nThen change crispy template pack settings to start using it in your forms:\n\n.. sourcecode:: python\n\n    # Default layout to use with \"crispy_forms\"\n    CRISPY_TEMPLATE_PACK = 'materialize_css_forms'\n\nAll other `django-crispy-forms`_ settings option apply, see its documentation for more details.\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 17,
        "query": "*WARNING*: This project is currently UNMAINTAINED. Please use the official one: https://github.com/mailjet/mailjet-apiv3-python\n\n==============\nDjango-Mailjet\n==============\nUn-official Django email backend for use with Mailjet - https://www.mailjet.com/\n\nOverview\n========\nDjango-Mailjet is a drop-in mail backend for Django.\n\nGetting going\n=============\nInstall django-mailjet:\n    ``python3 -m pip install django-mailjet``\nAdd the following to your ``settings.py``::\n\n    EMAIL_BACKEND = 'django_mailjet.backends.MailjetBackend'\n    MAILJET_API_KEY = 'API-KEY'\n    MAILJET_API_SECRET = 'API-SECRET'\n\nReplace ``API-KEY`` and ``API-SECRET`` with the values from your Mailjet account details.\n\nNow, when you use ``django.core.mail.send_mail``, Mailjet will send the messages.\n\n.. _Mailjet: http://mailjet.com\n\n*NOTE*: Django-Mailjet does **NOT**\nvalidate your data for compliance with Mailjet's API.\nYou must ensure what you send is appropriate.\n\n\nDjango Email Backend Reference\n================================\n* https://docs.djangoproject.com/en/dev/topics/email/#email-backends\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 18,
        "query": "------------------\nNOTICE: Deprecated\n------------------\n\nThis project is deprecated and no longer actively maintained by `Disqus <https://disqus.com/>`_. However there is a fork being maintained by YPlan at `github.com/YPlan/django-modeldict <https://github.com/YPlan/django-modeldict>`_ and a similar project by Disqus at `github.com/disqus/durabledict <https://github.com/disqus/durabledict/>`_.\n\n----------------\ndjango-modeldict\n----------------\n\nModelDict is a very efficient way to store things like settings in your database. The entire model is transformed into a dictionary (lazily) as well as stored in your cache. It's invalidated only when it needs to be (both in process and based on ``CACHE_BACKEND``).\n\nQuick example usage. More docs to come (maybe?)::\n\n\n\tclass Setting(models.Model):\n\t    key = models.CharField(max_length=32)\n\t    value = models.CharField(max_length=200)\n\tsettings = ModelDict(Setting, key='key', value='value', instances=False)\n\t\n\t# access missing value\n\tsettings['foo']\n\t>>> KeyError\n\t\n\t# set the value\n\tsettings['foo'] = 'hello'\n\t\n\t# fetch the current value using either method\n\tSetting.objects.get(key='foo').value\n\t>>> 'hello'\n\t\n\tsettings['foo']\n\t>>> 'hello'\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 19,
        "query": "CAUTION: this project is not maintained anymore as it's maintainer don't use it anymore\n(and switched to tmux). If you contribute a bit, you may reclaim this project.\n\n\nscreenutils\n===========\n\nscreenutils is a set of classes that should help handling gnu-screen windows.\n\nIt requires gnu-screen binary installed (named screen and in your path) to work.\n\nFeel free to report any modification you made, the whole code source is\navailable under the terms of the GPLv2 but I think about using a more permissave license (WTFPL).\n\nExample usage\n-------------\n\nExample in a python console::\n\n   >>> from screenutils import list_screens, Screen\n   >>> list_screens()\n   []\n   >>> s = Screen(\"session1\",True)\n   >>> # funky prompts could reduce log visibility. Use sh or bash for best results\n   >>> s.send_commands('bash')\n   >>> s.enable_logs()\n   >>> s.send_commands(\"df\")\n   >>> print next(s.logs)\n   df\n   Filesystem           1K-blocks      Used Available Use% Mounted on\n   /dev/sda6             20161172   8084052  11052980  43% /\n   none                   1505916       304   1505612   1% /dev\n   none                   1512676       936   1511740   1% /dev/shm\n   none                   1512676       380   1512296   1% /var/run\n   none                   1512676         0   1512676   0% /var/lock\n   none                   1512676         0   1512676   0% /lib/init/rw\n   none                  20161172   8084052  11052980  43% /var/lib/ureadahead/debugfs\n   /dev/sda7            403567768 196284216 186783420  52% /home\n   popi@popi-laptop:~/Dev/github/screenutils$\n   >>> s.disable_logs()\n   >>> s = None\n   >>> s = Screen(\"session1\")\n   >>> s.exists\n   True\n   >>> s2 = Screen(\"session2\")\n   >>> s2.exists\n   False\n   >>> s2.initialize()\n   >>> s2.exists\n   True\n   >>> list_screens()\n   [<Screen 'session2'>, <Screen 'session1'>]\n   >>>\n\n\nInstallation\n-------------\n\nYou could install screenutils from github, by doing the following::\n\n    $ pip install git+http://github.com/Christophe31/screenutils.git\n\nOr by just using the packages published on Pypi, for instance with pip::\n\n    $ pip install screenutils\n\nFeatures\n---------\n\n* screens listing\n* screen session creation\n* screen session closing\n* screen code insertion\n* screen monitoring/logging\n* screen session sharing with unix users (see below)\n\nCore Documentation\n------------------\n\n**Screen class**:\n\n* ``Screen(name, initialize=False)`` Create a new screen.\n\n  - ``name`` (required): The name associated with the screen.\n\n  - ``initialize``: If True, creates a screen session if it does not exists.\n\n* ``screen.id`` (property) the id of the screen as a string.\n* ``screen.status`` (property) the status of the screen as a string.\n* ``screen.exists`` (property) True if the screen exists (has been initialized)\n\n  - NOTE: ``.id``, ``.status``, ``.exists`` are all based off of the output of ``screen -ls``\n\n* ``screen.initialize`` Initialize a screen if does not exists yet. Equivalent to running ``screen -UR screen_name``\n* ``screen.enable_logs()`` turns Screen's logging on. The Logfile's name is automatically set to that of the ``Screen`` object.\n* ``screen.logs`` A generator that acts like ``tailF`` on the logfile.\n* ``screen.disable_logs()`` turns logging off.\n* ``screen.kill()`` Quit the screen. Equivalent to running ``screen -x screen_name -X quit``\n* ``screen.detach()`` Detach from the screen.\n* ``screen.send_commands(*commands)`` send bash commands to the screen.\n\n  - ``*commands`` the command(s) to run (as a string).\n\n* ``screen.add_user_access(unix_user_name)`` Allow another user to access the screen.\n\n  - ``unix_user_name`` (required): the unix name of the user to add.\n\n  - \\*NOTE: to allow this feature, you will **need** to change some unix rights:\n\n    + ``sudo chmod +s /usr/bin/screen``\n\n    + ``sudo chmod 755 /var/run/screen``\n\n**Functions** :\n\n* ``list_screens()`` list screens. Returns a list of ``Screen`` instances.\n\n**Exceptions** :\n\n* ``ScreenNotFoundError``: Raised when a screen wasn't found.\n\nKnown issues\n-------------\n\nThis may not work properly with bpython.\n\nRoadmap\n--------\n\n* multi windows screen support\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 20,
        "query": "**THIS PROJECT IS UNMAINTAINED**\n\nPlease use `micawber <https://github.com/coleifer/micawber>`_ -- it has much\nof the same functionality along with many improvements.\n\n\nGetting Started with OEmbed\n===========================\n\nInstallation\n------------\n\nFirst, you need to install OEmbed.  It is available at http://github.com/worldcompany/djangoembed/\n\n::\n\n    git clone git://github.com/worldcompany/djangoembed/\n    cd djangoembed\n    python setup.py install\n\nAdding to your Django Project\n--------------------------------\n\nAfter installing, adding OEmbed consumption to your projects is a snap.  First,\nadd it to your projects' INSTALLED_APPs and run 'syncdb'::\n    \n    # settings.py\n    INSTALLED_APPS = [\n        ...\n        'oembed'\n    ]\n\ndjangoembed uses a registration pattern like the admin's.  In order to be\nsure all apps have been loaded, djangoembed should run autodiscover() in the\nurls.py.  If you like, you can place this code right below your admin.autodiscover()\nbits::\n    \n    # urls.py\n    import oembed\n    oembed.autodiscover()\n\nConsuming Resources\n-------------------\n\nNow you're ready to start consuming OEmbed-able objects.  There are a couple of\noptions depending on what you want to do.  The most straightforward way to get\nup-and-running is to add it to your templates::\n\n    {% load oembed_tags %}\n    \n    {% oembed %}blog.content{% endoembed %}\n\n    {# or use the filter #}\n    \n    {{ blog.content|oembed }}\n    \n    {# maybe you're working with some dimensional constraints #}\n    \n    {% oembed \"600x600\" %}blog.content{% endoembed %}\n    \n    {{ blog.content|oembed:\"600x600\" }}\n\nYou can consume oembed objects in python as well::\n\n    import oembed\n    oembed.autodiscover()\n    \n    # just get the metadata\n    resource = oembed.site.embed('http://www.youtube.com/watch?v=nda_OSWeyn8')\n    resource.get_data()\n    \n    {u'author_name': u'botmib',\n     u'author_url': u'http://www.youtube.com/user/botmib',\n     u'height': 313,\n     u'html': u'<object width=\"384\" height=\"313\"><param name=\"movie\" value=\"http://www.youtube.com/v/nda_OSWeyn8&fs=1\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"http://www.youtube.com/v/nda_OSWeyn8&fs=1\" type=\"application/x-shockwave-flash\" width=\"384\" height=\"313\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed></object>',\n     u'provider_name': u'YouTube',\n     u'provider_url': u'http://www.youtube.com/',\n     u'title': u'Leprechaun in Mobile, Alabama',\n     u'type': u'video',\n     u'version': u'1.0',\n     u'width': 384}\n    \n    # get the metadata and run it through a template for pretty presentation\n    from oembed.consumer import OEmbedConsumer\n    client = OEmbedConsumer()\n    embedded = client.parse_text(\"http://www.youtube.com/watch?v=nda_OSWeyn8\")\n    \n    <div class=\"oembed oembed-video provider-youtube\">\n      <object width=\"384\" height=\"313\">\n        <param name=\"movie\" value=\"http://www.youtube.com/v/nda_OSWeyn8&fs=1\"></param>\n        <param name=\"allowFullScreen\" value=\"true\"></param>\n        <param name=\"allowscriptaccess\" value=\"always\"></param>\n        <embed src=\"http://www.youtube.com/v/nda_OSWeyn8&fs=1\" \n               type=\"application/x-shockwave-flash\" \n               width=\"384\" \n               height=\"313\" \n               allowscriptaccess=\"always\" \n               allowfullscreen=\"true\">\n        </embed>\n      </object>\n      <p class=\"credit\">\n        <a href=\"http://www.youtube.com/watch?v=nda_OSWeyn8\">Leprechaun in Mobile, Alabama</a>\n        by \n        <a href=\"http://www.youtube.com/user/botmib\">botmib</a>\n      </p>\n    </div>'\n\nTroubleshooting\n---------------\n\nProblem: You try the youtube embed example, but all you get is a link to the youtube video.\n\nSolution: Djangoembed uses fixtures to load data about oembed providors like Youtube in to the database.  Try fooling around with syncdb (or migrations, if you're running South) until there are objects of type oembed.storedprovider.\n\nIf you have another problem, consider looking through the more extensive docs in the project's doc subdirectory.\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 21,
        "query": "==============\ndjango-rq-mail\n==============\n\n**This project is not maintained anymore, it doesn't support latest changes from rq**\n\ndjango-rq-mail is a simple Python library based on rq_ to store emails sent\nby Django_ and process them in the background with workers.\n\nAs django-rq-mail is based on rq_, it's entirely backed by Redis_.\n\nArchitecture\n------------\n\ndjango-rq-mail adds new elements to enjoy `Sorted Sets <http://redis.io/commands#sorted_set>`_\nfrom Redis_.\n\nFor the purpose of django-rq-mail, it implements the concept of ``WaitingQueue``\nwhich delays the processing of a job with a timestamp.\n\nThe default behavior of rq_ is to process jobs via `BLPOP <http://redis.io/commands/blpop>`_ which\nblocks the connection when there are no elements to pop from any of the given queues.\nWith this behavior there is no way to delays the processing of a job and when it's failing\nrq_ pushs it in a failed queue.\nOf course, you can requeue this job later but there is no fallback mechanism.\n\nIn django-rq-mail you can define fallback steps (in seconds) to retry a job until\nit's not failing. When a job has been tested on each steps we reintroduce\nthe default behavior of rq_ on pushing it in the failed queue.\n\nEach steps will create a waiting queue and when a job is failing we take the\ncurrent timestamp with the delta to retry it in the future.\n\n.. image:: http://yuml.me/895ce159\n\nThis mechanism is possible with `ZADD <http://redis.io/commands/zadd>`_ which\nadds a serialized job in the queue with a score and `ZREVRANGEBYSCORE <http://redis.io/commands/zrevrangebyscore>`_\nto return all the elements in the sorted set with a score between max (current timestamp) and min.\n\nAs you may understood, we have dropped the default blocking behavior\nto replace it by a daemon which is running each seconds.\n\n\nInstallation\n------------\n\n1. Either check out the package from GitHub_ or it pull from a release via PyPI ::\n\n       pip install django-rq-mail\n\n\n2. Add 'rq_mail' to your ``INSTALLED_APPS`` ::\n\n       INSTALLED_APPS = (\n           'rq_mail',\n       )\n\nto use the `rq_mail` command (via Django commandline) shipped by django-rq-mail.\n\nThis command is a minimal integration of rq_ into Django_ to launch the\n**Dispatcher**.\n\n3. Define ``EMAIL_BACKEND`` ::\n\n       EMAIL_BACKEND = 'rq_mail.backends.RqBackend'\n\n4. Define ``RQ_MAIL_EMAIL_BACKEND`` the backend used to send your emails, for example ::\n\n       RQ_MAIL_EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n\nLogging\n-------\n\nRQ 0.3.3 uses standard Python's ``logging``, this means\nyou can easily configure ``rqworker``'s logging mechanism in django's\n``settings.py``. For example:\n\n.. code-block:: python\n\n    LOGGING = {\n        'version': 1,\n        'disable_existing_loggers': False,\n        'formatters': {\n            'rq_console': {\n                'format': '%(asctime)s %(message)s',\n                'datefmt': '%H:%M:%S',\n            },\n        },\n        'handlers': {\n            'rq_console': {\n                'level': 'DEBUG',\n                'class': 'rq.utils.ColorizingStreamHandler',\n                'formatter': 'rq_console',\n                'exclude': ['%(asctime)s'],\n            },\n        },\n        'loggers': {\n            'rq.worker': {\n                'handlers': ['rq_console'],\n                'level': 'DEBUG'\n            },\n        }\n    }\n\nUtilisation\n-----------\n\nOnce you have installed it, you can run ``python manage.py rq_mail`` from your shell.\n\nConfiguration\n-------------\n\n``RQ_MAIL_PREFIX``\n..................\n\nThe prefix used to name all queues created by django-rq-mail.\n\n``RQ_MAIL_MAIN_QUEUE``\n......................\n\nThe name of the main queue.\n\n``RQ_MAIL_EMAIL_BACKEND``\n.........................\n\nThe email backend used to send emails when they are processed in the background.\n\n``RQ_MAIL_REDIS_HOST``\n......................\n\nThe Redis host used to connect.\n\n``RQ_MAIL_REDIS_PORT``\n......................\n\nThe Redis port used to connect.\n\n``RQ_MAIL_REDIS_DB``\n....................\n\nThe Redis database used to connect.\n\n``RQ_MAIL_REDIS_PASSWORD``\n..........................\n\nThe Redis password used to connect.\n\n``RQ_MAIL_REDIS_URL``\n..........................\n\nThe Redis url used to connect.\n\n``RQ_MAIL_REDIS_SOCKET``\n..........................\n\nThe Redis socket used to connect.\n\n``RQ_MAIL_FALLBACK_STEPS``\n..........................\n\nA simple list of timing to create waiting queues.\n\nYou can define as much steps as you want, each will be transformed to a queue.\nSo if you define 10 steps, you will allow a message to fail 10 times until it\nwill go in the failed queue.\n\n.. _Django: https://www.djangoproject.com/\n.. _rq: https://github.com/nvie/rq\n.. _Redis: http://redis.io/\n.. _GitHub: https://github.com/thoas/django-rq-mail\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 22,
        "query": ".. _jingo:\n.. module:: jingo\n\n=====\nJingo\n=====\n\nJingo is an adapter for using Jinja2_ templates within Django.\n\n\nJingo is DEPRECATED\n-------------------\n\nIn version 1.8, Django added support for multiple template engines, and provided\na Jinja2 backend.  The django-jinja_ project leverages that to support Jinja2,\nwhile Jingo does not.\n\n**django-jinja is recommended for new projects.** Jingo >=0.8 supports Django\n1.8, but it will not be maintained beyond version 0.9, and **will not** support\nDjango 1.9 or above.  If you're already using Jingo, and not ready to make `the\nswitch`_, Jingo should continue to work for now, though not without some effort.\n\n0.9_ will be the last release of Jingo, unless a new maintainer comes along with\na new direction.\n\nAs of 0.9, Jingo's built-in helpers are provided via a `Jinja2 extension`_ to\nsimplify moving away from Jingo. The entire ``jingo/ext.py`` file can be copied\ninto another project, or referenced as ``'jingo.ext.JingoExtension'``. Used in\nthis way, Jingo plays nicely with django-jinja (and theoretically Django's\nbuilt-in Jinja2 backend).\n\n.. _django-jinja: https://github.com/niwinz/django-jinja\n.. _the switch: http://bluesock.org/~willkg/blog/mozilla/input_django_1_8_upgrade.html#switching-from-jingo-to-django-jinja\n.. _Jinja2: http://jinja.pocoo.org/2/\n.. _0.9: https://https://pypi.python.org/pypi/jingo/0.9.0\n.. _Jinja2 extension: https://github.com/jbalogh/jingo/blob/master/jingo/ext.py\n\n\n.. _usage:\n\nUsage\n-----\n\nWhen configured properly (see Settings_ below) you can render Jinja2_ templates in\nyour view the same way you'd render Django templates::\n\n    from django.shortcuts import render\n\n\n    def my_view(request):\n        context = dict(user_ids=(1, 2, 3, 4))\n        return render(request, 'users/search.html', context)\n\n.. note::\n\n    Not only does ``django.shorcuts.render`` work, but so does any method that\n    Django provides to render templates.\n\n.. _settings:\n\nSettings\n--------\n\nYou'll want to use Django to use jingo's template loader.\nIn ``settings.py``::\n\n    TEMPLATE_LOADERS = (\n        'jingo.Loader',\n        'django.template.loaders.filesystem.Loader',\n        'django.template.loaders.app_directories.Loader',\n    )\n\nThis will let you use ``django.shortcuts.render`` or\n``django.shortcuts.render_to_response``.\n\nYou can optionally specify which filename patterns to consider Jinja2 templates::\n\n    JINGO_INCLUDE_PATTERN = r'\\.jinja2'  # use any regular expression here\n\nThis will consider every template file that contains the substring `.jinja2` to\nbe a Jinja2 file (unless it's in a module explicitly excluded, see below).\n\nAnd finally you may have apps that do not use Jinja2, these must be excluded\nfrom the loader::\n\n    JINGO_EXCLUDE_APPS = ('debug_toolbar',)\n\nIf a template path begins with ``debug_toolbar``, the Jinja loader will raise a\n``TemplateDoesNotExist`` exception. This causes Django to move onto the next\nloader in ``TEMPLATE_LOADERS`` to find a template - in this case,\n``django.template.loaders.filesystem.Loader``.\n\n.. note::\n   Technically, we're looking at the template path, not the app. Often these are\n   the same, but in some cases, like 'registration' in the default setting--which\n   is an admin template--they are not.\n\nThe default is in ``jingo.EXCLUDE_APPS``::\n\n    EXCLUDE_APPS = (\n        'admin',\n        'admindocs',\n        'registration',\n        'context_processors',\n    )\n\n.. versionchanged:: 0.6.2\n   Added ``context_processors`` application.\n\nIf you want to configure the Jinja environment, use ``JINJA_CONFIG`` in\n``settings.py``.  It can be a dict or a function that returns a dict. ::\n\n    JINJA_CONFIG = {'autoescape': False}\n\nor::\n\n    def JINJA_CONFIG():\n        return {'the_answer': 41 + 1}\n\nIf you set the ``extensions`` key in the configuration, you **must**\ninclude ``jingo.ext.JingoExtension`` to get Jingo's built-in template\nhelpers (see below).\n\n\nTemplate Helpers\n----------------\n\n.. note::\n\n    In the interest of future-proofing, consider writing custom filters and\n    functions as Jinja extensions. See ``jingo/ext.py`` for a simple example.\n\nInstead of template tags, Jinja encourages you to add functions and filters to\nthe templating environment.  In ``jingo``, we call these helpers.  When the\nJinja environment is initialized, ``jingo`` will try to open a ``helpers.py``\nfile from every app in ``INSTALLED_APPS``.  Two decorators are provided to ease\nthe environment extension:\n\n.. function:: jingo.register.filter\n\n    Adds the decorated function to Jinja's filter library.\n\n.. function:: jingo.register.function\n\n    Adds the decorated function to Jinja's global namespace.\n\n\nDefault Helpers\n~~~~~~~~~~~~~~~\n\nHelpers are available in all templates automatically, without any extra\nloading. See ``jingo/ext.py`` for their definitions.\n\n\nTemplate Environment\n--------------------\n\nA single Jinja ``Environment`` is created for use in all templates.  This is\navailable via ``jingo.get_env()`` if you need to work with the ``Environment``.\n\n\nLocalization\n------------\n\nSince we all love L10n, let's see what it looks like in Jinja templates::\n\n    <h2>{{ _('Reviews for {0}')|f(addon.name) }}</h2>\n\nThe simple way is to use the familiar underscore and string within a ``{{ }}``\nmoustache block.  ``f`` is an interpolation filter documented below.  Sphinx\ncould create a link if I knew how to do that.\n\nThe other method uses Jinja's ``trans`` tag::\n\n    {% trans user=review.user|user_link, date=review.created|datetime %}\n        by {{ user }} on {{ date }}\n    {% endtrans %}\n\n``trans`` is nice when you have a lot of text or want to inject some variables\ndirectly.  Both methods are useful, pick the one that makes you happy.\n\n\nForms\n-----\n\nDjango marks its form HTML \"safe\" according to its own rules, which Jinja2 does\nnot recognize.\n\nThis monkeypatches Django to support the ``__html__`` protocol used in Jinja2\ntemplates. ``Form``, ``BoundField``, ``ErrorList``, and other form objects that\nrender HTML through their ``__unicode__`` method are extended with ``__html__``\nso they can be rendered in Jinja2 templates without adding ``|safe``.\n\nCall the ``patch()`` function to execute the patch. It must be called\nbefore ``django.forms`` is imported for the conditional_escape patch to work\nproperly. The root URLconf is the recommended location for calling ``patch()``.\n\nUsage::\n\n    import jingo.monkey\n    jingo.monkey.patch()\n\n\nTesting\n-------\n\nTo run the test suite, you need to define ``DJANGO_SETTINGS_MODULE`` first::\n\n    $ export DJANGO_SETTINGS_MODULE=\"fake_settings\"\n    $ nosetests\n\nor simply run::\n\n    $ python run_tests.py\n\nTo test on all supported versions of Python and Django::\n\n    $ pip install tox\n    $ tox\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 23,
        "query": "DEPRECATED, USE `DJANGO-USERPROFILE <https://github.com/praekelt/django-userprofile>`_ INSTEAD!\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 24,
        "query": "========\nbarbeque\n========\n\n.. image:: https://badge.fury.io/py/barbeque.png\n    :target: http://badge.fury.io/py/barbeque\n    :alt: Latest PyPI version\n\n.. image:: https://travis-ci.org/moccu/barbeque.png?branch=master\n    :target: https://travis-ci.org/moccu/barbeque\n    :alt: Latest Travis CI build status\n\n.. image:: https://coveralls.io/repos/moccu/barbeque/badge.svg\n    :target: https://coveralls.io/github/moccu/barbeque\n    :alt: Coverage of master build\n\n.. image:: https://readthedocs.org/projects/barbeque/badge/?version=latest\n    :target: http://barbeque.readthedocs.org/en/latest/\n    :alt: Latest read the docs build\n\nBarbeque is a collection of custom extensions and helpers, mostly related to the Django Web framework.\n\nThese include a commands framework, logging helpers, django-anylink, filer extensions and much much more.\n\n\nbarbeque is deprecated\n======================\n\nPlease use following libraries instead:\n\n* `django-cms-helpers <https://github.com/moccu/django-cms-helpers>`_\n* `django-exporter <https://github.com/moccu/django-exporter>`_\n* `django-inline-static <https://github.com/moccu/django-inline-static>`_\n* `django-static-delivery <https://github.com/moccu/django-static-delivery>`_\n* `django-static-templates <https://github.com/moccu/django-static-templates>`_\n* `django-template-helpers <https://github.com/moccu/django-template-helpers>`_\n* `python-command-executor <https://github.com/moccu/python-command-executor>`_\n\n\nFeatures\n========\n\n* Commands framework\n* Logging helpers\n* django-anylink and django-cms extensions\n* django-filer extensions\n* various helpers for forms and generic views\n\n\nResources\n=========\n\n* `Documentation <https://barbeque.readthedocs.org/>`_\n* `Bug Tracker <https://github.com/moccu/barbeque/issues>`_\n* `Code <https://github.com/moccu/barbeque/>`_\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 25,
        "query": "=========================================================\ndjango-kombu - Kombu transport using the Django database.\n=========================================================\n\n:version: 0.9.4\n\nDeprecated\n==========\n\ndjango-kombu has now moved into Kombu core, so this repository\nis no longer in use.\n\nTo upgrade, install the latest Kombu version and add the following\nto your settings.py::\n\n    INSTALLED_APPS = (\n        \"kombu.transport.django\",\n    )\n\nYou can remove the previous \"djkombu\" entry.\n\n\n**ORIGINAL README BELOW**\n\n\nIntroduction\n============\n\nThis package enables you to use the Django database as the message store\nfor `Kombu`_.\n\n\nTo use you first have to add ``djkombu`` to ``INSTALLED_APPS``, and then\nexecute ``syncdb`` to create the tables.\n\n``django-kombu`` contains a single transport,\n``djkombu.transport.DatabaseTransport``, which is used like this::\n\n    >>> from kombu.connection import BrokerConnection\n    >>> c = BrokerConnection(transport=\"djkombu.transport.DatabaseTransport\")\n\n\n.. _`Kombu`: http://pypi.python.org/pypi/kombu\n\nInstallation\n============\n\nYou can install ``django-kombu`` either via the Python Package Index (PyPI)\nor from source.\n\nTo install using ``pip``,::\n\n    $ pip install django-kombu\n\n\nTo install using ``easy_install``,::\n\n    $ easy_install django-kombu\n\n\nIf you have downloaded a source tarball you can install it\nby doing the following,::\n\n    $ python setup.py build\n    # python setup.py install # as root\n\nLicense\n=======\n\nThis software is licensed under the ``New BSD License``. See the ``LICENSE``\nfile in the top distribution directory for the full license text.\n\n.. # vim: syntax=rst expandtab tabstop=4 shiftwidth=4 shiftround\n\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 26,
        "query": "sentry-jira\n===========\n\n**DEPRECATED:** This project now lives in `sentry-plugins <https://github.com/getsentry/sentry-plugins>`_\n\nA flexible extension for Sentry which allows you to create issues in JIRA based on sentry events.\nIt is capable of rendering and saving many custom fields, and will display the proper fields depending on\nwhich issue type you are trying to create.\n\n**Requires Sentry 8+**\n\nInstallation\n------------\n\nInstall the package via ``pip``:\n\n::\n\n    pip install sentry-jira\n\nConfiguration\n-------------\n\nGo to your project's configuration page (Dashboard -> [Project] -> Settings), select the\nIssue Tracking tab, and then click the JIRA button under available integrations.\n\nEnter the JIRA credentials and Project configuration and save changes. Filling out the form is\na two step process (one to fill in data, one to enter additional options).\n\nMore Documentation\n------------------\n\nHave a look at the readthedocs page for more detailed configuration steps and a\nchangelog: https://sentry-jira.readthedocs.io/en/latest/\n\nLicense\n-------\n\nsentry-jira is licensed under the terms of the 3-clause BSD license.\n\nContributing\n------------\n\nAll contributions are welcome, including but not limited to:\n\n - Documentation fixes / updates\n - New features (requests as well as implementations)\n - Bug fixes (see issues list)\n - Update supported JIRA types as you come across them\n\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 27,
        "query": ".. This README is meant for consumption by humans and pypi. Pypi can render rst files so please do not use Sphinx features.\n   If you want to learn more about writing documentation, please check out: http://docs.plone.org/about/documentation_styleguide.html\n   This text does not appear on pypi or github. It is a comment.\n\n==============================================================================\nredturtle.agidtheme\n==============================================================================\n\n\n   **WARNING!**\n\n   **DEPRECATED** in favor of https://github.com/italia/design.plone.theme\n\n\n\n\nIl primo tema Plone conforme a `Italia design system`__.\n\n__ https://design-italia.readthedocs.io/it/stable/index.html\n\nQuesto tema si basa sulla versione 2017.1 delle linee guida.\n\n|\n\nThis is the first Plone theme that is compliant with the `Italia design system`__ guidelines.\n\n__ https://design-italia.readthedocs.io/it/stable/index.html\n\nIt is built on guidelines' version 2017.1.\n\nThis README is written in italian language because it's meant for Italian Public Administration websites.\n\n\nDocumentazione\n--------------\n\nLa documentazione per l'utente finale \u00e8 disponibile in `questo documento`__.\n\n__ https://docs.google.com/document/d/1ncSgzj0JABBWR1Jt7sxtIH5qwjCVN10qBm7uA8uM5cw/export?format=pdf\n\n\nEsempi\n------\n\nQuesto tema pu\u00f2 essere visto in azione nei seguenti siti web:\n\n- `digitale.regione.emilia-romagna.it`__\n- `regione.emilia-romagna.it`__\n- `comune.santarcangelo.rn.it`__\n- `comune.calderaradireno.bo.it`__\n\n__ http://digitale.regione.emilia-romagna.it\n__ http://www.regione.emilia-romagna.it\n__ http://www.comune.santarcangelo.rn.it\n__ http://www.comune.calderaradireno.bo.it\n\n\nTraduzioni\n-----------\n\nQuesto prodotto \u00e8 stato tradotto nelle seguenti lingue:\n\n- Italiano\n\n\nInstallazione\n-------------\n\nInstalla redturtle.agidtheme aggiungendolo al tuo buildout::\n\n    [buildout]\n\n    ...\n\n    eggs =\n        redturtle.agidtheme\n\n\ne successivamente eseguendo ``bin/buildout``.\n\nAl successivo avvio del sito troverete il tema disponibile tra i prodotti aggiuntivi del sito, con il nome \"Tema: Italia design system\".\n\n\nSviluppo\n--------\n\nPer la compilazione del codice Sass e la build del bundle JavaScript, sono presenti alcuni script nel ``package.json``:\n\n- ``yarn develop``: esegue la compilazione con grunt e lo lascia avviato in modalit\u00e0 watch\n- ``yarn build``: compila con grunt e esegue prettier\n- ``yarn test``: esegue il linting con stylelint.\n\n\nCompatibilit\u00e0\n-------------\n\nQuesto prodotto \u00e8 stato testato su Plone >= 5.0.7.\n\n\nRiconoscimenti\n--------------\n\nSviluppato con il supporto di `Regione Emilia-Romagna`__.\n\n__ http://www.regione.emilia-romagna.it/\n\n\n\nAutori\n------\n\nQuesto prodotto \u00e8 stato sviluppato dal team di RedTurtle Technology.\n\n.. image:: http://www.redturtle.it/redturtle_banner.png\n   :alt: RedTurtle Technology Site\n   :target: http://www.redturtle.it/\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 28,
        "query": "Deprecation Notice\n==================\n\nThis code is deprecated, the current version of Bitmask is developed in the `bitmask-dev`_ repo.\n\n.. _`bitmask-dev`: https://0xacab.org/leap/bitmask-dev\n\nleap.mail\n=========\nMail services for the LEAP Client.\n\n.. image:: https://badge.fury.io/py/leap.mail.svg\n    :target: http://badge.fury.io/py/leap.mail\n\n.. image:: https://readthedocs.org/projects/leapmail/badge/?version=latest\n         :target: http://leapmail.readthedocs.org/en/latest/\n         :alt: Documentation Status\n\nMore info: https://leap.se\n\nrunning tests\n-------------\n\nUse trial to run the test suite::\n\n  trial leap.mail\n\n... and all its goodies. To run all imap tests in a loop until some of them\nfails::\n\n  trial -u leap.mail.imap\n\nRead the *trial* manpage for more options .\n\nimap regressions\n----------------\n\nFor testing the IMAP server implementation, there are a couple of utilities.\nFrom the ``leap.mail.imap.tests`` folder, and with an already initialized server\nrunning::\n\n  ./regressions_mime_struct user@provider pass path_to_samples/\n\nYou can find several message samples in the ``leap/mail/tests`` folder.\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 29,
        "query": "~~~~~~~~~~~~~~~~~\nepub-extract-jpeg\n~~~~~~~~~~~~~~~~~\n\n\nDEPRECATED!!!\n\nYou can use epub-extractor https://github.com/ytyng/epub-extractor .\n\n\nepub-extractor \u306b\u6a5f\u80fd\u304c\u53d6\u308a\u8fbc\u307e\u308c\u307e\u3057\u305f\n\n\nExtract Jpeg files in COMIC EPUB file,\n\n\nInstall\n-------\n\n::\n\n  $ pip install epub-extract-jpeg\n\n\nRequirements\n------------\n\n* unzip\n\n* PIL: convert PNG image to Jpeg.\n  with option `--no-convert-png` , cancelled.\n\n\nHow to use\n----------\n\n::\n\n  $ epub-extract-jpeg xxxx.epub\n\nCreate xxx directory, and extract images to there.\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 30,
        "query": "PyEmbed\n=======\n\nProject status: unmaintained\n----------------------------\n\nThis project is no longer updated.  The code is here for historic purposes only.\n\n----\n\n.. image:: https://secure.travis-ci.org/pyembed/pyembed.png?branch=master\n  :target: http://travis-ci.org/pyembed/pyembed\n.. image:: https://coveralls.io/repos/pyembed/pyembed/badge.png\n  :target: https://coveralls.io/r/pyembed/pyembed\n.. image:: https://pypip.in/d/pyembed/badge.png\n  :target: https://pypi.python.org/pypi/pyembed/\n.. image:: https://pypip.in/v/pyembed/badge.png\n  :target: https://pypi.python.org/pypi/pyembed/\n.. image:: https://pypip.in/wheel/pyembed/badge.png\n  :target: https://pypi.python.org/pypi/pyembed/\n.. image:: https://pypip.in/egg/pyembed/badge.png\n  :target: https://pypi.python.org/pypi/pyembed/\n.. image:: https://pypip.in/license/pyembed/badge.png\n  :target: https://pypi.python.org/pypi/pyembed/\n\n`OEmbed`_ consumer library for Python with automatic discovery of\nproducers.\n\nPyEmbed allows you to easily embed content on your website from a wide\nvariety of producers (including `Flickr`_, `Twitter`_ and `YouTube`_).\nUnlike many OEmbed consumers, you don't need to configure each producer\nthat you want to use - PyEmbed discovers the configuration automatically.\n\nYou just need to provide the URL, and PyEmbed will generate a block of\nHTML, ready for you to include in your page:\n\n::\n\n    >>> from pyembed.core import PyEmbed\n    >>> html = PyEmbed().embed('http://www.youtube.com/watch?v=9bZkp7q19f0')\n    <iframe width=\"480\" height=\"270\" src=\"http://www.youtube.com/embed/9bZkp7q19f0?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>\n\nThere are plugins for embedding content into `Markdown`_ and \n`reStructuredText`_ documents, and for customizing embeddings with `Jinja2`_\nand `Mustache`_ templates.  For more information, see the `PyEmbed`_ website.\n\nCompatibility\n-------------\n\nPyEmbed has been tested with Python 2.7 and 3.3.\n\nInstallation\n------------\n\nPyEmbed can be installed using pip:\n\n::\n\n    pip install pyembed\n\nContributing\n------------\n\nTo report an issue, request an enhancement, or contribute a patch, go to\nthe PyEmbed `GitHub`_ page.\n\nLicense\n-------\n\nPyEmbed is distributed under the MIT license.\n\n::\n\n    Copyright (c) 2013 Matt Thomson\n\n    Permission is hereby granted, free of charge, to any person obtaining\n    a copy of this software and associated documentation files (the\n    \"Software\"), to deal in the Software without restriction, including\n    without limitation the rights to use, copy, modify, merge, publish,\n    distribute, sublicense, and/or sell copies of the Software, and to\n    permit persons to whom the Software is furnished to do so, subject to\n    the following conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n    LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n.. _OEmbed: http://oembed.com\n.. _Flickr: http://flickr.com\n.. _Twitter: http://twitter.com\n.. _YouTube: http://youtube.com\n.. _Markdown: https://pypi.python.org/pypi/pyembed-markdown\n.. _reStructuredText: https://pypi.python.org/pypi/pyembed-rst\n.. _Jinja2: https://pypi.python.org/pypi/pyembed-jinja2\n.. _Mustache: https://pypi.python.org/pypi/pyembed-mustache\n.. _PyEmbed: http://pyembed.github.io\n.. _GitHub: https://github.com/pyembed/pyembed\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 31,
        "query": "This library is deprecated, please use rollbar-agent_\n=====================================================\n\nratchet-agent\n=============\nA daemon to monitor log files and push messages to Ratchet.io_.\n\n\nRequirements\n------------\nratchet-agent requires:\n\n- A unix-like system (tested on Fedora Linux and Mac OS X)\n- Python 2.6+\n- requests 0.13.1+\n- a Ratchet.io_ account\n\n\nInstallation\n------------\nInstall with pip::\n\n    pip install ratchet-agent\n\nThis will install the ratchet-agent files in the root directory of your virtualenv. Or if you'd prefer, clone this git repo:\n\n    git clone https://github.com/ratchetio/ratchet-agent.git\n\nSee Configuration for configuration options and setup.\n\nratchet-agent comes with an example init.d script, chkconfig compatible and tested on Fedora Linux. To install it, symlink ``ratchet-agent-init.sh`` to ``/etc/init.d/ratchet-agent`` and add to chkconfig::\n\n    ln -s /path/to/ratchet-agent/ratchet-agent-init.sh /etc/init.d/ratchet-agent\n    chkconfig --add ratchet-agent\n    chkconfig on ratchet-agent\n    service ratchet-agent start\n\nConfiguration\n-------------\nConfiguration options for ratchet-agent itself are in `ratchet-agent.conf`. If you're using the init script, it has a few of its own configuration variables inside which control how it runs.\n\n**ratchet-agent.conf**\nAt the bare minimum, you will want to change the following variables:\n\n- ``params.access_token`` -- your Ratchet.io access token\n- ``targets`` -- white-space-separated list of files or directories (non-recursive) to process.\n\nSetting the following variables will improve github integration:\n\n- ``params.root`` -- path to your code root\n- ``params.branch`` -- the current branch\n\nOther options are documented in the sample config file.\n\n**ratchet-agent-init.sh**\nConfiguration variables should be self-explanatory. If you're not using a virtualenv, set ``VIRTUALENV=\"\"``.\n\n\nContributing\n------------\n\nContributions are welcome. The project is hosted on github at http://github.com/ratchetio/ratchet-agent\n\n\nAdditional Help\n---------------\nIf you have any questions, feedback, etc., drop me a line at brian@ratchet.io\n\n\n.. _rollbar-agent: https://github.com/rollbar/rollbar-agent\n.. _Ratchet.io: http://ratchet.io/\n.. _`download the zip`: https://github.com/ratchetio/django_ratchet/zipball/master\n.. _ratchet-agent: http://github.com/ratchetio/ratchet-agent\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 32,
        "query": "Deprecated\n==========\n\nThe plonesocial.* group of packages has become ploneintranet_.\n\nPlone Intranet features a complete redesign and re-implementation of the\nfront-end user interface of plonesocial. The backend is largely unchanged\nbut extended with new features: liking updates, personalized tagging.\n\nWork on the ploneintranet `code base`_ is sponsored by the\n`Plone Intranet Consortium`_, a group of companies dedicated to delivering\nthe leading open source digital workplace platform, based on Plone.\nHave a look, you'll like it. It's 100% open source.\n\n|Cosent|_\n\nPlonesocial and Plone Intranet are initiatives by Cosent_.\n\nThis repository is maintained frozen for developers who have made forks\nfor use in their own projects. If you're one of those developers and are\ninterested in upgrading to Plone Intranet, please contact Cosent_.\n\nPlease note that commits after August 2014 are part of the ploneintranet\nrewrite, before plonesocial.* got merged into ploneintranet.*.\n\n.. _ploneintranet: https://github.com/ploneintranet/ploneintranet\n.. _code base: https://github.com/ploneintranet/ploneintranet\n.. _Plone Intranet Consortium: http://ploneintranet.com\n.. _Cosent: http://cosent.nl\n.. |Cosent| image:: http://cosent.nl/images/logo-external.png \n                    :alt: Cosent\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 33,
        "query": "##########\nDEPRECATED: Opbeat CLI\n##########\n\nPlease see https://opbeat.com/docs/articles/get-started-with-release-tracking/ for a much simpler way.\n\n\n\n\n\n.. image:: https://badge.fury.io/py/opbeatcli.png\n   :target: https://pypi.python.org/pypi/opbeatcli\n\n\n.. image:: https://secure.travis-ci.org/opbeat/opbeatcli.png?branch=dev\n   :target: http://travis-ci.org/opbeat/opbeatcli\n\n\nInstallation\n============\n\nMake sure you have Git and a supported version Python installed on your system.\nThe supported Python versions are: ``2.6.x``, ``2.7.x``, ``3.3+`` and PyPy.\n\n.. code-block:: bash\n\n    $ python --version\n\n\nOpbeat CLI can then be installed using the standard Python package installation\nmethod:\n\n.. code-block:: bash\n\n    $ pip install opbeatcli\n\nIf ``pip`` is not available, you can alternatively use ``easy_install``:\n\n.. code-block:: bash\n\n    $ easy_install opbeatcli\n\nTo verify successful installation of Opbeat CLI:\n\n.. code-block:: bash\n\n    $ opbeat --version\n\n\nUsage\n=====\n\n.. code-block:: bash\n\n    $ opbeat [common options] sub-command [sub-command options]\n\n\nCommon Options\n--------------\n\nThese options are shared by all sub-commands.\n\nTo obtain these, please go to your app settings on opbeat.com:\n\n======================   ======================================================\n``--org-id, -o``         Organization ID\n``--app-id, -a``         Application ID.\n``--secret-token, -t``   Secret API authentication token.\n======================   ======================================================\n\n\nFor more information and a complete list of the available common options,\nplease see the command help:\n\n.. code-block:: bash\n\n    $ opbeat --help\n\n\nSub-Commands\n------------\n\n\n``deployment``\n~~~~~~~~~~~~~~\n\nThis command registers a deployment of an application to a machine with\nthe Opbeat API. Deployment tracking enables advanced features of the\nOpbeat platform, such as version history and the ability to relate errors\nwith particular deployments, etc. It is meant to be run from the machine\nthat is being deployed to:\n\n.. code-block:: bash\n\n    # A basic deployment registration: Run this from your application\n    # repository directory on the machine which it's been deployed to:\n    $ opbeat -o ORGANISATION_ID -a APP_ID -t SECRET_TOKEN \\\n        deployment --component path:.\n\nFor more information and examples please see\n`deployment tracking documentation <https://opbeat.com/docs/release_standard/>`_\nand the command help:\n\n.. code-block:: bash\n\n    $ opbeat deployment --help\n\n\n\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 34,
        "query": ".. contents::\n\n.. warning::\n   This recipe has been deprecated in favor of `djc.recipe2`_.\n   If you are starting a new project,\n   **don't use this package**,\n   use `djc.recipe2`_.\n   This package might see minor bug fixes to keep existing buildouts running,\n   but it won't gain new features.\n\nThis recipe allows you to setup a Django_ project through `zc.buildout`_.\n\nUsage\n*****\n\nThe main scope of the recipe is to abstract out the ``settings.py`` file,\nallowing settings to reside inside the buildout instead of having them reside\ninto code (leading to an awkard handling of the same in respect to versioning,\nfor example). The ``settings.py`` file is generated by a template, either the\ndefault one, the default one and a user extension, or a totally new one.\n\nThe template uses the Tempita_ templating system.\n\nThe most basic usage of this recipe is as follows: ::\n\n    [buildout]\n    parts = django\n\n    [django]\n    recipe = djc.recipe\n    project = my.project\n\nWhere ``my.project`` is an importable package containing a ``urls`` module and\na ``templates`` directory.\n\nAs you see, very few options are specified here: the defaults are used to build\nup the ``settings.py`` file.\n\nOf course, real examples tend to be slightly more complex: see Options_,\n`Default template options`_ and `Example usage`_ for more details.\n\nRunning tests\n*************\n\nThe ``README.txt`` located within the package also acts as main doctest.\n\nTo run the tests, check out the source, and then bootstrap and run the buildout::\n\n    $ python bootstrap.py\n    $ bin/buildout\n\nThen you can run the tests using::\n\n    $ bin/test\n\nLinks\n*****\n\n- Code repository: http://github.com/abstract-open-solutions/djc.recipe\n- Discussions at https://groups.google.com/group/djcrecipe\n- Comments and questions at info@abstract.it\n\n.. _Django: http://www.djangoproject.com/\n.. _`zc.buildout`: http://www.buildout.org/\n.. _Satchmo: http://www.satchmoproject.com\n.. _`djc.recipe2`: http://pypi.python.org/pypi/djc.recipe2\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 35,
        "query": "DEPRECATED!\n===========\nThis work has been merged upstream into `pyzmq <https://github.com/zeromq/pyzmq>`_\n----------------------------------------------------------------------------------\n\n=============\ngevent-zeromq\n=============\n\nThis library wraps pyzmq to make it compatible with gevent. \u00d8MQ socket\noperations that would normally block the current thread will only block the\ncurrent greenlet instead.\n\nRequirements\n------------\n\n* pyzmq==2.2.0\n* gevent (compatible with 1.0 pre-releases as well)\n\n\nUsage\n-----\n\nInstead of importing zmq directly, do so in the following manner:\n\n..\n    \n    from gevent_zeromq import zmq\n\n\nAny calls that would have blocked the current thread will now only block the\ncurrent green thread.\n\n\nAbout\n-----\n\nThis compatibility is accomplished by ensuring the nonblocking flag is set\nbefore any blocking operation and the \u00d8MQ file descriptor is polled internally\nto trigger needed events.\n\nWill build with cython if available, decreasing overhead.\n\nLicense\n-------\nSee LICENSE (New BSD)\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 36,
        "query": "===========\nDeprecated\n===========\nPlease use https://github.com/iMerica/dj-rest-auth as this project is no longer maintained. Thanks!\n\n\nWelcome to django-rest-auth\n===========================\n\n.. image:: https://travis-ci.org/Tivix/django-rest-auth.svg\n    :target: https://travis-ci.org/Tivix/django-rest-auth\n\n\n.. image:: https://coveralls.io/repos/Tivix/django-rest-auth/badge.svg\n    :target: https://coveralls.io/r/Tivix/django-rest-auth?branch=master\n\n\n.. image:: https://readthedocs.org/projects/django-rest-auth/badge/?version=latest\n    :target: https://readthedocs.org/projects/django-rest-auth/?badge=latest\n\n\nDjango-rest-auth provides a set of REST API endpoints for Authentication and Registration\n\n\nDocumentation\n-------------\nhttp://django-rest-auth.readthedocs.org/en/latest/\n\n\nSource code\n-----------\nhttps://github.com/Tivix/django-rest-auth\n\n\nStack Overflow\n-----------\nhttp://stackoverflow.com/questions/tagged/django-rest-auth\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 37,
        "query": "========\nCovid-19\n========\n\n.. image:: https://gitlab.com/pydemic/covid-19/badges/master/pipeline.svg\n   :target: https://github.com/pydemic/covid-19/commits/master\n\n.. image:: https://gitlab.com/pydemic/covid-19/badges/master/coverage.svg\n   :target: https://github.com/pydemic/covid-19/commits/master\n\n\n\nThis is a Python library that simulates COVID-19 outbreaks. The main focus is on Brazil, but it\nincludes demographic data about other countries and can be adapted with relative ease. This library\nimplements the RSEICHA model (yet to be published, we will link the preprint here). One version,\n`covid.models.RSEICHADemografic` considers demographic information and the other, `covid.models.RSEICHA`\njust uses generic compartments.\n\n**WARNING!**\n\nThis library is deprecated and will be replaced by several projects in the Pydemic organization. If you\nwant to use the library or contribute to its development, please contact the developers first.\n\n\nUsage\n=====\n\nYou can run models from the command line::\n\n$ python -m covid.models.seichar\n\nOr, more typically, from Python code\n\n>>> from covid.models import SEICHAR\n>>> m = SEICHAR(region='Italy')\n>>> run = m.run()\n>>> run.plot()\n>>> print(run)\n\nCalculator\n----------\n\nTo serve the app calculator, use::\n\n    $ inv run\n\nInstallation\n============\n\nEither clone this repository and install locally using `flit install -s` or use\n`pip install covid-models`. If you do not have flit, install it using either your distribution\npackage manager or use `pip install flit --user`.\n\nThe model\n=========\n\nSEICHAR is a compartmental model with 8 compartments: Recovered, Fatalities, Susceptible, Exposed,\nInfectious, Critical (require ICU care), Hospitalized (or requires hospitalization) and Asymptomatic.\n\nIt is governed by the following dynamics:\n\nBasic theoretical results\n-------------------------\n\nIf we ignore the \"Exposed\" compartment, it is easy to derive R0 for this model. We must, however,\nconsider the number of equivalent infectious :math:`I_e = I + \\mu A`, in which asymptomatic individuals\ncontribute less to the overall number of infectious than symptomatic cases.\n\nWhen :math:`S \\simeq N`, this quantity experience an exponential growth and we can associate R0 with\n:math:`R_0 = \\frac{\\beta}{\\gamma}\\left[1 - (1 - \\mu) p_s\\right]`\n\nDefault parameters\n------------------\n\n+------------------+----------------------+------------------------------------+\n| Parameter        | Default value        | Reference                          |\n+==================+======================+====================================+\n|                  |                      |                                    |\n+------------------+----------------------+------------------------------------+\n\nParameters and references\n=========================\n\nEpidemiological parameters\n--------------------------\n\nClinical parameters\n-------------------\n\nRequired medical resources\n--------------------------\n\nDevelopment\n===========\n\nTesting\n-------\n\nSimply perform::\n\n    $ inv test\n\nManaging i18n\n-------------\n\nTo update messages files::\n\n    $ inv makemessages\n\nTo compile messages files::\n\n    $ inv compilemessages\n\nTo update and compile messages files::\n\n    $ inv i18n\n\nUsing rit tunnel\n----------------\n\nAfter installing `rit <https://gitlab.com/ritproject/cli#installation>`_, config your tunnel repo:\n\n- Remotely::\n\n  $ rit config tunnel add repo https://gitlab.com/pydemic/tunnel --name pydemic\n  $ rit config tunnel default set pydemic --path .\n\n- Locally::\n\n  $ git clone https://gitlab.com/pydemic/tunnel ../tunnel\n  $ rit config tunnel add local ../tunnel --name pydemic\n  $ rit config tunnel default set pydemic --path .\n\nExamples of usage:\n\n- If you use docker and docker-compose, you can:\n\n  - Build the development image::\n\n    $ rit tunnel run apps calculator development build\n\n  - Fetch the development docker-compose::\n\n    $ rit tunnel run apps calculator development fetch compose\n\n  - Run the test pipeline::\n\n    $ rit tunnel run apps calculator development test up\n    $ rit tunnel run apps calculator development test sync\n    $ rit tunnel run apps calculator development test all\n    $ rit tunnel run apps calculator development test down\n\n  - Build the production image::\n\n    $ rit tunnel run apps calculator production build\n\n  - Fetch the production docker-compose::\n\n    $ rit tunnel run apps calculator production fetch compose\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 38,
        "query": "\n**Status: UNMAINTAINED**\n\nContact me if you want to take the lead.\n\n\n\n\ndj-revproxy\n-----------\n\nDjango reverse proxy. Allows you to proxy any website behind a prefix.\n\nRequirements\n------------\n\n- `Python <http://www.python.org>`_ 2.x superior to 2.5 and Django\n- `Django <http://www.djangoproject.org>`_  >= 1.2\n- `restkit <http://benoitc.github.com/restkit>`_ >= 2.3.2\n\nInstallation\n------------\n\nInstall from sources::\n\n  $ python setup.py install\n\nOr from Pypi::\n\n  $ easy_install -U dj-revproxy \n\nConfiguration\n-------------\n\nAdd `revproxy`  to the list of applications::\n\n    INSTALLED_APPS = (\n        ...\n        'revproxy'\n    )\n\nUsage\n-----\n\nSince 0.2, there is 2 ways to use dj-revproxy.\n\n\n1. Generic view\n+++++++++++++++\n\nYou can use ``proxy_request`` function to proxy any url. You can use it in your code::\n\n    proxy_request(request, \"http://example.com\")\n\nThis code will proxy current request to ``http://example.com`` domain.\nThis function can take 5 parameters:\n\n- destination: string, the proxied url. Required\n- path: string, If no path is given it will try to detect the url using\n  the prefix if it's given. If not full request.path will be used in\n  finl destination url.\n- prefix: string, the prrefix behind we proxy the path\n  headers: dict, custom HTTP headers\n- no_redirect: boolean, False by default, do not redirect to \"/\" \n  if no path is given\n- decompress: boolean, False by default. If true the proxy will\n  decompress the source body if it's gzip encoded.\n\nIt return an instance of ``django.http.HttpResponse``. You can use it  directly\nin your urls.py (which is the eaiest way to use). Ex::\n\n    (r'^gunicorn(?P<path>.*)', \"revproxy.proxy.proxy_request\", {\n        \"destination\": \"http://gunicorn.org\"\n    }),\n\n2. Configure multiple proxy behind one generic prefix\n+++++++++++++++++++++++++++++++++++++++++++++++++++++\n\nTo configure a proxy add a tupple to the REVPROXY_SETTINGS list::\n\n    REVPROXY_SETTINGS = [\n        (\"_google\", \"http://google.com\"),\n        (\"_friendpaste\", \"http://www.friendpaste.com\"),\n        (\"_couchdb\", \"http://127.0.0.1:5984\"),\n    ]\n\nThen configure your proxied urls automatically do something like this in\n``urls.py``:: \n    from django.conf.urls.defaults import *\n\n    import revproxy.proxy\n\n    urlpatterns = patterns('',\n        ...\n        (r'^proxy/', include(proxy.site_proxy.urls)),\n    )\n\nWhich will allow you to proxy Google on the url::\n\n    http://127.0.0.1:8000/proxy/_google\n\nor even::\n\n    ('^proxy/(?P<prefix>[^\\/]*)(.*)', \"proxy.site_proxy\"),\n\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 39,
        "query": "**NOTE: This repository is now mostly in archive.** Please head over to the `Mathics3 mathics-core github repository <https://github.com/Mathics3/mathics-core>`_.\n\nWelcome to Mathics!\n===================\n\n|Pypi Installs| |Latest Version| |Supported Python Versions| |Travis|_ |SlackStatus|_\n\n|Packaging status|\n\n\nMathics is a general-purpose computer algebra system (CAS). It is an open-source alternative to Mathematica. It is free both as in \"free beer\" and as in \"freedom\".\n\nThe home page of Mathics is https://mathics.org.\n\n\nScreenShots\n-----------\n\nmathicsscript: a text interface\n+++++++++++++++++++++++++++++++\n\n|mathicsscript|\n\nmathicsserver: a Django-based Web interface\n+++++++++++++++++++++++++++++++++++++++++++\n\n|mathicssserver|\n\n\nInstalling and Running\n----------------------\n\nSee the `read the docs guide <https://mathics-development-guide.readthedocs.io/en/latest/>`_ for instructions on `installing <https://mathics-development-guide.readthedocs.io/en/latest/installing.html>`_ and `running <https://mathics-development-guide.readthedocs.io/en/latest/running.html>`_.\n\nContributing\n------------\n\nPlease feel encouraged to contribute to Mathics! Create your own fork, make the desired changes, commit, and make a pull request.\n\n\nLicense\n-------\n\nMathics is released under the GNU General Public License Version 3 (GPL3).\n\n.. |SlackStatus| image:: https://mathics-slackin.herokuapp.com/badge.svg\n.. _SlackStatus: https://mathics-slackin.herokuapp.com/\n.. |Travis| image:: https://secure.travis-ci.org/mathics/Mathics.svg?branch=master\n.. _Travis: https://travis-ci.org/mathics/Mathics\n.. _PyPI: https://pypi.org/project/Mathics/\n.. |mathicsscript| image:: https://github.com/Mathics3/mathicsscript/blob/master/screenshots/mathicsscript1.gif\n.. |mathicssserver| image:: https://mathics.org/images/mathicsserver.png\n.. |Latest Version| image:: https://badge.fury.io/py/Mathics3.svg\n\t\t :target: https://badge.fury.io/py/Mathics3\n.. |Pypi Installs| image:: https://pepy.tech/badge/Mathics3\n.. |Supported Python Versions| image:: https://img.shields.io/pypi/pyversions/Mathics3.svg\n.. |Packaging status| image:: https://repology.org/badge/vertical-allrepos/mathics.svg\n\t\t\t    :target: https://repology.org/project/mathics/versions\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 40,
        "query": ".. contents::\n\nDEPRECATED\n==========\n\nUse `collective.factorymenu`_ on modern Plone.\n\nSummary\n=======\n\nThis product make possible the customization of the Plone \"*Add new...*\" menu, commonly filled\nfrom the Plone available content types.\n\nThis is designed for avoiding useless content types but, at the same time, help UI experience of\nnon-technical users.\n\nYou can use this to add new non-standard stuff to the menu (like JavaScript links). See below.\n\nIdea behind this\n================\n\nThe case is related to developed content types that gets added to Plone only for *usability* enhancements.\n\nOne example: have you ever used Plone4ArtistsVideo, or `collective.flowplayer`__?\nIn those products users that want to add new video to a site must use the \"*Add new...*\" menu and select\nthe *File* content.\n\n__ http://pypi.python.org/pypi/collective.flowplayer\n\nSo the editor (that is *never* a developer in real life... you must accept it) must know that when he add\na new file, it magically became a video... This is not so simple to understand; also is impossible to\nunderstand it without a training or by past experience.\nCan't be better if the user could read \"*Add new video*\" in the menu instead?\n\nRight now the best usability choice is to add a new content type to the menu, or develop a new helper portlet\nthat show some links like \"*add a new video here*\".\n\nIn the first case, just copy/paste the original used content if enough (copy/paste the *File* content type and\nrename it in something like \"Video\").\nBut you know... we don't really need those new content types.\n\nIn the second case all is ok, but what Plone users know is to look at the right menu to search for addable\ntypes, not to look in a menu and *also* in another place.\n\nSo:\n\n* user know that for adding new content types, they must use the \"*Add new...*\"\n* users often ignores the magic behind Plone (like the File that became a Video)\n* developer don't like to add new silly content types only to help end users (no, the are not bad guys).\n\nThe problem above is related to the not-customizable state of the \"Add new...\" menu: the editor and the\ndeveloper will be both happy if a new, fake entry could be added to this menu.\nGoing back to the video example:\n\n* the classic *File* entry (that point to *http://myhost/mysite/createObject?type_name=File*)\n* a new \"Video\" entry (again pointing to *http://myhost/mysite/createObject?type_name=File*)\n\nThis products is designed only for this or similar usability issues, however can help you to customize\nexisting elements of the menu on context (for example: the action of adding a new \"News Item\" content in\na folder can be customized to be an alias for another content type, but only for this special folder,\nor you can disable with a falsy espression a content type in a folder, ...).\n\nHow to use\n==========\n\nInstallation\n------------\n\nSimply add the egg to your buildout, and re-run it.\n\n::\n\n    [instance]\n    ...\n    eggs =\n        ...\n        redturtle.custommenu.factories\n    ...\n\nRemember to add also the ZCML slug and overrides if you are testing this on Plone 3.2 or lesser.\n\nAfter this, install the new product in Plone.\n\nCustomize the menu\n------------------\n\nIn your \"Add new...\" menu you'll find a new \"*Customize menu...*\" entry. This will lead you to a\nform where you must enable customization feature on the current context.\nAfter this you can use the a customization form where you can manage local menu changes.\n\n.. figure:: http://keul.it/images/plone/redturtle.customizemenu.factories1.png\n   :align: left\n\nFor every new entry you can/must fill this informations:\n\n`id`\n    Enter here a string to be used to add an HTML id attribute to the new element. You can not provide\n    it, but if you use an already existing ids, the new one will override the old.\n    In this way you can *replace* one of the native (or inherited) menu entry with a new ones.\n`name`\n    Required.\n    Provide the string to be used for displaying the new element.\n`description`\n    The description is used to provide a tooltips hovering the element.\n`icon`\n    A TALES expression that can be used to give an icon to the new element (very common).\n`condition`\n    A TALES condition expression. If not provided, the new element is added to the menu. In provided\n    it is evaluated as True or False, so the element is displayed or not.\n`URL`\n    Required.\n    A TALES expression used to render the HREF attribute on the link in the element. You have total freedom\n    here: you can also render a string as \"*javascript:...*\" to provide some Javascript features.\n\nAlso you can inherit the customization done in the site root everywhere in the site, adding this to all\nother customizations. You can also locally block the inherit of root customization but you can also make\nnew menu elements defined in the root available only in the root itself.\n\nAlso, you can give a right *id* to new entries not only to override menu element from Plone normal\nbehaviour, but also for change a customization done in the site root.\n\n.. figure:: http://keul.it/images/plone/redturtle.customizemenu.factories2.png\n   :align: left\n\nTALES expressions\n-----------------\n\nIn the TALES expression above, you can use those variables:\n\n `context`\n     The current context, as Plone normal meaning\n `container`\n     The container of the current context, or the context itself if the context is a container. This is\n     useful when writing expression that keep in mind the default document in a folder.\n `portal_url`\n     The *portal_url* tool, taken from the Plone site.\n\nGeneric setup support\n---------------------\n\nJuan. [nueces] provided Generic Setup support for this package:\n\n.. code:: xml\n\n    <?xml version=\"1.0\"?>\n    <object>\n      <property name=\"inherit\">True</property>\n      <custommenu>\n        <property name=\"element-id\">pdf-file</property>\n        <property name=\"element-name\">PDF Document</property>\n        <property name=\"element-descr\">A file content to be filled with a PDF document</property>\n        <property name=\"icon-tales\">string:$portal_url/pdf_icon.gif</property>\n        <property name=\"condition-tales\"></property>\n        <property name=\"element-tales\">string:${container/absolute_url}/createObject?type_name=File</property>\n      </custommenu>\n      <custommenu>\n          ...\n      </custommenu>\n      <object name=\"documents\">\n        <property name=\"inherit\">True</property>\n        <custommenu>\n            ...\n        </custommenu>\n        <object name=\"ebooks\">\n           <property name=\"inherit\">True</property>\n           <custommenu>\n                ...\n           </custommenu>\n           ...\n        </object>\n        ...\n      </object>\n      ...\n    <object>\n\nFor a complete code check `collective.examples.custommenufactories`__.\n\n__ http://svn.plone.org/svn/collective/collective.examples.custommenufactories/trunk/\n\nDependencies\n============\n\nAll Plone versions from 3.3 to 4.3 has been tested.\n\nTODO\n====\n\n* JavaScript features for managing entries\n* code needs refactoring\n* think about inherit customizations not only from portal root\n* subsites testing needed\n\n.. _collective.factorymenu: https://github.com/collective/collective.factorymenu\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 41,
        "query": "SMBL - SnakeMake Bioinformatics Library\n=======================================\n\n.. image:: https://travis-ci.org/karel-brinda/smbl.svg?branch=master\n\t:target: https://travis-ci.org/karel-brinda/smbl\n\n.. image:: https://travis-ci.org/karel-brinda/smbl.svg?branch=devel\n\t:target: https://travis-ci.org/karel-brinda/smbl\n\n\n**SMBL is deprecated and is not maintained any more. We recommend to replace it by BioConda (see https://bioconda.github.io).**\n\n\nShort description\n-----------------\n\n**SMBL** is a library of some useful rules and Python functions which can be used in Snakemake (https://bitbucket.org/johanneskoester/snakemake/) pipelines. It makes possible to automatically\ninstall various bioinformatics programs like read mappers, read simulators, conversion tools, etc.\nIt supports also downloading and conversion of some important references in FASTA format (e.g., human genome).\n\n\nInstallation / upgrade\n----------------------\n\nTo install SMBL, you need to have Unix-like operating system (e.g., Linux, MacOS) and Python at least 3.3.\nInstallation / upgrade can be performed using the following command.\n\n.. code-block:: bash\n\n\tpip3 install --upgrade smbl\n\n\nIf SnakeMake has not been installed, yet, it will\nbe installed automatically with SMBL.\n\nThe current version of SMBL from git can be installed by\n\n.. code-block:: bash\n\n\tpip3 install --upgrade git+git://github.com/karel-brinda/smbl\n\n\nRequirements\n------------\n\nTo be able to download and install software automatically, SMBL requires the following programs to be present in you Unix system:\n\n* wget or curl\n* gcc 4.7+\n* git\n* make\n\n\nUsage\n-----\n\nTo use SMBL, you have to import the *smbl*  Python package and include a file with all rules using:\n\n.. code-block:: python\n\n\timport smbl\n\tinclude: smbl.include()\n\n\nThen you can use all supported programs or data. When they appear as input of a rule, they will be downloaded or compiled.\n\nAll the programs are installed into ``~/.smbl/bin/`` and all FASTA files into ``~/.smbl/fa/``.\n\n\nPrograms\n^^^^^^^^\n\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| Program                | Variable with its filename              | Link                                                                    |\n+========================+=========================================+=========================================================================+\n| art\\_454               | ``smbl.prog.ART_454``                   | http://www.niehs.nih.gov/research/resources/software/biostatistics/art/ |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| art\\_illumina          | ``smbl.prog.ART_ILLUMINA``              | http://www.niehs.nih.gov/research/resources/software/biostatistics/art/ |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| art\\_solid             | ``smbl.prog.ART_SOLID``                 | http://www.niehs.nih.gov/research/resources/software/biostatistics/art/ |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| bcftools               | ``smbl.prog.BCFTOOLS``                  | http://github.com/samtools/bcftools                                     |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| bfast                  | ``smbl.prog.BFAST``                     | http://github.com/nh13/bfast                                            |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| bgzip                  | ``smbl.prog.BGZIP``                     | http://github.com/samtools/htslib                                       |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| bowtie2                | ``smbl.prog.BOWTIE2``                   | http://github.com/BenLangmead/bowtie2                                   |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| bowtie2-build          | ``smbl.prog.BOWTIE2_BUILD``             | http://github.com/BenLangmead/bowtie2                                   |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| bowtie2-inspect        | ``smbl.prog.BOWTIE2_INSPECT``           | http://github.com/BenLangmead/bowtie2                                   |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| bwa                    | ``smbl.prog.BWA``                       | http://github.com/lh3/bwa                                               |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| curesim.jar            | ``smbl.prog.CURESIM``                   | http://www.pegase-biosciences.com/tools/curesim/                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| curesim_eval.jar       | ``smbl.prog.CURESIM_EVAL``              | http://www.pegase-biosciences.com/tools/curesim/                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| deez                   | ``smbl.prog.DEEZ``                      | http://github.com/sfu-compbio/deez                                      |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| drfast                 | ``smbl.prog.DRFAST``                    | http://github.com/BilkentCompGen/drfast                                 |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| dwgsim                 | ``smbl.prog.DWGSIM``                    | http://github.com/nh13/dwgsim                                           |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| dwgsim\\_eval.pl        | ``smbl.prog.DWGSIM_EVAL``               | http://github.com/nh13/dwgsim                                           |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| freec                  | ``smbl.prog.FREEC``                     | http://bioinfo-out.curie.fr/projects/freec/                             |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| gem-indexer            | ``smbl.prog.GEM_INDEXER``               | http://algorithms.cnag.cat/wiki/The_GEM_library                         |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| gem-mapper             | ``smbl.prog.GEM_MAPPER``                | http://algorithms.cnag.cat/wiki/The_GEM_library                         |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| gem-2-sam              | ``smbl.prog.GEM_2_SAM``                 | http://algorithms.cnag.cat/wiki/The_GEM_library                         |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| gnuplot4               | ``smbl.prog.GNUPLOT4``                  | http://www.gnuplot.info/                                                |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| gnuplot5               | ``smbl.prog.GNUPLOT5``                  | http://www.gnuplot.info/                                                |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| kallisto               | ``smbl.prog.KALLISTO``                  | https://github.com/pachterlab/kallisto                                  |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| lastal                 | ``smbl.prog.LASTAL``                    | http://last.cbrc.jp/                                                    |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| lastdb                 | ``smbl.prog.LASTDB``                    | http://last.cbrc.jp/                                                    |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mason_frag_sequencing  | ``smbl.prog.MASON_FRAG_SEQUENCING``     | http://packages.seqan.de/mason2/                                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mason_genome           | ``smbl.prog.MASON_GENOME``              | http://packages.seqan.de/mason2/                                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mason_materializer     | ``smbl.prog.MASON_MATERIALIZER``        | http://packages.seqan.de/mason2/                                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mason_methylation      | ``smbl.prog.MASON_METHYLATION``         | http://packages.seqan.de/mason2/                                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mason_simulator        | ``smbl.prog.MASON_SIMULATOR``           | http://packages.seqan.de/mason2/                                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mason_splicing         | ``smbl.prog.MASON_SPLICING``            | http://packages.seqan.de/mason2/                                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mason_variator         | ``smbl.prog.MASON_VARIATOR``            | http://packages.seqan.de/mason2/                                        |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mrfast                 | ``smbl.prog.MRFAST``                    | http://github.com/BilkentCompGen/mrfast                                 |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| mrsfast                | ``smbl.prog.MRSFAST``                   | http://mrsfast.sourceforge.net/                                         |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| perm                   | ``smbl.prog.PERM``                      | http://code.google.com/p/perm/                                          |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| pbsim                  | ``smbl.prog.PBSIM``                     | https://code.google.com/p/pbsim                                         |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| picard                 | ``smbl.prog.PICARD``                    | http://broadinstitute.github.io/picard/                                 |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| sambamba               | ``smbl.prog.SAMBAMBA``                  | http://lomereiter.github.io/sambamba/                                   |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| samtools               | ``smbl.prog.SAMTOOLS``                  | http://github.com/samtools/samtools                                     |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| sirfast                | ``smbl.prog.SIRFAST``                   | http://github.com/BilkentCompGen/sirfast                                |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| storm-color            | ``smbl.prog.STORM_COLOR``               | http://bioinfo.lifl.fr/yass/iedera_solid/storm/                         |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| storm-nucleotide       | ``smbl.prog.STORM_NUCLEOTIDE``          | http://bioinfo.lifl.fr/yass/iedera_solid/storm/                         |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| tabix                  | ``smbl.prog.TABIX``                     | http://github.com/samtools/htslib                                       |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| twoBitToFa             | ``smbl.prog.TWOBITTOFA``                | http://hgdownload.cse.ucsc.edu/admin/exe/                               |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| vcfutils.pl            | ``smbl.prog.VCFTULS``                   | http://github.com/samtools/bcftools                                     |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| wgsim                  | ``smbl.prog.WGSIM``                     | http://github.com/lh3/wgsim                                             |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| wgsim\\_eval.pl         | ``smbl.prog.WGSIM_EVAL``                | http://github.com/lh3/wgsim                                             |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n| xs                     | ``smbl.prog.XS``                        | http://bioinformatics.ua.pt/software/xs/                                |\n+------------------------+-----------------------------------------+-------------------------------------------------------------------------+\n\n\nFASTA files\n^^^^^^^^^^^\n\n+------------------------------+------------------------------------------------------------+\n| FASTA file                   | Variable with its filename                                 |\n+==============================+============================================================+\n| An example small FASTA file  | ``smbl.fasta.EXAMPLE_1``                                   |\n+------------------------------+------------------------------------------------------------+\n| An example small FASTA file  | ``smbl.fasta.EXAMPLE_2``                                   |\n+------------------------------+------------------------------------------------------------+\n| An example small FASTA file  | ``smbl.fasta.EXAMPLE_3``                                   |\n+------------------------------+------------------------------------------------------------+\n| Human genome HG38 (GRCh38)   | ``smbl.fasta.HG38``, ``smbl.fasta.HUMAN_GRCH38``           |\n+------------------------------+------------------------------------------------------------+\n| Mouse genome MM10            | ``smbl.fasta.MOUSE_MM10``                                  |\n+------------------------------+------------------------------------------------------------+\n| Chimpanzee genome PANTR04    | ``smbl.fasta.CHIMP_PANTRO4``                               |\n+------------------------------+------------------------------------------------------------+\n\n\nExample\n-------\n\nThe following example demonstrates how SMBL can be used for automatic installation of software.\n\nCreate an empty file named ``Snakefile`` with the following content:\n\n.. code-block:: python\n\n\timport smbl\n\tinclude: smbl.include()\n\n\trule all:\n\t\tinput:\n\t\t\tsmbl.prog.DWGSIM,\n\t\t\tsmbl.prog.BWA,\n\t\t\tsmbl.fasta.EXAMPLE\n\t\tparams:\n\t\t\tPREF=\"simulated_reads\",\n\t\t\tINDEX=\"bwa_index\"\n\t\toutput:\n\t\t\t\"alignment.sam\"\n\t\trun:\n\t\t\t# read simulation\n\t\t\tshell(\"{input[0]} -C 1 {input[2]} {params.PREF}\")\n\n\t\t\t# creating BWA index of the reference sequence\n\t\t\tshell(\"{input[1]} index {input[2]}\")\n\n\t\t\t# mapping by BWA\n\t\t\tshell(\"{input[1]} mem {input[2]} {params.PREF}.bfast.fastq > alignment.sam\")\n\n\nRun the script.\n\n.. code-block:: bash\n\n\tsnakemake\n\n\nWhat happens:\n\n1. An example FASTA file is downloaded\n2. DwgSim and BWA are downloaded, compiled and installed\n3. DwgSim simulates reads from the example Fasta file\n4. These reads are mapped back to the reference by BWA (*alignment.sam* is created)\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 42,
        "query": "Option Merge Addons\n===================\n\nThis is a project that adds an addon system to option_merge enabled projects.\n\nDeprecated\n----------\n\nThis project has been deprecated in favour of https://github.com/delfick/delfick_project\n\nInstallation\n------------\n\nUse pip!:\n\n.. code-block:: bash\n\n    pip install option_merge_addons\n\nOr if you're developing it:\n\n.. code-block:: bash\n\n    pip install -e .\n    pip install -e \".[tests]\"\n\nTests\n-----\n\nRun the helpful script:\n\n.. code-block:: bash\n\n    ./test.sh\n\nUsage\n-----\n\nThere are two parts to using this module: the setup, and the addons.\n\nSetup\n+++++\n\n.. code-block:: python\n\n    from option_merge_addons import Result, Addon, Register, AddonGetter\n\n    # collector is passed into the hooks. It may be None\n    # It's expected to be http://option-merge.readthedocs.io/en/latest/docs/api/collector.html\n    collector = None\n\n    # Create the addon getter and register our namespace\n    addon_getter = AddonGetter()\n    addon_getter.add_namespace(\"my_amazing_addons\", Result.FieldSpec(), Addon.FieldSpec())\n\n    # Initiate the addons from our configuration\n    register = Register(addon_getter, collector)\n\n    # Register and execute our addons\n    # This will import the ns1.name1 addon, which will bring in it's dependencies\n    # and so on\n    # And then run the post_register hooks with {\"arg\": 1, \"arg2\": 2} as kwargs\n    start_addons = [(\"ns1\", \"name1\")]\n    register.register(*start_addons, my_amazing_addons={\"arg1\": 1, \"arg2\": 2})\n\nNote that you can split up that last line into different stages you run at\ndifferent times with whatever you want before. This is helpful if you want to\ndo something before calling the post_register hooks:\n\n.. code-block:: python\n\n    # Add atleast one entry point that will start importing other entry points\n    default_addons = [(\"ns1\", \"name1\"), (\"ns2\", \"name2\")]\n    register.add_pairs(*default_addons)\n\n    # Import our addons\n    register.recursive_import_known()\n\n    # Resolve our addons\n    register.recursive_resolve_imported()\n\n    # extra_args specifies what goes into the post_register hooks\n    extra_args = {\"my_amazing_addons\": {\"arg1\": 1}}\n    self.register.post_register(extra_args)\n\nYou can also define your own entry points programmatically by doing something\nlike:\n\n.. code-block:: python\n\n    # Register __main__ as an entry point\n    try:\n        __main__ = __import__(\"__main__\")\n    except ImportError:\n        pass\n    else:\n        if any(hasattr(getattr(__main__, attr, None), \"_option_merge_addon_entry\") for attr in dir(__main__)):\n            working_set = pkg_resources.working_set\n            dist = pkg_resources.Distribution(\"__main__\")\n            mp = pkg_resources.EntryPoint.parse_group(\"my_amazing_addons\", [\"__main__ = __main__\"])\n\n            def get_entry_map(group=None):\n                if group == \"my_amazing_addons\":\n                    return mp\n                return {}\n            dist.get_entry_map = get_entry_map\n            working_set.add(dist, entry=\"__main__\")\n\nDefining hooks\n++++++++++++++\n\nThere are two parts to defining a hook. The first part is to define it:\n\n.. code-block:: python\n\n    from option_merge_addons import option_merge_addon_hook\n\n    @option_merge_addon_hook(extras=[('my_amazing_addons', 'thing1'), ('my_amazing_addons', 'thing2')])\n    def __addon__(collector, results_maker, **kwargs):\n        # Setup things here\n        # We can return None or we can use results_maker to programmatically\n        # add more dependencies\n        return results_maker(extras=[(\"my_amazing_addons\", \"thing3\")])\n\n    @option_merge_addon_hook(post_register=True)\n    def __addon_post__(collector, **kwargs):\n        # Setup that must be done after all dependencies have been resolved\n        # And imported and had their first hook executed\n\nThe second part is to define the entry points in your setup.py. So if the above\nhooks was at ``my_amazing_module.addons`` then your setup.py would look like:\n\n.. code-block:: python\n\n    from setuptools import setup\n\n    setup(\n          ...\n\n          , entry_points =\n          { \"my_amazing_addons\": [\"amazing = my_amazing_module.addon\"]\n          }\n        )\n\nOnce this package is installed in your environment, you may depend on it by\nspecifying ``(\"my_amazing_addons\", \"amazing\")``.\n\nImport Order\n++++++++++++\n\nThe several passes of importing modules goes as follows:\n\n1. Import all our known hooks\n2. Keep importing all the dependencies that we find\n3. Once we've imported everything, start calling the hooks and add any depdencies\n   returned by the hooks to our known addons.\n4. Go to step 1 unless we've imported and resolved everything\n\nThe order is such that all dependencies are resolved before a hook that asked\nfor dependencies is resolved.\n\nThe post_register also follows this where all dependencies are resolved before\na hook that asks for them.\n\nAsking for all hooks in a namespace\n+++++++++++++++++++++++++++++++++++\n\nYou may specify a special ``(\"namespace\", \"__all__\")``  dependency which will\nmake that hook depend on all hooks that haven't already been imported. Note that\nthis should be used sparingly as a hook that asks for it cannot be explicitly\nasked for by another hook.\n\nChangelog\n---------\n\n0.3\n    Made it possible to specify ``(\"namespace\", \"__all__\")`` from a hook\n\n0.2.1\n    No changelog was kept before now\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    },
    {
        "id": 43,
        "query": "flask-saml2\n===========\n\n.. note::\n    **Looking for maintainers**. This project is unmaintained. The library works, or did when I last used it,\n    but I no longer work on the project this was built for. If you are interested in taking over leadership\n    and maintenance of this project, please get in touch.\n\n.. image:: https://travis-ci.com/timheap/flask-saml2.svg?branch=master\n    :target: https://travis-ci.com/timheap/flask-saml2\n.. image:: https://badge.fury.io/py/flask-saml2.svg\n    :target: https://pypi.org/project/flask-saml2/\n.. image:: https://readthedocs.org/projects/flask-saml2/badge/?version=latest\n    :target: https://flask-saml2.readthedocs.io/en/latest/\n\nThis Flask plugin provides functionality for creating both SAML Service\nProviders and Identity Providers. Applications can implement one or both of\nthese providers.\n\n``flask-saml2`` works with Flask 1.0+ and Python 3.6+.\n\nThis is a heavily modified fork of `NoodleMarkets/dj-saml-idp`_ which in turn\nis a fork of `deforestg/dj-saml-idp`_ which in turn is a fork of\n`novapost/django-saml2-idp`_.\n\nTerminology\n-----------\n\nFor a full description of how SAML works, please seek guides elsewhere on the\ninternet. For a quick introduction, and a run through of some of the\nterminology used in this package, read on.\n\nThe SAML protocal is a conversation between two parties:\n**Identity Providers (IdP)** and **Service Providers (SP)**.\nWhen an unauthenticated client (usually a browser) accesses a Service Provider,\nthe Service Provider will make an **authentication request (AuthnRequest)**,\nsign it using its private key, and then forward this request via the client to\nthe Identity Provider. Once the client logs in at the central Identity\nProvider, the Identity Provider makes a response, signs it, and forwards this\nresponse via the client to the requesting Service Provider. The client is then\nauthenticated on the Service Provider via the central Identity Provider,\nwithout the Service Provider having to know anything about the authentication\nmethod, or any passwords involved.\n\nExample implementations\n-----------------------\n\nA minimal but functional example implementation of both a Service Provider and\nan Identity Provider can be found in the ``examples/`` directory of this\nrepository. To get the examples running, first clone the repository and install\nthe dependencies:\n\n.. code-block:: console\n\n    $ git clone https://github.com/timheap/flask-saml2\n    $ cd flask-saml2\n    $ python3 -m venv venv\n    $ source venv/bin/activate\n    $ pip install -e .\n    $ pip install -r tests/requirements.txt\n\nNext, run the IdP and the SP in separate terminal windows:\n\n.. code-block:: console\n\n    $ cd flask-saml2\n    $ source venv/bin/activate\n    $ ./examples/idp.py\n\n.. code-block:: console\n\n    $ cd flask-saml2\n    $ source venv/bin/activate\n    $ ./examples/sp.py\n\nFinally, navigate to http://localhost:9000/ to access the Service Provider\nlanding page.\n\nTesting\n-------\n\nThe test runner is `pytest` and we are using `tox` to run tests against\ndifferent versions of Flask and Python. The test can be run locally using\n`tox` directly (preferably in a virtual environment)::\n\n    $ pip install tox\n    $ tox\n\nLicense\n-------\n\nDistributed under the `MIT License`_.\n\n.. _`NoodleMarkets/dj-saml-idp`: https://github.com/NoodleMarkets/dj-saml-idp\n.. _`deforestg/dj-saml-idp`: https://github.com/deforestg/dj-saml-idp\n.. _`novapost/django-saml2-idp`: https://github.com/novapost/django-saml2-idp\n.. _`MIT License`: https://github.com/mobify/dj-saml-idp/blob/master/LICENSE\n",
        "model_answer": "",
        "alternative_method": "",
        "label": 1
    }
]